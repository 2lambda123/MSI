function MSI_SetupCooking: Boolean;
var
  i: Integer;
  recipe: TMaterial;
begin
  if (not LoggedIn) then
    Exit;

  MSI_AddHeader('MSI_SetupCooking');

  with MSI_Players[CurrentPlayer] do
    if (MSI_Scripts[Scripts[CurrentScript].Name].GetMaterials) then
      for i := 0 to High(Scripts[CurrentScript].Materials) do
      begin
        recipe := MSI_GetMaterial(Scripts[CurrentScript].Materials[i]);

        if (ReportInfo.SkillLevels[CurrentScript] < recipe.Level) then
        begin
          MSI_SubDebug('Not high enough level(' + IntToStr(ReportInfo.SkillLevels[CurrentScript]) + ') to cook ' +recipe.Name);
          Continue;
        end;

        if (CountItems('dtm', MSI_Items[recipe.Supplies[0][0]].DTM, []) <= 0) then
        begin
          MSI_Debug('Withdrawing items..');
          Result := MSI_Scripts[Scripts[CurrentScript].Name].BankObjects();
        end else begin
          MSI_Debug('Cooking items found in inventory');
          Result := True;
        end;

        if (Result) then
          Break;
      end
    else
      MSI_Debug('Script doesn''t require item withdrawing');

  MSI_CloseHeader('MSI_SetupCooking: ' + BoolToStr(Result));
end;

function MSI_CookAll(recipe: TMaterial): Boolean;
var
  x, y, t, i: Integer;
begin
  if (not LoggedIn) then
    Exit;

  if WaitFunc(@MSI_CB_DoAllScreen, 50, 5000) then
    for i := 0 to High(recipe.Supplies) do
      if (FindDTM(MSI_Items[recipe.Supplies[i][0]].DTM, x, y, MCx1, MCy1, MCx2, MCy2)) then
      begin
        MMouse(x, y, -25, 25);

        if (WaitUpTextMulti(['ook A', 'k All', 'ook', 'll'], 2000)) then
        begin
          Result := True;
          Break;
        end;
      end;

  if Result then
  begin
    GetMousePos(x, y);
    Mouse(x, y, 0, 0, True);
  end else begin
    MSI_SubDebug('MSI_CookAll: Failed to select option.');
    Exit;
  end;

  t := (GetSystemTime + 5000);
  while MSI_CB_DoAllScreen and (t > GetSystemTime) do
    Wait(50);

  Result := (not MSI_CB_DoAllScreen);
end;

function MSI_CookFood(recipe: TMaterial) : Boolean;
begin
  if (not LoggedIn) then
    Exit;

  MSI_AddHeader('MSI_CookFood');

  with MSI_Players[CurrentPlayer] do
    if (MSI_UseItemOn(recipe.Supplies[0][0], Scripts[CurrentScript].CookingSpot)) then
      if (MSI_CookAll(recipe)) then
        Result := MSI_WaitItemGone(MSI_Items[recipe.Supplies[0][0]]);

  MSI_CloseHeader('MSI_CookFood: ' + BoolToStr(Result));
end;

function MSI_CookFullInv: Boolean;
var
  i, t: Integer;
  recipe: TMaterial;
begin
  if (not LoggedIn) then
    Exit;

  t := (GetSystemTime + (60000 * 10));

  repeat
    with MSI_Players[CurrentPlayer] do
    begin
      MSI_Relocate(Location);

      for i := 0 to High(Scripts[CurrentScript].Materials) do
      begin
        recipe := MSI_GetMaterial(Scripts[CurrentScript].Materials[i]);

        if (MSI_CookFood(recipe)) then
        begin
          Result := True;
          MSI_AddToProggy(PROG_ADD_LOADS, -1, -1, -1);
          stats_IncVariable('Loads Done', 1);
          stats_Commit;
          Location := MSI_Scripts[Scripts[CurrentScript].Name].PathInfo.EndLoc;
        end;
      end;
    end;
  until(Result or (GetSystemTime > t));
end;

