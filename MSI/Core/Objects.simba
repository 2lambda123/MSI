{==============================================================================\
|                         MSI Group Scripting Include                          |
|                                Objects.scar                                  |
|==============================================================================|
| Object and Item finding routines                                             |
|                                                                              |
| * function MSI_LoadObject(): Boolean;                   * by The MSI Team    |
| * procedure MSI_LoadAllObjects;                         * by Coh3n           |
| * function MSI_GetObjects(): TMSObjectArray;            * by marpis          |
| * function MSI_MakeBox(): TBox;                         * by Sir R. Magician |
| * function MSI_ReturnPointsInBox(): TPointArray;        * by marpis          |
| * function MSI_FindObjectsTPA(): Boolean;               * by marpis          |
| * function MSI_TrackObject(): Boolean;                  * by marpis & RM     |
| * function MSI_FindObjectsIn(): Boolean;                * by marpis          |
| * function MSI_FindObjects(): Boolean;                  * by marpis          |
| * function MSI_FindObjectIn(): Boolean;                 * by marpis          |
| * function MSI_FindObject(): Boolean;                   * by marpis          |
 \_____________________________________________________________________________}

 const
   DIST_PIXEL_MOVE = 15; // MSI_TrackObject

 var
   NotBoxes: TBoxArray; // Used to track bad TPA points and avoid hovering wrong objects

{******************************************************************************}
{ function MSI_LoadObject(whichObject: Integer): Boolean;                      }
{ By: The MSI Team                                                             }
{ Date: 17 July 2010                                                           }
{ Description: Load all the necessary object information; should only be       }
{              called in MSI_LoadAllObjects                                    }
{******************************************************************************}
function MSI_LoadObject(whichObject: Integer): Boolean;
begin
  case whichObject of
    { TREES ====================================== ]
    [============================================= }
    TREE_NORMAL:
      with MSI_Objects[whichObject] do
      begin
        Name               := 'Normal Tree';
        UpText             := 'ree';
        Option             := 'own Tree';
        Colors             := [2117186];
        Tol                := 6;
        Hue                := 0.09;
        Sat                := 1.26;
        FindAllColors      := False;
        W                  := 35;
        H                  := 35;
        Accuracy           := 10;
        ExcludeSelf        := True;
        RightClickOnly     := False;
        Tries              := 5;
        Anim               := False;
        WaitToMove         := True;
        MaxTime            := 10000;
        BadColors          := [];
        BadColorTolerance  := 10;
        AssociatedItems    := [LOGS_NORMAL];
      end;

    TREE_OAK:
      with MSI_Objects[whichObject] do
      begin
        Name               := 'Oak Tree';
        UpText             := 'Oak';
        Option             := 'own Oak';
        Colors             := [6330764, 6398099, 6133129, 6527886, 6464148];
        Tol                := 10;
        Hue                := 0.07;
        Sat                := 0.64;
        FindAllColors      := False;
        W                  := 50;
        H                  := 50;
        Accuracy           := 10;
        ExcludeSelf        := True;
        RightClickOnly     := False;
        Tries              := 5;
        Anim               := False;
        WaitToMove         := True;
        MaxTime            := 20000;
        BadColors          := [];
        BadColorTolerance  := 10;
        AssociatedItems    := [LOGS_OAK];
      end;

    TREE_WILLOW:
      with MSI_Objects[whichObject] do
      begin
        Name               := 'Willow tree';
        UpText             := 'wn Wil';
        Option             := 'Chop down Willow';
        Colors             := [4481105];
        Tol                := 14;
        Hue                := 0.18;
        Sat                := 0.28;
        FindAllColors      := False;
        W                  := 30;
        H                  := 30;
        Accuracy           := 10;
        ExcludeSelf        := True;
        RightClickOnly     := False;
        Tries              := 5;
        Anim               := False;
        WaitToMove         := True;
        MaxTime            := 30000;
        BadColors          := [];
        BadColorTolerance  := 10;
        AssociatedItems    := [LOGS_WILLOW];
      End;

    TREE_MAPLE:
      with MSI_Objects[whichObject] do
      begin
        Name               := 'Maple tree';
        UpText             := 'wn Map';
        Option             := 'Chop down Maple';
        Colors             := [1187644];
        Tol                := 4;
        Hue                := 0.10;
        Sat                := 0.54;
        FindAllColors      := False;
        W                  := 25;
        H                  := 25;
        Accuracy           := 10;
        ExcludeSelf        := True;
        RightClickOnly     := False;
        Tries              := 5;
        Anim               := False;
        WaitToMove         := True;
        MaxTime            := 35000;
        BadColors          := [];
        BadColorTolerance  := 10;
        AssociatedItems    := [LOGS_MAPLE];
      end;

    TREE_YEW:
      with MSI_Objects[whichObject] do
      begin
        Name               := 'Yew Tree';
        UpText             := 'own Yew';
        Option             := 'Chop down Yew';
        Colors             := [2314052];
        Tol                := 9;
        Hue                := 0.06;
        Sat                := 0.59;
        FindAllColors      := False;
        W                  := 50;
        H                  := 50;
        Accuracy           := 15;
        ExcludeSelf        := True;
        RightClickOnly     := False;
        Tries              := 5;
        Anim               := False;
        WaitToMove         := True;
        MaxTime            := 60000;
        BadColors          := [];
        BadColorTolerance  := 10;
        AssociatedItems    := [LOGS_YEW];
      end;

    TREE_MAGIC:
      with MSI_Objects[whichObject] do
      begin
        Name               := 'Magic tree';
        UpText             := 'gic tre';
        Option             := 'down Mag';
        Colors             := [11069677];
        Tol                := 13;
        Hue                := 0.03;
        Sat                := 2.12;
        FindAllColors      := False;
        W                  := 60;
        H                  := 70;
        Accuracy           := 20;
        ExcludeSelf        := True;
        RightClickOnly     := False;
        Tries              := 20;
        Anim               := False;
        WaitToMove         := True;
        MaxTime            := 60000;
        BadColors          := [];
        BadColorTolerance  := 10;
        AssociatedItems    := [LOGS_MAGIC];
      end;

    { BANKS ====================================== ]
    [============================================= }
    MSI_BANK_VE:
      with MSI_Objects[whichObject] do
      begin
        Name               := 'Varrock east bank';
        UpText             := 'ooth';
        Option             := 'uick';
        Colors             := [6715005];//2379871
        Tol                := 4;
        Hue                := 0.19;
        Sat                := 0.31;
        FindAllColors      := False;
        W                  := 33;
        H                  := 30;
        Accuracy           := 15;
        ExcludeSelf        := True;
        RightClickOnly     := True;
        Tries              := 7;
        Anim               := False;
        WaitToMove         := False;
        BadColors          := [];
        BadColorTolerance  := 10;
      end;

     MSI_BANK_DB:
       with MSI_Objects[whichObject] do
       begin
         Name               := 'Draynor bank';
         UpText             := 'boo';
         Option             := 'uick';
         Colors             := [869212];
         Tol                := 5;
         Hue                := 0.05;
         Sat                := 0.29;
         FindAllColors      := False;
         W                  := 50;
         H                  := 50;
         Accuracy           := 20;
         ExcludeSelf        := True;
         RightClickOnly     := True;
         Tries              := 20;
         Anim               := False;
         WaitToMove         := False;
         BadColors          := [];
         BadColorTolerance  := 10;
       end;

     MSI_BANK_GE:
       with MSI_Objects[whichObject] do
       begin
         Name               := 'Grand Exchange bank';
         UpText             := 'anker';
         Option             := 'ank Banker';
         Colors             := [1270921];
         Tol                := 7;
         Hue                := 0.04;
         Sat                := 0.23;
         FindAllColors      := False;
         W                  := 10;
         H                  := 10;
         Accuracy           := 15;
         ExcludeSelf        := True;
         RightClickOnly     := True;
         Tries              := 10;
         Anim               := False;
         WaitToMove         := False;
         BadColors          := [];
         BadColorTolerance  := 10;
       end;

     MSI_BANK_FE:
       with MSI_Objects[whichObject] do
       begin
         Name               := 'Falador east bank';
         UpText             := 'ooth';
         Option             := 'uick';
         Colors             := [7044234];
         Tol                := 5;
         Hue                := 0.24;
         Sat                := 0.47;
         FindAllColors      := False;
         W                  := 35;
         H                  := 40;
         Accuracy           := 20;
         ExcludeSelf        := True;
         RightClickOnly     := True;
         Tries              := 8;
         Anim               := False;
         WaitToMove         := False;
         BadColors          := [];
         BadColorTolerance  := 10;
       end;

     MSI_BANK_VW:
       with MSI_Objects[whichObject] do
       begin
         Name               := 'Varrock west bank';
         UpText             := 'ooth';
         Option             := 'uick';
         Colors             := [5794933];
         Tol                := 8;
         Hue                := 0.13;
         Sat                := 0.69;
         FindAllColors      := False;
         W                  := 15;
         H                  := 30;
         Accuracy           := 20;
         ExcludeSelf        := True;
         RightClickOnly     := True;
         Tries              := 5;
         Anim               := False;
         WaitToMove         := False;
         BadColors          := [];
         BadColorTolerance  := 10;
       end;

     MSI_BANK_EV:
       with MSI_Objects[whichObject] do
       begin
         Name               := 'Edgeville bank';
         UpText             := 'ooth';
         Option             := 'uick';
         Colors             := [4149854, 4215904];
         Tol                := 3;
         Hue                := 0.21;
         Sat                := 0.51;
         FindAllColors      := False;
         W                  := 20;
         H                  := 35;
         Accuracy           := 50;
         ExcludeSelf        := True;
         RightClickOnly     := True;
         Tries              := 5;
         Anim               := False;
         WaitToMove         := False;
         BadColors          := [];
         BadColorTolerance  := 10;
       end;

     DBOX_PS:
       with MSI_Objects[whichObject] do
       begin
         Name               := 'Port Sarim deposit box';
         UpText             := 'eposit';
         Option             := 'it Bank';
         Colors             := [5202031, 6320253, 5859188, 4741996, 437569, 4215135];
         Tol                := 7;
         Hue                := 0.05;
         Sat                := 0.58;
         FindAllColors      := False;
         W                  := 30;
         H                  := 60;
         Accuracy           := 50;
         ExcludeSelf        := True;
         RightClickOnly     := False;
         Tries              := 15;
         Anim               := False;
         WaitToMove         := False;
         BadColors          := [];
         BadColorTolerance  := 10;
       end;

    MSI_BANK_SV:
      with MSI_Objects[whichObject] do
      begin
        Name               := 'Seers Village Bank';
        UpText             := 'ooth';
        Option             := 'uick';
        Colors             := [10464171];
        Tol                := 2;
        Hue                := 0.76;
        Sat                := 0.40;
        FindAllColors      := False;
        W                  := 30;
        H                  := 20;
        Accuracy           := 7;
        ExcludeSelf        := True;
        RightClickOnly     := True;
        Tries              := 5;
        Anim               := False;
        WaitToMove         := False;
        BadColors          := [];
        BadColorTolerance  := 10;
      end;

    MSI_BANK_AK:
      with MSI_Objects[whichObject] do
      begin
        Name               := 'Al-Kharid Bank';
        UpText             := 'ooth';
        Option             := 'uick';
        Colors             := [10341105];
        Tol                := 5;
        Hue                := 0.04;
        Sat                := 4.10;
        FindAllColors      := False;
        W                  := 20;
        H                  := 15;
        Accuracy           := 25;
        ExcludeSelf        := True;
        RightClickOnly     := True;
        Tries              := 5;
        Anim               := False;
        WaitToMove         := False;
        BadColors          := [];
        BadColorTolerance  := 10;
      end;

    { ROCKS ====================================== ]
    [============================================= }
    ROCK_CLAY:
      with MSI_Objects[whichObject] do
      begin
        Name               := 'Clay';
        UpText             := 'ocks';
        Option             := 'ine';
        Colors             := [5938111];
        Tol                := 13;
        Hue                := 0.02;
        Sat                := 1.23;
        FindAllColors      := False;
        W                  := 25;
        H                  := 20;
        Accuracy           := 5;
        MaxTime            := 5000;
        ExcludeSelf        := True;
        RightClickOnly     := False;
        Tries              := 5;
        Anim               := False;
        WaitToMove         := True;
        BadColors          := [];
        BadColorTolerance  := 10;
        AssociatedItems    := [ORE_CLAY];
      end;

    ROCK_COPPER:
      with MSI_Objects[whichObject] do
      begin
        Name               := 'Copper';
        UpText             := 'ocks';
        Option             := 'ine';
        Colors             := [2650323];
        Tol                := 16;
        Hue                := 0.06;
        Sat                := 1.86;
        FindAllColors      := False;
        W                  := 29;
        H                  := 23;
        Accuracy           := 10;
        MaxTime            := 7000;
        ExcludeSelf        := True;
        RightClickOnly     := False;
        Tries              := 5;
        Anim               := False;
        WaitToMove         := True;
        BadColors          := [];
        BadColorTolerance  := 10;
        AssociatedItems    := [ORE_COPPER];
      end;

    ROCK_TIN:
      with MSI_Objects[whichObject] do
      begin
        Name               := 'Tin';
        UpText             := 'ocks';
        Option             := 'ine';
        Colors             := [7500665];
        Tol                := 14;
        Hue                := 0.18;
        Sat                := 0.06;
        FindAllColors      := False;
        W                  := 25;
        H                  := 28;
        Accuracy           := 10;
        MaxTime            := 7000;
        ExcludeSelf        := True;
        RightClickOnly     := False;
        Tries              := 5;
        Anim               := False;
        WaitToMove         := True;
        BadColors          := [];
        BadColorTolerance  := 10;
        AssociatedItems    := [ORE_TIN];
      end;

    ROCK_IRON:
      with MSI_Objects[whichObject] do
      begin
        Name               := 'Iron';
        UpText             := 'ocks';
        Option             := 'ine';
        Colors             := [2568006];
        Tol                := 5;
        Hue                := 0.07;
        Sat                := 0.18;
        FindAllColors      := False;
        W                  := 30;
        H                  := 23;
        Accuracy           := 2;
        MaxTime            := 10000;
        ExcludeSelf        := True;
        RightClickOnly     := False;
        Tries              := 5;
        Anim               := False;
        WaitToMove         := True;
        BadColors          := [];
        BadColorTolerance  := 10;
        AssociatedItems    := [ORE_IRON];
      end;

    ROCK_SILVER:
      with MSI_Objects[whichObject] do
      begin
        Name               := 'Silver';
        UpText             := 'ocks';
        Option             := 'ine';
        Colors             := [10598078];
        Tol                := 10;
        Hue                := 0.06;
        Sat                := 0.84;
        FindAllColors      := False;
        W                  := 25;
        H                  := 20;
        Accuracy           := 10;
        MaxTime            := 20000;
        ExcludeSelf        := True;
        RightClickOnly     := False;
        Tries              := 5;
        Anim               := False;
        WaitToMove         := True;
        BadColors          := [];
        BadColorTolerance  := 10;
        AssociatedItems    := [ORE_SILVER];
      end;

    ROCK_COAL:
      with MSI_Objects[whichObject] do
      begin
        Name               := 'Coal';
        UpText             := 'ocks';
        Option             := 'ine';
        Colors             := [2107946];
        Tol                := 5;
        Hue                := 1.15;
        Sat                := 0.93;
        FindAllColors      := False;
        W                  := 25;
        H                  := 20;
        Accuracy           := 5;
        MaxTime            := 35000;
        ExcludeSelf        := True;
        RightClickOnly     := False;
        Tries              := 5;
        Anim               := False;
        WaitToMove         := True;
        BadColors          := [];
        BadColorTolerance  := 10;
        AssociatedItems    := [ORE_COAL];
      end;

    ROCK_GOLD:
      with MSI_Objects[whichObject] do
      begin
        Name               := 'Gold';
        UpText             := 'ocks';
        Option             := 'ine';
        Colors             := [1092057];
        Tol                := 11;
        Hue                := 0.01;
        Sat                := 1.09;
        FindAllColors      := False;
        W                  := 25;
        H                  := 20;
        Accuracy           := 10;
        MaxTime            := 45000;
        ExcludeSelf        := True;
        RightClickOnly     := False;
        Tries              := 15;
        Anim               := False;
        WaitToMove         := True;
        BadColors          := [];
        BadColorTolerance  := 10;
        AssociatedItems    := [ORE_GOLD];
      end;

    ROCK_MITHRIL:
      with MSI_Objects[whichObject] do
      begin
        Name               := 'Mithril';
        UpText             := 'ocks';
        Option             := 'ine';
        Colors             := [6376267, 8019550];
        Tol                := 5;
        Hue                := 1.57;
        Sat                := 0.31;
        FindAllColors      := False;
        W                  := 25;
        H                  := 20;
        Accuracy           := 10;
        MaxTime            := 55000;
        ExcludeSelf        := True;
        RightClickOnly     := False;
        Tries              := 5;
        Anim               := False;
        WaitToMove         := True;
        BadColors          := [];
        BadColorTolerance  := 10;
        AssociatedItems    := [ORE_MITHRIL];
      end;

    ROCK_ADAMANTITE:
      with MSI_Objects[whichObject] do
      begin
        Name               := 'Adamantite';
        UpText             := 'ocks';
        Option             := 'ine';
        Colors             := [6517347];
        Tol                := 5;
        Hue                := 0.80;
        Sat                := 0.17;
        FindAllColors      := False;
        W                  := 25;
        H                  := 20;
        Accuracy           := 5;
        MaxTime            := 65000;
        ExcludeSelf        := True;
        RightClickOnly     := False;
        Tries              := 15;
        Anim               := False;
        WaitToMove         := True;
        BadColors          := [];
        BadColorTolerance  := 10;
        AssociatedItems    := [ORE_ADAMANTITE];
      end;

    { FISHING SPOTS ============================== ]
    [============================================= }
    FISHSPOT_NET..FISHSPOT_HARPOON:
    begin
      //same color info for all spots
      with MSI_Objects[whichObject] do
      begin
        Colors             := [11050135];
        Tol                := 7;
        Hue                := 0.26;
        Sat                := 0.62;
        FindAllColors      := False;
        W                  := 20;
        H                  := 20;
        Accuracy           := 10;
        ExcludeSelf        := True;
        Tries              := 5;
        Anim               := False;
        WaitToMove         := True;
        BadColors          := [];
        BadColorTolerance  := 10;
      end;

      case whichObject of
        FISHSPOT_NET:
          with MSI_Objects[whichObject] do
          begin
            Name               := 'Net Spot';
            UpText             := 'Net';
            Option             := 'Net';
            RightClickOnly     := False;
            AssociatedItems    := [FISH_RAW_SHRIMP, FISH_RAW_ANCHOVIE];
          end;

        FISHSPOT_BAIT:
          with MSI_Objects[whichObject] do
          begin
            Name               := 'Bait Spot';
            UpText             := 'Net';
            Option             := 'Bait';
            RightClickOnly     := True;
            AssociatedItems    := [FISH_RAW_SARDINE, FISH_RAW_HERRING, FISH_RAW_PIKE];
          end;

        FISHSPOT_LURE:
          with MSI_Objects[whichObject] do
          begin
            Name               := 'Lure Spot';
            UpText             := 'Lure Fish';
            Option             := 'Lure';
            RightClickOnly     := False;
            AssociatedItems    := [FISH_RAW_TROUT, FISH_RAW_SALMON];
          end;

        FISHSPOT_CAGE:
          with MSI_Objects[whichObject] do
          begin
            Name               := 'Cage Spot';
            UpText             := 'Cage';
            Option             := 'Cage';
            RightClickOnly     := False;
            AssociatedItems    := [FISH_RAW_LOBSTER];
          end;

        FISHSPOT_HARPOON:
          with MSI_Objects[whichObject] do
          begin
            Name               := 'Harpooning Spot';
            UpText             := 'Cage';
            Option             := 'Harpoon';
            RightClickOnly     := True;
            AssociatedItems    := [FISH_RAW_TUNA, FISH_RAW_SWORDFISH];
          end;
      end;
    end;

    { COOKING SPOTS ============================== ]
    [============================================= }
    COOKSPOT_RANGE:
      with MSI_Objects[whichObject] do
      begin
        Name               := 'Cooking Range';
        UpText             := 'Range';
        Option             := 'Range';
        Colors             := [1581997];
        Tol                := 4;
        Hue                := 0.02;
        Sat                := 0.13;
        FindAllColors      := False;
        W                  := 2;
        H                  := 5;
        Accuracy           := 50;
        ExcludeSelf        := True;
        RightClickOnly     := False;
        Tries              := 5;
        Anim               := False;
        WaitToMove         := False;
        BadColors          := [3686583, 2764680, 4023751];
        BadColorTolerance  := 35;
        AssociatedItems    := MSI_LoadItemRange(FISH_RAW_SHRIMP, FISH_RAW_SWORDFISH) +
                              MSI_LoadItemRange(FISH_COOKED_SHRIMP, FISH_COOKED_SWORDFISH);
      end;

    COOKSPOT_FIRE:
      with MSI_Objects[whichObject] do
      begin
        Name               := '';
        UpText             := '';
        Option             := '';
        Colors             := [0];
        Tol                := 0;
        Hue                := 0.00;
        Sat                := 0.00;
        FindAllColors      := False;
        W                  := 0;
        H                  := 0;
        Accuracy           := 0;
        ExcludeSelf        := False;
        RightClickOnly     := False;
        Tries              := 0;
        Anim               := False;
        WaitToMove         := False;
        BadColors          := [];
        BadColorTolerance  := 0;
        AssociatedItems    := [];
      end;

    { Obstacles ================================== ]
    [============================================= }
     LADDER_DOWN_MINE_GUILD:
       with MSI_Objects[whichObject] do
       begin
         Name               := 'Mining Guild Ladder: Down';
         UpText             := 'own Ladder';
         Option             := 'own Ladder';
         Colors             := [2709359];
         Tol                := 8;
         Hue                := 0.05;
         Sat                := 0.96;
         FindAllColors      := False;
         W                  := 18;
         H                  := 30;
         Accuracy           := 5;
         ExcludeSelf        := True;
         RightClickOnly     := False;
         Tries              := 6;
         Anim               := False;
         WaitToMove         := False;
         BadColors          := [];
         BadColorTolerance  := 10;
         AssociatedItems    := [];
       end;

     LADDER_UP_MINE_GUILD:
       with MSI_Objects[whichObject] do
       begin
         Name               := 'Mining Guild Ladder: Up';
         UpText             := 'up Ladder';
         Option             := 'up Ladder';
         Colors             := [4410190];
         Tol                := 8;
         Hue                := 0.26;
         Sat                := 0.14;
         FindAllColors      := False;
         W                  := 35;
         H                  := 30;
         Accuracy           := 20;
         ExcludeSelf        := False;
         RightClickOnly     := False;
         Tries              := 5;
         Anim               := False;
         WaitToMove         := False;
         BadColors          := [];
         BadColorTolerance  := 10;
         AssociatedItems    := [];
       end;

    { Bird Nest ================================== ]
    [============================================= }
     OBJ_BIRD_NEST:
       with MSI_Objects[whichObject] do
       begin
         Name               := 'Bird''s nest';
         UpText             := 's nest';
         Option             := 'ake';
         Colors             := [4016204];
         Tol                := 3;
         Hue                := 0.38;
         Sat                := 1.16;
         FindAllColors      := False;
         W                  := 25;
         H                  := 18;
         Accuracy           := 3;
         ExcludeSelf        := True;
         RightClickOnly     := False;
         Tries              := 5;
         Anim               := False;
         WaitToMove         := True;
         BadColors          := [];
         BadColorTolerance  := 10;
         AssociatedItems    := [];
       end;

    { NPCs ======================================= ]
    [============================================= }
     NPC_CHICKEN_WHITE:
       with MSI_Objects[whichObject] do
       begin
         Name               := 'Chicken';
         UpText             := 'ack Chic';
         Option             := 'ttac';
         Colors             := [9554153];
         Tol                := 15;
         Hue                := 0.02;
         Sat                := 3.21;
         FindAllColors      := False;
         W                  := 8;
         H                  := 8;
         Accuracy           := 7;
         ExcludeSelf        := False;
         RightClickOnly     := False;
         Tries              := 5;
         Anim               := False;
         WaitToMove         := True;
         BadColors          := [];
         BadColorTolerance  := 10;
         AssociatedItems    := [];
       end;

     NPC_CHICKEN_BROWN:
       with MSI_Objects[whichObject] do
       begin
         Name               := 'Chicken';
         UpText             := 'ack Chic';
         Option             := 'ttac';
         Colors             := [2777482];
         Tol                := 15;
         Hue                := 0.03;
         Sat                := 0.13;
         FindAllColors      := False;
         W                  := 8;
         H                  := 8;
         Accuracy           := 7;
         ExcludeSelf        := False;
         RightClickOnly     := False;
         Tries              := 5;
         Anim               := False;
         WaitToMove         := True;
         BadColors          := [];
         BadColorTolerance  := 10;
         AssociatedItems    := [];
       end;

     NPC_RAT_GIANT:
       with MSI_Objects[whichObject] do
       begin
         Name               := 'Giant Rat';
         UpText             := 'ack Gian';
         Option             := 'ttac';
         Colors             := [4474440];
         Tol                := 25;
         Hue                := 0.00;
         Sat                := 0.00;
         FindAllColors      := False;
         W                  := 13;
         H                  := 13;
         Accuracy           := 7;
         ExcludeSelf        := False;
         RightClickOnly     := False;
         Tries              := 5;
         Anim               := False;
         WaitToMove         := True;
         BadColors          := [];
         BadColorTolerance  := 10;
         AssociatedItems    := [];
       end;

     NPC_STILES:
       with MSI_Objects[whichObject] do
       begin
         Name               := 'Stiles';
         UpText             := 'tiles';
         Option             := 'chan';
         Colors             := [3092273];
         Tol                := 7;
         Hue                := 0.08;
         Sat                := 0.17;
         FindAllColors      := False;
         W                  := 25;
         H                  := 40;
         Accuracy           := 10;
         ExcludeSelf        := False;
         RightClickOnly     := True;
         Tries              := 5;
         Anim               := False;
         WaitToMove         := True;
         BadColors          := [];
         BadColorTolerance  := 10;
         AssociatedItems    := [];
       end;

    { Ground Items =============================== ]
    [============================================= }
     LOOT_FEATHERS: // Needs updating!
       with MSI_Objects[whichObject] do
       begin
         Name               := 'Feathers';
         UpText             := '';
         Option             := 'eath';
         Colors             := [10592954];
         Tol                := 10;
         Hue                := 0.00;
         Sat                := 0.00;
         FindAllColors      := False;
         W                  := 6;
         H                  := 6;
         Accuracy           := 3;
         ExcludeSelf        := False;
         RightClickOnly     := True;
         Tries              := 5;
         Anim               := False;
         WaitToMove         := True;
         BadColors          := [];
         BadColorTolerance  := 10;
         AssociatedItems    := [];
       end;
  end;

  Result := (MSI_Objects[whichObject].Name <> '');
end;

{******************************************************************************}
{ procedure MSI_LoadAllObjects;                                                }
{ By: Coh3n                                                                    }
{ Date: 28 July 2010                                                           }
{ Description: Loads all the objects used in MSI scripts; should only be       }
{              called once in SetupMSI                                         }
{******************************************************************************}
procedure MSI_LoadAllObjects;
var
  i: Integer;
begin
  for i := 0 to High(MSI_Objects) do
    MSI_LoadObject(i);
end;

{******************************************************************************}
{ Function MSI_GetObjects(Which: TIntegerArray): TMSObjectArray;               }
{ By: marpis                                                                   }
{ Date: 03 July 2010                                                           }
{ Description: Load all object info for object in the array                    }
{******************************************************************************}
function MSI_GetObjects(Which: TIntegerArray): TMSObjectArray;
Var
  I, H: Integer;
Begin
  H := High(Which);
  SetLength(Result, H + 1);

  For I := 0 To H Do
    Result[I] := MSI_Objects[Which[I]];
End;

{******************************************************************************}
{ Function ReturnPointsInBox(TPA: TPointArray; B: TBox): TPointArray;          }
{ By: marpis                                                                   }
{ Date: 10 June 2010                                                           }
{ Description: Self explanatory                                                }
{******************************************************************************}
Function MSI_ReturnPointsInBox(TPA: TPointArray; B: TBox): TPointArray;
Var
  I, H, N: Integer;
Begin
  H := High(TPA);
  SetLength(Result, 1 shl 20);

  For I := 0 To H Do
    If PointInBox(TPA[I], B) Then
    Begin
      Result[N] := TPA[I];
      Inc(N);
    End;

  SetLength(Result, N);
End;

{******************************************************************************}
{ Function MSI_FindObjectsTPA( ... ): Boolean;                                 }
{ By: marpis                                                                   }
{ Date: Updated 01 February 2011 by Coh3n                                      }
{ Description: Finds objects in mainscreen, saves co-ords in TPA               }
{******************************************************************************}
Function MSI_FindObjectsTPA(Var Objs: TPointArray; ObjID: integer; SearchBox: TBox): Boolean;
Var
  TPA, TempTPA: TPointArray;
  ATPA: T2DPointArray;
  I, II, CTS, TMP, H: Integer;
  Box: TBox;
  Boxes: TBoxArray;
  Animating2: TBooleanArray;
  BadPoint: Boolean;
Begin
  If (Not LoggedIn) Then
    Exit;

  CTS := GetColorToleranceSpeed;
  ColorToleranceSpeed(2);
  SetColorSpeed2Modifiers(MSI_Objects[objID].Hue, MSI_Objects[objID].Sat);
  Box := IntToBox(249, 146, 276, 187); // Box around player

  H := High(MSI_Objects[objID].Colors);
  SetLength(ATPA, H + 1);

  For I := 0 To H Do
    FindColorsSpiralTolerance(MSCX, MSCY, ATPA[I], MSI_Objects[objID].Colors[I], SearchBox.X1, SearchBox.Y1, SearchBox.X2, SearchBox.Y2, MSI_Objects[objID].Tol);

  ColorToleranceSpeed(CTS);
  SetColorSpeed2Modifiers(0.2, 0.2);

  { Check if some of the colors was not on MS. }
  If MSI_Objects[objID].FindAllColors Then
    For I := 0 To H Do
      If (Length(ATPA) < 1) Then
      Begin
        MSI_SubDebug('All colors weren''t found!');
        Objs := [];
        Exit;
      End;

  { Check if we have enough pixels on MS. }
  TPA := MergeATPA(ATPA);

  If (Length(TPA) < MSI_Objects[objID].Accuracy) Then
  Begin
    MSI_SubDebug('No colors found!');
    Wait(RandomRange(300, 600));
    Objs := [];
    Exit;
  End;

  ATPA := TPAtoATPAEx(TPA, MSI_Objects[objID].W, MSI_Objects[objID].H);
  SortATPAFrom(ATPA, Point(MSCX, MSCY));
  H := High(ATPA);
  SetLength(TPA, H + 1);

  if MSI_SetupVars[SETUP_DEBUG_SMART] then
    DrawDotsMulti(true, ATPA);

  For I := 0 To H Do
    TPA[I] := MiddleTPA(ATPA[I]);

  H := High(TPA);
  SetLength(Boxes, H + 1);

  For I := 0 To H Do
    Boxes[I]:= MSI_MakeBox( Point(TPA[I].X, TPA[I].Y),
                            (MSI_Objects[objID].W / 2),
                            (MSI_Objects[objID].H / 2)
               );

  If MSI_Objects[objID].Anim Then
    Animating2 := AnimatingMulti(Boxes, 100, 1);

  For I := 0 To H Do
  Begin
    BadPoint := False;

    { Bad Boxes }
    if not BadPoint then
      if Length(NotBoxes) > 0 then
      begin
        TMP := High(NotBoxes);

        for II := 0 to TMP do
          if PointInBox(TPA[i], NotBoxes[II]) then
          begin
            MSI_SubDebug('Point in bad box');
            BadPoint := True;
            Break;
          end;
      end;

    { Animation }
    If (Not BadPoint) Then
      If MSI_Objects[objID].Anim Then
        If (Not Animating2[I]) Then
        Begin
          MSI_SubDebug('Not animating!');
          BadPoint := True;
        End;

    { Exclude own character }
    If (Not BadPoint) Then
      If MSI_Objects[objID].ExcludeSelf Then
        If PointInBox(TPA[I], Box) Then
        Begin
          MSI_SubDebug('Own character!');
          BadPoint := True;
        End;

    { Invalid point }
    If (Not BadPoint) Then
      If ((TPA[I].X + TPA[I].Y) < 1) Then
      Begin
        MSI_SubDebug('Invalid point!');
        BadPoint := True;
      End;

    { Accuracy }
    If (Not BadPoint) Then
      If (Length(ATPA[I]) < MSI_Objects[objID].Accuracy) Then
      Begin
        MSI_SubDebug('Not enough points: ' + IntToStr(Length(ATPA[I])));
        BadPoint := True;
      End;

    { Bad colors }
    If (Not BadPoint) Then
      For II := 0 To High(MSI_Objects[objID].BadColors) Do
      Begin
        MSI_SubDebug('Looking for bad color: '+IntToStr(MSI_Objects[objID].BadColors[II]));
        If FindColorSpiralTolerance(TMP, TMP, MSI_Objects[objID].BadColors[II], TPA[I].X - (MSI_Objects[objID].W / 2), TPA[I].Y - (MSI_Objects[objID].H / 2), TPA[I].X + (MSI_Objects[objID].W / 2), TPA[I].Y + (MSI_Objects[objID].H / 2), MSI_Objects[objID].BadColorTolerance) Then
        Begin
          MSI_SubDebug('Bad color found!');
          BadPoint := True;
          Break;
        End;
      End;

    { FindAllColors }
    If (Not BadPoint) Then
      If MSI_Objects[objID].FindAllColors Then
        For II := 0 To H Do
        Begin
          TempTPA := MSI_ReturnPointsInBox(ATPA[II], IntToBox(TPA[I].X - (MSI_Objects[objID].W / 2), TPA[I].Y - (MSI_Objects[objID].H / 2), TPA[I].X + (MSI_Objects[objID].W / 2), TPA[I].Y + (MSI_Objects[objID].H / 2)));
          If (Length(TempTPA) < 1) Then
          Begin
            MSI_SubDebug('All colors weren''t found!');
            BadPoint := True;
            Break;
          End;
        End;

    { Valid point! }
    If (Not BadPoint) Then
    Begin
      SetLength(Objs, Length(Objs) + 1);
      Objs[High(Objs)] := TPA[I];

    { Set NotBox so point can be avoided next time }
    End Else Begin
      SetLength(NotBoxes, Length(NotBoxes) + 1);
      NotBoxes[High(NotBoxes)] := Boxes[I];
    End;
  End;

  Result := (Length(Objs) > 0);
End;


{******************************************************************************}
{ function MSI_TrackObject(var ObjInfo: TMSObject): boolean;                   }
{ By: marpis & Sir R. Magician                                                 }
{ Date: Updated Feb. 1st 2011 by Coh3n                                         }
{ Description: Follows object while moving (ObjInfo.X, ObjInfo.Y)              }
{******************************************************************************}
function MSI_TrackObject(ObjID: integer): boolean;
var
  ATPA: T2DPointArray;
  TPA: TPointArray;
  CTS, T, Tries: integer;
  B: TBox;
  Previous: TPoint;
  BreakNext: boolean;
  DistMultiplier: extended;
begin
  if (not LoggedIn) then
    Exit;

  MSI_AddHeader('MSI_Track Object');
  Result := true;
  Track_Search(T_TrackObject);

  CTS := GetColorToleranceSpeed;
  ColorToleranceSpeed(2);
  SetColorSpeed2Modifiers(MSI_Objects[ObjID].Hue, MSI_Objects[ObjID].Sat);

  // Preparing vars for loop
  DistMultiplier := Distance(MSCX, MSCY, MSI_Objects[ObjID].X, MSI_Objects[ObjID].Y) / 40;
  if DistMultiplier < 1.0 then DistMultiplier := 1.0;
  BreakNext := false;
  Previous := Point(MSI_Objects[ObjID].X, MSI_Objects[ObjID].Y);
  T := GetSystemTime + 30000;

  repeat
    B := MSI_MakeBox(Point(MSI_Objects[ObjID].X, MSI_Objects[ObjID].Y),
                     round(MSI_Objects[ObjID].W * DistMultiplier),
                     round(MSI_Objects[ObjID].H * DistMultiplier));

    // Sets the limits of the box (so it doesn't exceed the Mainscreen)
    if (B.X1 < MSX1) then B.X1 := MSX1;
    if (B.Y1 < MSY1) then B.Y1 := MSY1;
    if (B.X2 > MSX2) then B.X2 := MSX2;
    if (B.Y2 > MSY2) then B.Y2 := MSY2;

    if (MSI_SetupVars[SETUP_DEBUG_SMART]) then
      SMART_DrawBoxEx(True, B, clYellow);

    if MSI_FindObjectsTPA(TPA, ObjID, B) then
    begin
      ATPA := SplitTPA(TPA, MSI_Objects[ObjID].W);
      SortATPAFromFirstPoint(ATPA, Point(MSCX, MSCY));
      MiddleTPAEx(ATPA[0], MSI_Objects[ObjID].X, MSI_Objects[ObjID].Y);

      if tries = 1 then
      begin
        tries := 0;
        DistMultiplier := DistMultiplier - 1.0; //setting the box back to 'normal' size
      end;
    end else begin
      Inc(tries);
      if tries = 1 then
      begin
        DistMultiplier := DistMultiplier + 1.0;  //increasing search box
        continue;
      end else begin
        MSI_Debug('Lost track of object');
        Result := false;
        break;
      end;
    end;

    if BreakNext then Break;

    if distance(Previous.X, Previous.Y, MSI_Objects[ObjID].X, MSI_Objects[ObjID].Y) < DIST_PIXEL_MOVE then
      if not FlagPresent then
        if not IsMoving then
          BreakNext := true;

    Previous := Point(MSI_Objects[ObjID].X, MSI_Objects[ObjID].Y);

    Wait(5);
  until (T < GetSystemTime);

  if Result then
    Track_Success(T_TrackObject);

  Track_Print(T_TrackObject);

  MSI_CloseHeader('MSI_TrackObject: ' + BoolToStr(Result));

  SetColorSpeed2Modifiers(0.2, 0.2);
  ColorToleranceSpeed(2);
end;

{******************************************************************************}
{ Function MSI_FindObjectsIn( ... ): Boolean;                                  }
{ By: marpis                                                                   }
{ Date: 10 June 2010                                                           }
{ Description: Finds objects in mainscreen                                     }
{******************************************************************************}
Function MSI_FindObjectsIn(Objs: TIntegerArray; Var IndexFound: Integer; SearchBox: TBox; Action: fnct_ActionOptions): Boolean;
Var
  TPA, TmpTPA: TPointArray;
  TheOptions, UpTexts: TStringArray;
  I, II, III, HH, HHH, Hi, J: Integer;
  CheckUpText, inBadBox: Boolean;
Begin
  if (not LoggedIn) then
    Exit;

  MSI_AddHeader('MSI_FindObjectsIn ' + ToStr(Objs));

  Hi := High(Objs);

  SetLength(TheOptions, Hi + 1);
  SetLength(UpTexts, Hi + 1);
  For I := 0 To Hi Do
  Begin
    UpTexts[I] := MSI_Objects[Objs[I]].UpText;
    TheOptions[I] := MSI_Objects[Objs[I]].Option;
  End;

  For II := 0 To Hi Do
    With MSI_Objects[Objs[II]] Do
      If MSI_FindObjectsTPA(TmpTPA, Objs[II], SearchBox) Then
      Begin
        // If set to, the script will click the closest object (this negates Priority)
        if (MSI_Scripts[MSI_Players[CurrentPlayer].Scripts[CurrentScript].Name].ClickClosest) then
        begin
          MSI_Debug('Clicking closest object to player');

          for i := 0 to High(Objs) do
            if (MSI_FindObjectsTPA(TmpTPA, Objs[i], SearchBox)) then
            begin
              //Writeln('Obj'+IntToStr(i));
              TPA := CombineTPA(TPA, TmpTPA);
            end;

          SortTPAFrom(TPA, Point(MSCX, MSCY));
        end else
          TPA := TmpTPA;

        HH := Min((Tries - 1), High(TPA));
        MSI_Debug(IntToStr(Length(TPA))+' objects found!');

        For I := 0 to HH Do
        Begin
          // Check to see if the point is in a bad box
          if (Length(NotBoxes) > 0) then
            for j := 0 to High(NotBoxes) do
              if (PointInBox(TPA[i], NotBoxes[j])) then
              begin
                MSI_Debug('Point in bad box');
                inBadBox := True;
                Break;
              end;

          if (inBadBox) then
            Continue;

          X := TPA[I].X;
          Y := TPA[I].Y;
          IndexFound := II;

          If (Action = Nothing) Then
          Begin
            Result := True;
            MSI_CloseHeader('MSI_FindObjectsIn: ' + BoolToStr(Result));
            NotBoxes := [];
            Exit;
          End;

          HHH := High(UpTexts);
          CheckUpText := True;
          For III := 0 To HHH Do
            If (UpTexts[III] = '') Then
            Begin
              CheckUpText := False;
              Break;
            End;

          MMouse(TPA[I].X, TPA[I].Y, 2, 2);
          Wait(20 + Random(50));

          If CheckUpText Then
            if (WaitUpTextMulti(UpTexts, 150 + Random(20))) then
            begin
              MSI_Debug('Uptext found!');
              Result := True;
            end else begin
              SetLength(notBoxes, Length(notBoxes) + 1);
              notBoxes[High(notBoxes)] := MSI_MakeBox(Point(TPA[I].X, TPA[I].Y), (W / 2), (H / 2));
            end
          Else
            Result := True;

          If (Action = Move) Then
          begin
            MSI_CloseHeader('MSI_FindObjectsIn: ' + BoolToStr(Result));
            NotBoxes := [];
            Exit;
          end;

          If Result Then
          Begin
            GetMousePos(X, Y);

            If (MSI_Objects[Objs[II]].RightClickOnly) Or InRange(Random(100), 0, 20) Or (Action = ClickRight) Then
            Begin
              Mouse(X, Y, 0, 0, False);
              If (Action = ClickRight) or (Action = ClickLeft) Then
                Result := WaitOptionMulti(TheOptions, 750 + Random(100))
              Else
                Result := DidClick(True, 1200);
            End Else Begin
              Mouse(X, Y, 0, 0, True);
              Result := DidClick(True, 1200); ;
            End;

            If MSI_Objects[Objs[II]].WaitToMove Then
              MSI_TrackObject(Objs[II]);

            MSI_CloseHeader('MSI_FindObjectsIn: ' + BoolToStr(Result));
            NotBoxes := [];
            Exit;
          End Else Begin
            MSI_FindRandoms(True);
            MSI_Debug('Uptext didn''t match!');
          End;
        End;
      End;

  MSI_CloseHeader('MSI_FindObjectsIn: ' + BoolToStr(Result));
  MSI_FindRandoms(True);
End;

{******************************************************************************}
{ Function MSI_FindObjects( ... ): Boolean;                                    }
{ By: marpis                                                                   }
{ Date: 10 June 2010                                                           }
{ Description: Finds multiple objects on the mainscreen                        }
{******************************************************************************}
Function MSI_FindObjects(Objs: TIntegerArray; Var IndexFound: Integer; Action: fnct_ActionOptions): Boolean;
Begin
  Result := MSI_FindObjectsIn(Objs, IndexFound, MSBox, Action);
End;

{******************************************************************************}
{ Function MSI_FindObjectIn( ... ): Boolean;                                   }
{ By: marpis                                                                   }
{ Date: 10 June 2010                                                           }
{ Description: Finds object in specified location                              }
{******************************************************************************}
Function MSI_FindObjectIn(Obj: integer; SearchBox: TBox; Action: fnct_ActionOptions): Boolean;
Var
  TMP: Integer;
Begin
  Result := MSI_FindObjectsIn([Obj], TMP, SearchBox, Action);
End;

{******************************************************************************}
{ Function MSI_FindObject( ... ): Boolean;                                     }
{ By: marpis                                                                   }
{ Date: 10 June 2010                                                           }
{ Description: Finds object on the mainscreen                                  }
{******************************************************************************}
Function MSI_FindObject(Obj: integer; Action: fnct_ActionOptions): Boolean;
Var
  TMP: Integer;
Begin
  Result := MSI_FindObjectsIn([Obj], TMP, MSBox, Action);
End;


