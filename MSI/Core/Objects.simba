(*
Objects
=======

The Objects file has any function needed to find an object on the main screen,
or even in any specified box.  These functions pass a TMSObject type.  Detailed
descriptions of the type can be found in
`Globals.simba <https://github.com/SRL/MSI/raw/master/MSI/Core/Objects.simba>`_.

The source for Objects.simba can be found
`here <https://github.com/SRL/MSI/raw/master/MSI/Core/Objects.simba>`_.

*)

 const
   DIST_PIXEL_MOVE = 15; // MSI_TrackObject

 var
   MSI_NotBoxes: TBoxArray; // Used to track bad TPA points and avoid hovering wrong objects

(*
MSI_GetObject
~~~~~~~~~~~~~

.. code-block:: pascal

  function MSI_GetObject(Obj: Integer): TMSObject;

Getst the TMSObject attributes for the object 'Obj'.

.. note::

  | Author: The MSI Team
  | Last Updated: 06 June 2011 by Coh3n

Example:

.. code-block:: pascal

  normalTree := MSI_GetObject(TREE_NORMAL);
*)
function MSI_GetObject(Obj: Integer): TMSObject;
begin
  case whichObject of
    { TREES ====================================== ]
    [============================================= }
    TREE_NORMAL:
      with MSI_Objects[whichObject] do
      begin
        Name               := 'Normal Tree';
        UpText             := ['ree'];
        Options            := ['own Tree'];
        Level              := 1;
        Colors             := [2117186];
        Tol                := 6;
        Hue                := 0.09;
        Sat                := 1.26;
        FindAllColors      := False;
        W                  := 35;
        H                  := 35;
        Accuracy           := 10;
        SearchArea         := MSBox;
        ExcludeSelf        := True;
        WaitToMove         := True;
        Track              := False;
        AssociatedItems    := [LOGS_NORMAL];
      end;

    TREE_OAK:
      with MSI_Objects[whichObject] do
      begin
        Name               := 'Oak Tree';
        UpText             := ['Oak'];
        Options            := ['own Oak'];
        Level              := 15;
        Colors             := [6330764, 6398099, 6133129, 6527886, 6464148];
        Tol                := 10;
        Hue                := 0.07;
        Sat                := 0.64;
        FindAllColors      := False;
        W                  := 50;
        H                  := 50;
        Accuracy           := 10;
        SearchArea         := MSBox;
        ExcludeSelf        := True;
        WaitToMove         := True;
        Track              := False;
        AssociatedItems    := [LOGS_OAK];
      end;

    TREE_WILLOW:
      with MSI_Objects[whichObject] do
      begin
        Name               := 'Willow tree';
        UpText             := ['wn Wil'];
        Options            := ['Chop down Willow'];
        Level              := 30;
        Colors             := [4481105];
        Tol                := 14;
        Hue                := 0.18;
        Sat                := 0.28;
        FindAllColors      := False;
        W                  := 30;
        H                  := 30;
        Accuracy           := 10;
        SearchArea         := MSBox;
        ExcludeSelf        := True;
        WaitToMove         := True;
        Track              := False;
        AssociatedItems    := [LOGS_WILLOW];
      end;

    TREE_WILLOW_NEW:
      with MSI_Objects[whichObject] do
      begin
        Name               := 'Willow tree';
        UpText             := ['wn Wil'];
        Options            := ['Chop down Willow'];
        Level              := 30;
        Colors             := [2843496];
        Tol                := 2;
        Hue                := 0.42;
        Sat                := 2.87;
        FindAllColors      := False;
        W                  := 30;
        H                  := 30;
        Accuracy           := 10;
        SearchArea         := MSBox;
        ExcludeSelf        := True;
        WaitToMove         := True;
        AssociatedItems    := [LOGS_WILLOW];
      end;

    TREE_MAPLE:
      with MSI_Objects[whichObject] do
      begin
        Name               := 'Maple tree';
        UpText             := ['wn Map'];
        Options            := ['Chop down Maple'];
        Level              := 45;
        Colors             := [1187644];
        Tol                := 4;
        Hue                := 0.10;
        Sat                := 0.54;
        FindAllColors      := False;
        W                  := 25;
        H                  := 25;
        Accuracy           := 10;
        SearchArea         := MSBox;
        ExcludeSelf        := True;
        WaitToMove         := True;
        Track              := False;
        AssociatedItems    := [LOGS_MAPLE];
      end;

    TREE_YEW:
      with MSI_Objects[whichObject] do
      begin
        Name               := 'Yew Tree';
        UpText             := ['own Yew'];
        Options            := ['Chop down Yew'];
        Level              := 60;
        Colors             := [2314052];
        Tol                := 9;
        Hue                := 0.06;
        Sat                := 0.59;
        FindAllColors      := False;
        W                  := 50;
        H                  := 50;
        Accuracy           := 15;
        SearchArea         := MSBox;
        ExcludeSelf        := True;
        WaitToMove         := True;
        Track              := False;
        AssociatedItems    := [LOGS_YEW];
      end;

    TREE_MAGIC:
      with MSI_Objects[whichObject] do
      begin
        Name               := 'Magic tree';
        UpText             := ['gic tre'];
        Options            := ['down Mag'];
        Level              := 75;
        Colors             := [11069677];
        Tol                := 18;
        Hue                := 0.03;
        Sat                := 2.12;
        FindAllColors      := False;
        W                  := 60;
        H                  := 70;
        Accuracy           := 5;
        SearchArea         := MSBox;
        ExcludeSelf        := True;
        RightClickOnly     := False;
        WaitToMove         := True;
        MaxTime            := 90000;
        AssociatedItems    := [LOGS_MAGIC];
      end;

    { BANKS ====================================== ]
    [============================================= }
    MSI_BANK_VE:
      with MSI_Objects[whichObject] do
      begin
        Name               := 'Varrock east bank';
        UpText             := ['ooth'];
        Options            := ['uick'];
        Colors             := [6715005];
        Tol                := 4;
        Hue                := 0.19;
        Sat                := 0.31;
        FindAllColors      := False;
        W                  := 33;
        H                  := 30;
        Accuracy           := 15;
        SearchArea         := MSBox
        ExcludeSelf        := True;
        RightClickOnly     := True;
        WaitToMove         := True;
      end;

    MSI_BANK_DB:
      with MSI_Objects[whichObject] do
      begin
        Name               := 'Draynor bank';
        UpText             := ['ount'];
        Options            := ['uick'];
        Colors             := [5136741];
        Tol                := 5;
        Hue                := 0.73;
        Sat                := 0.49;
        FindAllColors      := False;
        W                  := 10;
        H                  := 10;
        Accuracy           := 15;
        SearchArea         := IntToBox(MSX1, MSY1, MSCX + 200, MSY2);
        ExcludeSelf        := True;
        RightClickOnly     := True;
        WaitToMove         := True;
      end;

    MSI_BANK_GE:
      with MSI_Objects[whichObject] do
      begin
        Name               := 'Grand Exchange bank';
        UpText             := ['anker'];
        Options            := ['ank Banker'];
        Colors             := [1270921];
        Tol                := 7;
        Hue                := 0.04;
        Sat                := 0.23;
        FindAllColors      := False;
        W                  := 10;
        H                  := 10;
        Accuracy           := 15;
        SearchArea         := MSBox
        ExcludeSelf        := True;
        WaitToMove         := True;
      end;

    MSI_BANK_FE:
      with MSI_Objects[whichObject] do
      begin
        Name               := 'Falador east bank';
        UpText             := ['ooth'];
        Options            := ['uick'];
        Colors             := [7044234];
        Tol                := 5;
        Hue                := 0.24;
        Sat                := 0.47;
        FindAllColors      := False;
        W                  := 35;
        H                  := 40;
        Accuracy           := 20;
        SearchArea         := MSBox
        ExcludeSelf        := True;
        RightClickOnly     := True;
        WaitToMove         := True;
      end;

    MSI_BANK_VW:
      with MSI_Objects[whichObject] do
      begin
        Name               := 'Varrock west bank';
        UpText             := ['ooth'];
        Options            := ['uick'];
        Colors             := [5794933];
        Tol                := 8;
        Hue                := 0.13;
        Sat                := 0.69;
        FindAllColors      := False;
        W                  := 15;
        H                  := 30;
        Accuracy           := 20;
        SearchArea         := MSBox
        ExcludeSelf        := True;
        RightClickOnly     := True;
        WaitToMove         := True;
      end;

    MSI_BANK_FW:
      with MSI_Objects[whichObject] do
      begin
        Name               := 'Falador west bank';
        UpText             := ['ooth'];
        Options            := ['uick'];
        Colors             := [3627376];
        Tol                := 6;
        Hue                := 0.17;
        Sat                := 0.94;
        FindAllColors      := False;
        W                  := 15;
        H                  := 30;
        Accuracy           := 20;
        SearchArea         := MSBox
        ExcludeSelf        := True;
        RightClickOnly     := True;
        WaitToMove         := True;
      end;

    MSI_BANK_EV:
      with MSI_Objects[whichObject] do
      begin
        Name               := 'Edgeville bank';
        UpText             := ['ooth', 'nk Bo'];
        Options            := ['uick', 'ickly'];
        Colors             := [4149854, 4215904];
        Tol                := 3;
        Hue                := 0.21;
        Sat                := 0.51;
        FindAllColors      := False;
        W                  := 20;
        H                  := 35;
        Accuracy           := 50;
        SearchArea         := MSBox
        ExcludeSelf        := True;
        RightClickOnly     := True;
        WaitToMove         := True;
      end;

    DBOX_PS:
      with MSI_Objects[whichObject] do
      begin
        Name               := 'Port Sarim deposit box';
        UpText             := ['eposit'];
        Options            := ['it Bank'];
        Colors             := [5202031, 6320253, 5859188, 4741996, 437569, 4215135];
        Tol                := 12;
        Hue                := 0.05;
        Sat                := 0.58;
        FindAllColors      := False;
        W                  := 30;
        H                  := 60;
        Accuracy           := 20;
        SearchArea         := MSBox
        ExcludeSelf        := True;
        RightClickOnly     := False;
        WaitToMove         := True;
      end;

    MSI_BANK_SV:
      with MSI_Objects[whichObject] do
      begin
        Name               := 'Seers Village Bank';
        UpText             := ['ooth'];
        Options            := ['uick'];
        Colors             := [10464171];
        Tol                := 2;
        Hue                := 0.76;
        Sat                := 0.40;
        FindAllColors      := False;
        W                  := 30;
        H                  := 20;
        Accuracy           := 7;
        SearchArea         := MSBox
        ExcludeSelf        := True;
        WaitToMove         := True;
      end;

    MSI_BANK_AK:
      with MSI_Objects[whichObject] do
      begin
        Name               := 'Al-Kharid Bank';
        UpText             := ['ooth'];
        Options            := ['uick'];
        Colors             := [4870229];
        Tol                := 3;
        Hue                := 0.76;
        Sat                := 0.40;
        FindAllColors      := False;
        W                  := 14;
        H                  := 60;
        Accuracy           := 20;
        SearchArea         := IntToBox(MSX1, MSY1, MSCX, MSY2);
        ExcludeSelf        := True;
        RightClickOnly     := True;
        WaitToMove         := True;
      end;

    MSI_BANK_CB:
      with MSI_Objects[whichObject] do
      begin
        Name               := 'Catherby bank';
        UpText             := ['ooth'];
        Options            := ['uick'];
        Colors             := [6714503];
        Tol                := 11;
        Hue                := 0.34;
        Sat                := 0.92;
        FindAllColors      := False;
        W                  := 30;
        H                  := 20;
        Accuracy           := 7;
        SearchArea         := MSBox
        ExcludeSelf        := True;
        RightClickOnly     := True;
        WaitToMove         := True;
      end;

    { ROCKS ====================================== ]
    [============================================= }
    ROCK_CLAY:
      with MSI_Objects[whichObject] do
      begin
        Name               := 'Clay';
        UpText             := ['ocks'];
        Options            := ['ine'];
        Level              := 1;
        Colors             := [5938111];
        Tol                := 13;
        Hue                := 0.02;
        Sat                := 1.23;
        FindAllColors      := False;
        W                  := 25;
        H                  := 20;
        Accuracy           := 5;
        SearchArea         := MSBox;
        MaxTime            := 5000;
        ExcludeSelf        := False;
        WaitToMove         := True;
        AssociatedItems    := [ORE_CLAY];
      end;

    ROCK_COPPER:
      with MSI_Objects[whichObject] do
      begin
        Name               := 'Copper';
        UpText             := ['ocks'];
        Options            := ['ine'];
        Level              := 1;
        Colors             := [2650323];
        Tol                := 16;
        Hue                := 0.06;
        Sat                := 1.86;
        FindAllColors      := False;
        W                  := 29;
        H                  := 23;
        Accuracy           := 10;
        SearchArea         := MSBox;
        MaxTime            := 7000;
        ExcludeSelf        := False;
        WaitToMove         := True;
        AssociatedItems    := [ORE_COPPER];
      end;

    ROCK_TIN:
      with MSI_Objects[whichObject] do
      begin
        Name               := 'Tin';
        UpText             := ['ocks'];
        Options            := ['ine'];
        Level              := 1;
        Colors             := [7500665];
        Tol                := 14;
        Hue                := 0.18;
        Sat                := 0.06;
        FindAllColors      := False;
        W                  := 25;
        H                  := 28;
        Accuracy           := 10;
        SearchArea         := MSBox;
        MaxTime            := 7000;
        ExcludeSelf        := False;
        WaitToMove         := True;
        AssociatedItems    := [ORE_TIN];
      end;

    ROCK_IRON:
      with MSI_Objects[whichObject] do
      begin
        Name               := 'Iron';
        UpText             := ['ocks'];
        Options            := ['ine'];
        Level              := 15;
        Colors             := [3030375];
        Tol                := 8;
        Hue                := 0.08;
        Sat                := 0.14;
        FindAllColors      := False;
        W                  := 30;
        H                  := 23;
        Accuracy           := 2;
        SearchArea         := MSBox;
        MaxTime            := 10000;
        ExcludeSelf        := False;
        WaitToMove         := True;
        AssociatedItems    := [ORE_IRON];
      end;

    ROCK_SILVER:
      with MSI_Objects[whichObject] do
      begin
        Name               := 'Silver';
        UpText             := ['ocks'];
        Options            := ['ine'];
        Level              := 20;
        Colors             := [14408944];
        Tol                := 8;
        Hue                := 0.11;
        Sat                := 4.02;
        FindAllColors      := False;
        W                  := 25;
        H                  := 20;
        Accuracy           := 10;
        SearchArea         := MSBox;
        MaxTime            := 20000;
        ExcludeSelf        := False;
        RightClickOnly     := False;
        WaitToMove         := True;
        AssociatedItems    := [ORE_SILVER];
      end;

    ROCK_COAL:
      with MSI_Objects[whichObject] do
      begin
        Name               := 'Coal';
        UpText             := ['ocks'];
        Options            := ['ine'];
        Level              := 30;
        Colors             := [2171426];
        Tol                := 5;
        Hue                := 0.00;
        Sat                := 0.63;
        FindAllColors      := False;
        W                  := 25;
        H                  := 20;
        Accuracy           := 10;
        SearchArea         := MSBox;
        MaxTime            := 35000;
        ExcludeSelf        := True;
        RightClickOnly     := False;
        WaitToMove         := True;
        AssociatedItems    := [ORE_COAL];
      end;

    ROCK_GOLD:
      with MSI_Objects[whichObject] do
      begin
        Name               := 'Gold';
        UpText             := ['ocks'];
        Options            := ['ine'];
        Level              := 40;
        Colors             := [4702956];
        Tol                := 5;
        Hue                := 0.02;
        Sat                := 3.30;
        FindAllColors      := False;
        W                  := 25;
        H                  := 20;
        Accuracy           := 10;
        SearchArea         := MSBox;
        MaxTime            := 45000;
        ExcludeSelf        := False;
        WaitToMove         := True;
        AssociatedItems    := [ORE_GOLD];
      end;

    ROCK_MITHRIL:
      with MSI_Objects[whichObject] do
      begin
        Name               := 'Mithril';
        UpText             := ['ocks'];
        Options            := ['ine'];
        Level              := 55;
        Colors             := [16624810];
        Tol                := 15;
        Hue                := 0.27;
        Sat                := 3.28;
        FindAllColors      := False;
        W                  := 25;
        H                  := 20;
        Accuracy           := 10;
        SearchArea         := MSBox;
        MaxTime            := 55000;
        ExcludeSelf        := True;
        RightClickOnly     := False;
        WaitToMove         := True;
        AssociatedItems    := [ORE_MITHRIL];
      end;

    ROCK_ADAMANTITE:
      with MSI_Objects[whichObject] do
      begin
        Name               := 'Adamantite';
        UpText             := ['ocks'];
        Options            := ['ine'];
        Level              := 70;
        Colors             := [13100486, 15072730, 13953738];
        Tol                := 10;
        Hue                := 0.80;
        Sat                := 0.17;
        FindAllColors      := False;
        W                  := 25;
        H                  := 20;
        Accuracy           := 5;
        SearchArea         := MSBox;
        MaxTime            := 75000;
        ExcludeSelf        := True;
        WaitToMove         := True;
        AssociatedItems    := [ORE_ADAMANTITE];
      end;

    { FISHING SPOTS ============================== ]
    [============================================= }
    FISHSPOT_NET..FISHSPOT_HARPOON:
      begin
        //same color info for all spots
        with MSI_Objects[whichObject] do
        begin
          Colors             := [11050135];
          Tol                := 10;
          Hue                := 0.26;
          Sat                := 0.62;
          FindAllColors      := False;
          W                  := 40;
          H                  := 40;
          Accuracy           := 5;
          SearchArea         := MSBox;
          ExcludeSelf        := True;
          WaitToMove         := True;
          Track              := True;
        end;

        case whichObject of
          FISHSPOT_NET:
            with MSI_Objects[whichObject] do
            begin
              Name               := 'Net Spot';
              UpText             := ['Net'];
              Options            := ['Net'];
              Level              := 1;
              RightClickOnly     := False;
              AssociatedItems    := [FISH_RAW_SHRIMP, FISH_RAW_ANCHOVIE];
            end;

          FISHSPOT_BAIT:
            with MSI_Objects[whichObject] do
            begin
              Name               := 'Bait Spot';
              UpText             := ['Net', 'Bait', 'Lure'];
              Options            := ['Bait'];
              Level              := 5;
              RightClickOnly     := True;
              AssociatedItems    := [FISH_RAW_SARDINE, FISH_RAW_HERRING, FISH_RAW_PIKE];
            end;

          FISHSPOT_LURE:
            with MSI_Objects[whichObject] do
            begin
              Name               := 'Lure Spot';
              UpText             := ['Lure Fish'];
              Options            := ['Lure'];
              Level              := 20;
              RightClickOnly     := False;
              AssociatedItems    := [FISH_RAW_TROUT, FISH_RAW_SALMON];
            end;

          FISHSPOT_CAGE:
            with MSI_Objects[whichObject] do
            begin
              Name               := 'Cage Spot';
              UpText             := ['Cage'];
              Options            := ['Cage'];
              Level              := 40;
              RightClickOnly     := False;
              AssociatedItems    := [FISH_RAW_LOBSTER];
            end;

          FISHSPOT_HARPOON:
            with MSI_Objects[whichObject] do
            begin
              Name               := 'Harpooning Spot';
              UpText             := ['Cage'];
              Options            := ['Harpoon'];
              Level              := 35;
              RightClickOnly     := True;
              AssociatedItems    := [FISH_RAW_TUNA, FISH_RAW_SWORDFISH];
            end;
        end;
      end;

    { COOKING SPOTS ============================== ]
    [============================================= }
    COOKSPOT_AK_RANGE:
      with MSI_Objects[whichObject] do
      begin
        Name               := 'AK Cooking Range';
        UpText             := ['Range'];
        Options            := ['Range'];
        Colors             := [1779380, 1779646];
        Tol                := 20;
        Hue                := 0.06;
        Sat                := 0.29;
        FindAllColors      := False;
        W                  := 30;
        H                  := 30;
        Accuracy           := 5;
        SearchArea         := IntToBox(MSx1, MSy1, MSCx + 80, MSCy + 30);
        ExcludeSelf        := True;
        RightClickOnly     := False;
        WaitToMove         := True;
        Track              := False;
        AssociatedItems    := [FISH_COOKED_SHRIMP, FISH_COOKED_ANCHOVIE,
                               FISH_COOKED_SARDINE, FISH_COOKED_HERRING,
                               FISH_COOKED_PIKE, FISH_COOKED_TROUT,
                               FISH_COOKED_SALMON, FISH_COOKED_LOBSTER,
                               FISH_COOKED_TUNA, FISH_COOKED_SWORDFISH];
      end;

    { Obstacles ================================== ]
    [============================================= }
    LADDER_DOWN_MINE_GUILD:
      with MSI_Objects[whichObject] do
      begin
        Name               := 'Mining Guild Ladder: Down';
        UpText             := ['own Ladder'];
        Options            := ['own Ladder'];
        Colors             := [2709359];
        Tol                := 8;
        Hue                := 0.05;
        Sat                := 0.96;
        FindAllColors      := False;
        W                  := 18;
        H                  := 30;
        Accuracy           := 5;
        SearchArea         := MSBox
        ExcludeSelf        := True;
        RightClickOnly     := False;
        WaitToMove         := True;
        AssociatedItems    := [];
      end;

    LADDER_UP_MINE_GUILD:
      with MSI_Objects[whichObject] do
      begin
        Name               := 'Mining Guild Ladder: Up';
        UpText             := ['up Ladder'];
        Options            := ['up Ladder'];
        Colors             := [4410190];
        Tol                := 8;
        Hue                := 0.26;
        Sat                := 0.14;
        FindAllColors      := False;
        W                  := 35;
        H                  := 30;
        Accuracy           := 20;
        SearchArea         := MSBox
        ExcludeSelf        := False;
        RightClickOnly     := False;
        WaitToMove         := True;
        AssociatedItems    := [];
      end;

    FALADOR_WEST_CRUMBLING_WALL:
      with MSI_Objects[whichObject] do
      begin
        Name               := 'Falador West Crumbling Wall';
        UpText             := ['rumbling wall'];
        Options            := ['rumbling wall'];
        Colors             := [9092811];
        Tol                := 24;
        Hue                := 0.04;
        Sat                := 1.35;
        FindAllColors      := False;
        W                  := 18;
        H                  := 30;
        Accuracy           := 5;
        SearchArea         := MSBox;
        ExcludeSelf        := True;
        WaitToMove         := True;
        AssociatedItems    := [];
      end;

    { Ground Items =============================== ]
    [============================================= }
    OBJ_BIRD_NEST:
      with MSI_Objects[whichObject] do
      begin
        Name               := 'Bird''s nest';
        UpText             := ['s nest'];
        Options            := ['ake'];
        Colors             := [4016204];
        Tol                := 3;
        Hue                := 0.38;
        Sat                := 1.16;
        FindAllColors      := False;
        W                  := 25;
        H                  := 18;
        Accuracy           := 3;
        SearchArea         := MSBox;
        ExcludeSelf        := True;
        WaitToMove         := True;
        AssociatedItems    := [];
      end;

    { NPCs ======================================= ]
    [============================================= }
    NPC_STILES:
      with MSI_Objects[whichObject] do
      begin
        Name               := 'Stiles';
        UpText             := ['tiles'];
        Options            := ['chan'];
        Colors             := [3684667];
        Tol                := 10;
        Hue                := 0.93;
        Sat                := 0.09;
        FindAllColors      := False;
        W                  := 15;
        H                  := 15;
        Accuracy           := 5;
        SearchArea         := MSBox
        ExcludeSelf        := False;
        WaitToMove         := True;
        AssociatedItems    := [];
      end;

    { Water Supplies ============================= ]
    [============================================= }
    FOUNTAIN_VE:
      with MSI_Objects[whichObject] do
      begin
         Name               := 'Varrock East Fountain';
         UpText             := ['ount'];
         Options            := ['se'];
         Colors             := [14520685];
         Tol                := 12;
         Hue                := 0.02;
         Sat                := 2.47;
         FindAllColors      := False;
         W                  := 50;
         H                  := 50;
         Accuracy           := 20;
         SearchArea         := MSBox;
         ExcludeSelf        := True;
         WaitToMove         := True;
         AssociatedItems    := [CLAY_SOFT, VIAL_WATER, JUG_WATER, BOWL_WATER,
                                BUCKET_WATER ];
      end;

    WELL_EV:
      with MSI_Objects[whichObject] do
      begin
        Name               := 'Edgeville Well';
        UpText             := ['ell'];
        Options            := ['se'];
        Colors             := [3757413];
        Tol                := 7;
        Hue                := 0.05;
        Sat                := 0.17;
        FindAllColors      := False;
        W                  := 50;
        H                  := 50;
        Accuracy           := 60;
        SearchArea         := MSBox;
        ExcludeSelf        := True;
        WaitToMove         := True;
        AssociatedItems    := [CLAY_SOFT, VIAL_WATER, JUG_WATER, BOWL_WATER,
                               BUCKET_WATER ];
      end;

    PUMP_FW:
      with MSI_Objects[whichObject] do
      begin
        Name               := 'Falador Waterpump';
        UpText             := ['pump'];
        Options            := ['se'];
        Colors             := [4870997];
        Tol                := 6;
        Hue                := 0.14;
        Sat                := 0.13;
        FindAllColors      := False;
        W                  := 30;
        H                  := 30;
        Accuracy           := 3;
        SearchArea         := MSBox;
        ExcludeSelf        := True;
        WaitToMove         := True;
        AssociatedItems    := [CLAY_SOFT, VIAL_WATER, JUG_WATER, BOWL_WATER,
                               BUCKET_WATER ];
      end;

    { FURNACES =================================== ]
    [============================================= }
    FURNACE_AK:
      with MSI_Objects[whichObject] do
      begin
        Name               := 'Al Kharid Furnace';
        UpText             := ['urnace'];
        Options            := ['melt'];
        Colors             := [2240921];
        Tol                := 16;
        Hue                := 0.06;
        Sat                := 0.73;
        FindAllColors      := False;
        W                  := 64;
        H                  := 13;
        Accuracy           := 20;
        SearchArea         := MSBox;
        ExcludeSelf        := True;
        WaitToMove         := True;
        AssociatedItems    := [BAR_BRONZE, BAR_IRON, BAR_SILVER, BAR_STEEL,
		                           BAR_GOLD, BAR_MITHRIL, BAR_ADAMANT, BAR_RUNE];
      end;
  end;
end;

(*
MSI_GetObjects
~~~~~~~~~~~~~~

.. code-block:: pascal

  function MSI_GetObjects(Objs: TIntegerArray): TMSObjectArray;

Loads all the objects in 'Objs' to the resulting TMSObjectArray.

.. note::

  | Author: marpis
  | Last Updated: 06 June 2011 by marpis

Example:

.. code-block:: pascal

  treeInfo := MSI_GetObjects([TREE_NORMAL, TREE_OAK, TREE_WILLOW]);
*)
function MSI_GetObjects(Objs: TIntegerArray): TMSObjectArray;
var
  i: integer;
begin
  setLength(result, length(Objs));

  for i := 0 to high(result) do
    result[i] := MSI_GetObject(Objs[i]);
end;

(*
MSI_FilterTPADist
~~~~~~~~~~~~~~~~~

.. code-block:: pascal

  procedure MSI_FilterTPADist(var TPA: TPointArray; maxDist: extended);

Removes any points in 'TPA' that are within distance 'maxDist' of each other.
If there are three points within 50 pixels of each other, this function will
filter out two of them.

.. note::

  | Author: Coh3n
  | Last Updated: 06 June 2011 by Coh3n

Example:

.. code-block:: pascal

  MSI_FilterTPADist(TPA);
*)
procedure MSI_FilterTPADist(var TPA: TPointArray; maxDist: extended);
var
  i, j: integer;
begin
  for i := 0 to high(TPA) do
    for j := i to high(TPA) do
      if (distance(TPA[i].x, TPA[i].y, TPA[j].x, TPA[j].y) < maxDist) then
        deleteValueInTPA(TPA, j);
end;

(*
MSI_FindObjectTPA
~~~~~~~~~~~~~~~~~

.. code-block:: pascal

  function MSI_FindObjectTPA(Obj: TMSObject; var Points: TPointArray): Boolean;

Returns a TPointArray ('Points') of all the instances of the object 'Obj' that
are found in the object's ('Obj') SearchBox atribute.

.. note::

  | Author: marpis
  | Last Updated: 01 June 2011 by Coh3n

Example:

.. code-block:: pascal

  ms_Points := function MSI_FindObjectTPA(TREE_NORMAL, tmpTPA);
*)
function MSI_FindObjectTPA(Obj: TMSObject; var Points: TPointArray): Boolean;
var
  TPA: TPointArray;
  ATPA: T2DPointArray;
  tpaBoxes: TBoxArray;
  i, j, t, cts: integer;
  badPoint: boolean;
begin
  if (not loggedIn) then
    exit;

  markTime(t);
  cts := GetToleranceSpeed;
  setColorToleranceSpeed(2);
  setToleranceSpeed2Modifiers(obj.hue, obj.sat);

  // search for all the object's colors
  setLength(ATPA, length(obj.colors));
  for i := 0 to high(ATPA) do
  begin
    findColorsSpiralTolerance(MSCX, MSCY, ATPA[i], obj.colors[i],
                              obj.searchArea.x1, obj.searchArea.y1,
                              obj.searchArea.x2, obj.searchArea.y2, obj.tol);
  end;

  setColorToleranceSpeed(cts);
  setToleranceSpeed2Modifiers(0.2, 0.2);

  // split points in to boxes the size of object & check if there's enough points
  TPA := MergeATPA(ATPA);
  ATPA := TPAtoATPAEx(TPA, obj.w, obj.h);
  for i := 0 to high(ATPA) do
  begin
    // check if all the colors were found
    if (obj.findAllColors) then
      if (length(ATPA[i]) < 1) then
      begin
        MSI_SubDebug('FindObjectTPA: not all colors were found');
        deleteValueInATPA(ATPA, i);
      end;

    if (length(ATPA[i]) < obj.accuracy) then
    begin
      MSI_SubDebug('FindObjectTPA: Not enough points: ' + intToStr(length(ATPA[i])));
      deleteValueInATPA(ATPA, i);
    end;
  end;

  TPA := [];
  sortATPAFrom(ATPA, point(MSCX, MSCY));
  setLength(TPA, length(ATPA));

  // draw points on SMART if setting enabled
  if (MSI_SetupVars[SETUP_DEBUG_SMART]) then
    drawDotsMulti(true, ATPA);

  // get the middle point of each TPA in the ATPA + create a box for each point
  setLength(tpaBoxes, length(TPA));
  for i := 0 to high(ATPA) do
  begin
    tpaBoxes[i] := getTPABounds(ATPA[i]);
    TPA[i] := middleTPA(ATPA[i]);
  end;

  // loop through all the points to see which are valid/invalid
  for i := 0 to high(TPA) do
  begin
    badPoint := false;

    // checks to see if the point is in the object's search area
    if (not badPoint) then
      if (not pointInBox(TPA[i], obj.searchArea)) then
      begin
        MSI_SubDebug('FindObjectTPA: Invalid point - exceeds search area');
        badPoint := true;
      end;

    // check to see if point is in a bad box
    if (not badPoint) then
      if (length(MSI_NotBoxes) > 0) then
        for j := 0 to high(MSI_NotBoxes) do
          if (pointInBox(TPA[i], MSI_NotBoxes[j])) then
          begin
            MSI_SubDebug('FindObjectTPA: Point in bad box');
            badPoint := true;
          end;

    // checks to see if the point is on the player
    if (not badPoint) then
      if (obj.excludeSelf) then
        if (pointInBox(TPA[i], intToBox(PLBX1, PLBY1, PLBX2, PLBY2))) then
        begin
          MSI_SubDebug('FindObjectTPA: Point is on player');
          badPoint := true;
        end;

    // a valid point as been found
    if (not badPoint) then
    begin
      setLength(Points, length(Points) + 1);
      Points[high(Points)] := TPA[i];

    // add point's box to MSI_NotBoxes so it can be avoided next search
    end else begin
      setLength(MSI_NotBoxes, length(MSI_NotBoxes) + 1);
      MSI_NotBoxes[high(MSI_NotBoxes)] := tpaBoxes[i];
    end;
  end;

  sortTPAFrom(points, point(MSCX, MSCY));
  MSI_FilterTPADist(points, min(obj.w, obj.h) * 2);

  if (length(points) > 0) then
  begin
    result := true;

    for i := 0 to high(Points) do
      if (MSI_SetupVars[SETUP_DEBUG_SMART]) then
        SMART_DrawBoxMS((i = 0), MSI_MakeBox(point(Points[i].x, Points[i].y), obj.w, obj.h), clGreen);

    MSI_SubDebug('FindObjectTPA: Points found: ' + intToStr(length(points)));
  end;

  MSI_SubDebug('FindObjectTPA: Took ' + intToStr(timeFromMark(t)) + ' ms to complete');
end;

(*
MSI_TrackObject
~~~~~~~~~~~~~~~

.. code-block:: pascal

  function MSI_TrackObject(ObjID: integer): Boolean;

Tracks the object while the player is moving.  for example, it will keep track
of an Oak tree that the player has just clicked, but has to walk to.  Keep in
mind that this can cause a small amount of lag on slower machines.

.. note::

  | Author: marpis & Sir R. Magician
  | Last Updated: 01 February 2011 by Coh3n

Example:

.. code-block:: pascal

  if (MSI_Objects[ObjID].WaitToMove) then
    MSI_TrackObject(ObjID);
*)
function MSI_TrackObject(ObjID: integer): boolean;
var
  ATPA: T2DPointArray;
  TPA: TPointArray;
  CTS, T, Tries: integer;
  B: TBox;
  Previous: TPoint;
  BreakNext: boolean;
  DistMultiplier: extended;
begin
  if (not LoggedIn) then
    Exit;

  MSI_AddHeader('MSI_Track Object');
  Result := true;
  Track_Search(T_TrackObject);

  CTS := GetColorToleranceSpeed;
  ColorToleranceSpeed(2);
  SetColorSpeed2Modifiers(MSI_Objects[ObjID].Hue, MSI_Objects[ObjID].Sat);

  // Preparing vars for loop
  DistMultiplier := Distance(MSCX, MSCY, MSI_Objects[ObjID].X, MSI_Objects[ObjID].Y) / 40;
  if DistMultiplier < 1.0 then DistMultiplier := 1.0;
  BreakNext := false;
  Previous := Point(MSI_Objects[ObjID].X, MSI_Objects[ObjID].Y);
  T := GetSystemTime + 30000;

  repeat
    B := MSI_MakeBox(Point(MSI_Objects[ObjID].X, MSI_Objects[ObjID].Y),
                     round(MSI_Objects[ObjID].W * DistMultiplier),
                     round(MSI_Objects[ObjID].H * DistMultiplier));

    // Sets the limits of the box (so it doesn't exceed the Mainscreen)
    if (B.X1 < MSX1) then B.X1 := MSX1;
    if (B.Y1 < MSY1) then B.Y1 := MSY1;
    if (B.X2 > MSX2) then B.X2 := MSX2;
    if (B.Y2 > MSY2) then B.Y2 := MSY2;

    if (MSI_SetupVars[SETUP_DEBUG_SMART]) then
      SMART_DrawBoxEx(True, B, clYellow);

    if MSI_FindObjectsTPA(TPA, ObjID, B) then
    begin
      ATPA := SplitTPA(TPA, MSI_Objects[ObjID].W);
      SortATPAFromFirstPoint(ATPA, Point(MSCX, MSCY));
      MiddleTPAEx(ATPA[0], MSI_Objects[ObjID].X, MSI_Objects[ObjID].Y);

      if tries = 1 then
      begin
        tries := 0;
        DistMultiplier := DistMultiplier - 1.0; //setting the box back to 'normal' size
      end;
    end else begin
      Inc(tries);
      if tries = 1 then
      begin
        DistMultiplier := DistMultiplier + 1.0;  //increasing search box
        continue;
      end else begin
        MSI_Debug('Lost track of object');
        Result := false;
        break;
      end;
    end;

    if BreakNext then Break;

    if distance(Previous.X, Previous.Y, MSI_Objects[ObjID].X, MSI_Objects[ObjID].Y) < DIST_PIXEL_MOVE then
      if not FlagPresent then
        if not IsMoving then
          BreakNext := true;

    Previous := Point(MSI_Objects[ObjID].X, MSI_Objects[ObjID].Y);

    Wait(5);
  until (T < GetSystemTime);

  if Result then
    Track_Success(T_TrackObject);

  Track_Print(T_TrackObject);

  MSI_CloseHeader('MSI_TrackObject: ' + BoolToStr(Result));

  SetColorSpeed2Modifiers(0.2, 0.2);
  ColorToleranceSpeed(CTS);
end;

(*
MSI_FindObjectsIn
~~~~~~~~~~~~~~~~~

.. code-block:: pascal

  function MSI_FindObjectsIn(Objs: TIntegerArray; var IndexFound: Integer; SearchBox: TBox; Action: fnct_ActionOptions): Boolean;

Finds the objects 'Objs' in the specified search box ('SearchBox'), and performs
the action 'Action' from SRL's fnct_ActionOptions type.  Also returns the index
in 'Objs' for the object that was found and the action applied to.

.. note::

  | Author: marpis
  | Last Updated: 17 May 2010 by Coh3n

Example:

.. code-block:: pascal

  if (MSI_FindObjectsIn([TREE_NORMAL, TREE_OAK], i, MSBox, 1)) then
    MSI_Debug('Clicked tree');
*)
function MSI_FindObjectsIn(Objs: TIntegerArray; var IndexFound: Integer; SearchBox: TBox; Action: fnct_ActionOptions): Boolean;
var
  TPA, TmpTPA: TPointArray;
  TheOptions, UpTexts: TStringArray;
  I, II, III, HH, HHH, Hi, J, c: Integer;
  CheckUpText, inBadBox: Boolean;
begin
  if (not LoggedIn) then
    Exit;

  MSI_AddHeader('MSI_FindObjectsIn ' + ToStr(Objs));

  for I := 0 to Hi do
  begin

    for  j := 0 to High(MSI_Objects[Objs[i]].UpText) do
    begin
      SetLength(UpTexts, Length(UpTexts) + 1);
      UpTexts[High(UpTexts)] := MSI_Objects[Objs[i]].UpText[j];
    end;

    for j := 0 to High(MSI_Objects[Objs[i]].Options) do
    begin
      SetLength(TheOptions, Length(TheOptions) + 1);
      TheOptions[High(TheOptions)] := MSI_Objects[Objs[i]].Options[j];
    end;
  end;

  with MSI_Objects[Objs[II]] do
    for II := 0 to Hi do
    begin
      // Check the players level; if not high enough, skip object
      if (MSI_Scripts[MSI_Players[CurrentPlayer].Scripts[CurrentScript].Name].SkillConst <> SKILL_NONE) then
        if (MSI_Players[CurrentPlayer].ReportInfo.SkillLevels[CurrentScript] < MSI_Objects[Objs[II]].Level) then
        begin
          if (ii = hi) then
            MSI_Players[CurrentPlayer].ReportInfo.FalseReason := 'Skill requirement not met';

          MSI_Debug('Not high enough level for object: ' + MSI_Objects[Objs[II]].Name);
          Continue;
        end;

      if MSI_FindObjectsTPA(TmpTPA, Objs[II], SearchBox) then
      begin
        // if set to, the script will click the closest object (this negates Priority)
        if (MSI_Scripts[MSI_Players[CurrentPlayer].Scripts[CurrentScript].Name].ClickClosest) then
        begin
          MSI_Debug('Clicking closest object to player');

          for i := 0 to High(Objs) do
            if (MSI_FindObjectsTPA(TmpTPA, Objs[i], SearchBox)) then
            begin
              //Writeln('Obj'+IntToStr(i));
              TPA := CombineTPA(TPA, TmpTPA);
            end;

          SortTPAFrom(TPA, Point(MSCX, MSCY));
        end else
          TPA := TmpTPA;

        HH := Min((Tries - 1), High(TPA));
        MSI_Debug(IntToStr(Length(TPA))+' objects found!');

        for I := 0 to HH do
        begin
          // Check to see if the point is in a bad box
          if (Length(MSI_NotBoxes) > 0) then
            for j := 0 to High(MSI_NotBoxes) do
              if (PointInBox(TPA[i], MSI_NotBoxes[j])) then
              begin
                MSI_Debug('Point in bad box');
                inBadBox := True;
                Break;
              end;

          if (inBadBox) then
            Continue;

          X := TPA[I].X;
          Y := TPA[I].Y;
          IndexFound := II;

          if (Action = Nothing) then
          begin
            Result := True;
            MSI_CloseHeader('MSI_FindObjectsIn: ' + BoolToStr(Result));
            MSI_NotBoxes := [];
            Exit;
          end;

          HHH := High(UpTexts);
          CheckUpText := True;
          for III := 0 to HHH do
            if (UpTexts[III] = '') then
            begin
              CheckUpText := False;
              Break;
            end;

          MMouse(TPA[I].X, TPA[I].Y, 2, 2);
          Wait(20 + Random(50));

          if (not CheckUpText) then
            Result := True
          else
            if (WaitUptextMulti(UpTexts, 150 + Random(20)) or WaitUptext('ake', 200)) then
            begin
              MSI_Debug('Uptext found!');
              Result := True;
            end else begin
              // Add to the bad boxes array
              SetLength(MSI_NotBoxes, Length(MSI_NotBoxes) + 1);
              MSI_NotBoxes[High(MSI_NotBoxes)] := MSI_MakeBox(Point(TPA[I].X, TPA[I].Y), (W / 2), (H / 2));
            end;

          if (Action = Move) then
          begin
            MSI_CloseHeader('MSI_FindObjectsIn: ' + BoolToStr(Result));
            MSI_NotBoxes := [];
            Exit;
          end;

          if Result then
          begin
            GetMousePos(X, Y);

            if (RightClickOnly) Or InRange(Random(100), 0, 10) Or (Action = ClickRight) then
            begin
              Mouse(X, Y, 0, 0, False);
              if (Action = ClickRight) or (Action = ClickLeft) then
                Result := (WaitOptionMulti(TheOptions, 750 + Random(100)) or waitOption('ake', 200))
              else
                Result := DidClick(True, 1200);
            end else begin
              Mouse(X, Y, 0, 0, True);
              Result := DidClick(True, 1200); ;
            end;

            if (result) then
              if ((waitToMove) and (track)) then
                MSI_TrackObject(objs[ii])
              else
                if (waitToMove) then
                  flag
                else
                  if (track) then
                    MSI_TrackObject(objs[ii]);

            MSI_CloseHeader('MSI_FindObjectsIn: ' + BoolToStr(Result));
            MSI_NotBoxes := [];
            Exit;
          end else begin
            MSI_FindRandoms(True);
            MSI_Debug('Uptext didn''t match!');
          end;
        end;
      end;
    end;

  MSI_CloseHeader('MSI_FindObjectsIn: ' + ToStr(Result));
  MSI_FindRandoms(True);
end;

(*
MSI_FindObjects
~~~~~~~~~~~~~~~

.. code-block:: pascal

  function MSI_FindObjects(Objs: TIntegerArray; var IndexFound: Integer; Action: fnct_ActionOptions): Boolean;

The exact same as MSI_FindObjectsIn, except instead of a specified search box,
it searches the main screen.

.. note::

  | Author: marpis
  | Last Updated: 10 June 2010

*)
function MSI_FindObjects(Objs: TIntegerArray; var IndexFound: Integer; Action: fnct_ActionOptions): Boolean;
begin
  Result := MSI_FindObjectsIn(Objs, IndexFound, MSBox, Action);
end;

(*
MSI_FindObjectIn
~~~~~~~~~~~~~~~~

.. code-block:: pascal

  function MSI_FindObjectIn(Obj: integer; SearchBox: TBox; Action: fnct_ActionOptions): Boolean;

The exact same as MSI_FindObjectsIn, for a single object rather than multiple.

.. note::

  | Author: marpis
  | Last Updated: 10 June 2010

*)
function MSI_FindObjectIn(Obj: integer; SearchBox: TBox; Action: fnct_ActionOptions): Boolean;
var
  TMP: Integer;
begin
  Result := MSI_FindObjectsIn([Obj], TMP, SearchBox, Action);
end;

(*
MSI_FindObject
~~~~~~~~~~~~~~

.. code-block:: pascal

  function MSI_FindObject(Obj: integer; Action: fnct_ActionOptions): Boolean;

The exact same as MSI_FindObjectIn, except it will automatically look for the
object in the main screen.

.. note::

  | Author: marpis
  | Last Updated: 10 June 2010

*)
function MSI_FindObject(Obj: integer; Action: fnct_ActionOptions): Boolean;
var
  TMP: Integer;
begin
  Result := MSI_FindObjectsIn([Obj], TMP, MSI_Objects[Obj].SearchArea, Action);
end;
