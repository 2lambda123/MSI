(*
Locations
=========

The Locations file stores all the TLocation records used in MSI.

The source for Locations.simba can be found
`here <https://github.com/SRL/MSI/raw/master/MSI/Core/Locations.simba>`_.

*)

(*
MSI_LoadLocation
~~~~~~~~~~~~~~~~

.. code-block:: pascal

  function MSI_LoadLocation(Which: Integer): Boolean;

Loads the location 'Which' (sets 'Which' in the MSI_Locations global array).
This procedure should only be called in MSI_LoadAllLocations. 'Which' represents
the location constants MSI uses, which can be found in Globals.simba.

.. note::

  | Author: Coh3n
  | Last Updated: 12 August 2011 by Coh3n

Example:

.. code-block:: pascal

  for i := 0 to High(MSI_Locations) do
    MSI_LoadLocation(i);
*)
function MSI_LoadLocation(loc: integer): boolean;
var
  i: integer;
begin
   case loc of
     LOC_POWER_SKILL:
       with MSI_Locations[loc] do
       begin
         name := 'Powerskilling';
         atBank := false;
       end;

     LOC_LOST:
       with MSI_Locations[loc] do
       begin
         name := 'Lost';
         atBank := false;
       end;

     LOC_VE_TREES:
       with MSI_Locations[loc] do
       begin
         name := 'Varrock East Trees';
         atBank := false;

         setLength(subLocs, 1);
         with subLocs[0] do
         begin
           name := 'Varrock East Trees';
           tileBox := intToBox(3271, 3439, 3282, 3458);
         end;
       end;

     LOC_VE_OAKS:
       with MSI_Locations[loc] do
       begin
         name := 'Varrock East Oaks';
         atBank := false;

         setLength(subLocs, 1);
         with subLocs[0] do
         begin
           name := 'Varrock East Oaks';
           tileBox := intToBox(3278, 3422, 3278, 3434);
         end;
       end;

     LOC_VE_BANK:
       with MSI_Locations[loc] do
       begin
         name := 'Varrock East Bank';
         atBank := true;

         setLength(subLocs, 1);
         with subLocs[0] do
         begin
           name := 'Varrock East Bank';
           tileBox := intToBox(3251, 3420, 3258, 3424);
         end;

         with deathPath do
         begin
           name := 'LOC_LB_SPAWN to LOC_VE_BANK';
           startLoc := LOC_LB_SPAWN;
           endLoc := LOC_VE_BANK;

           reflection := [TPointArray([
             point(3230, 3217), point(3242, 3224), point(3257, 3226),
             point(3260, 3238), point(3254, 3250), point(3251, 3263),
             point(3242, 3275), point(3239, 3290), point(3241, 3306),
             point(3251, 3317), point(3264, 3324), point(3278, 3332),
             point(3287, 3345), point(3296, 3356), point(3296, 3369),
             point(3294, 3382), point(3292, 3396), point(3290, 3409),
             point(3285, 3422), point(3277, 3429), point(3263, 3429),
             point(3255, 3420)])];

           color := MSI_Convert2DTilePath(reflection);
           spsAreas := ['11_5', '11_4', '11_3'];
         end;
       end;

     LOC_VE_MINE:
       with MSI_Locations[loc] do
       begin
         name := 'Varrock East Mine';
         atBank := false;

         setLength(subLocs, 1);
         with subLocs[0] do
         begin
           name := 'Varrock East Mine';
           tileBox := intToBox(3279, 3360, 3297, 3373);
         end;
       end;

     LOC_VE_FOUNTAIN:
       with MSI_Locations[loc] do
       begin
         name := 'Varrock East Fountain';
         atBank := false;

         setLength(subLocs, 1);
         with subLocs[0] do
         begin
           name := 'Varrock East Fountain';
           tileBox := intToBox(3234, 3431, 3244, 3439);
         end;
       end;

     LOC_VW_BANK:
       with MSI_Locations[loc] do
       begin
         name := 'Varrock West Bank';
         atBank := true;

         setLength(subLocs, 1);
         with subLocs[0] do
         begin
           name := 'Varrock West Bank';
           tileBox := intToBox(3182, 3433, 3188, 3447);
         end;

         with deathPath do
         begin
           name := 'LOC_LB_SPAWN to LOC_VW_BANK';
           startLoc := LOC_LB_SPAWN;
           endLoc := LOC_VW_BANK;

           reflection := [TPointArray([
             point(3230, 3217), point(3242, 3224), point(3257, 3226),
             point(3260, 3238), point(3254, 3250), point(3251, 3263),
             point(3242, 3275), point(3239, 3290), point(3241, 3306),
             point(3251, 3317), point(3264, 3324), point(3278, 3332),
             point(3287, 3345), point(3296, 3356), point(3296, 3369),
             point(3294, 3382), point(3292, 3396), point(3290, 3409),
             point(3285, 3422), point(3279, 3429), point(3264, 3428),
             point(3252, 3429), point(3238, 3430), point(3224, 3429),
             point(3208, 3429), point(3194, 3430), point(3185, 3438)])];

           color := MSI_Convert2DTilePath(reflection);
           spsAreas := ['11_5', '11_4', '11_3', '10_3'];
         end;
       end;

     LOC_VW_MINE:
       with MSI_Locations[loc] do
       begin
         name := 'Varrock West Mine';
         atBank := false;

         setLength(subLocs, 2);
         with subLocs[0] do
         begin
           name := 'Varrock West Mine North';
           tileBox := intToBox(3178, 3396, 3185, 3382);
         end;

         with subLocs[1] do
         begin
           name := 'Varrock West Mine South';
           tileBox := intToBox(3171, 3364, 3179, 3371);
         end;
       end;

     LOC_GE_BANK:
       with MSI_Locations[loc] do
       begin
         name := 'Grand Exchange Bank';
         atBank := true;

         setLength(subLocs, 1);
         with subLocs[0] do
         begin
           name := 'Grand Exchange Bank';
           tileBox := intToBox(3160, 3487, 3168, 3495);
           compass := 90;
           camera := False;
         end;

         with deathPath do
         begin
           name := 'LOC_LB_SPAWN to LOC_GE_BANK';
           startLoc := LOC_LB_SPAWN;
           endLoc := LOC_GE_BANK;

           reflection := [TPointArray([
             point(3230, 3217), point(3242, 3224), point(3257, 3226),
             point(3260, 3238), point(3254, 3250), point(3251, 3263),
             point(3242, 3275), point(3239, 3290), point(3241, 3306),
             point(3251, 3317), point(3264, 3324), point(3278, 3332),
             point(3287, 3345), point(3296, 3356), point(3296, 3369),
             point(3294, 3382), point(3292, 3396), point(3290, 3409),
             point(3285, 3422), point(3279, 3429), point(3264, 3428),
             point(3252, 3429), point(3238, 3430), point(3224, 3429),
             point(3208, 3429), point(3194, 3430), point(3185, 3438),
             point(3187, 3447), point(3179, 3450), point(3168, 3459),
             point(3165, 3471), point(3167, 3480), point(3167, 3489)])];

           color := MSI_Convert2DTilePath(reflection);
           spsAreas := ['11_5', '11_4', '11_3', '10_3', '10_2'];
         end;
       end;

     LOC_GE_YEWS:
       with MSI_Locations[loc] do
       begin
         name := 'Grand Exchange Yews';
         atBank := false;

         setLength(subLocs, 3);
         with subLocs[0] do //East tree
         begin
           name := 'Grand Exchange East Yew';
           tileBox := intToBox(3202, 3503, 3208, 3508);
           compass := 165;
           camera := False;
         end;

         with subLocs[1] do //Center tree
         begin
           name := 'Grand Exchange Center Yew';
           tileBox := intToBox(3208, 3503, 3213, 3508);
           compass := 'n';
           camera := False;
         end;

         with subLocs[2] do //West tree
         begin
           name := 'Grand Exchange West Yew';
           tileBox := intToBox(3218, 3501, 3225, 3508);
           compass := 130;
           camera := False;
         end;
       end;

     LOC_DB_BANK:
       with MSI_Locations[loc] do
       begin
         name := 'Draynor Village Bank';
         atBank := true;

         setLength(subLocs, 1);
         with subLocs[0] do
         begin
           name := 'Draynor Village Bank';
           tileBox := intToBox(3092, 3239, 3095, 3245);
         end;

         with deathPath do
         begin
           name := 'LOC_LB_SPAWN to LOC_DB_BANK';
           startLoc := LOC_LB_SPAWN;
           endLoc := LOC_DB_BANK;

           reflection := [TPointArray([
             point(3222, 3216), point(3213, 3204), point(3204, 3210),
             point(3196, 3214), point(3185, 3217), point(3175, 3218),
             point(3163, 3222), point(3153, 3225), point(3144, 3224),
             point(3132, 3225), point(3120, 3226), point(3109, 3229),
             point(3100, 3235), point(3094, 3242)])];

           color := MSI_Convert2DTilePath(reflection);
           spsAreas := ['11_5', '10_5', '9_5'];
         end;
       end;

     LOC_DB_WILLOWS:
       with MSI_Locations[loc] do
       begin
         name := 'Draynor Village Willows';
         atBank := false;

         setLength(subLocs, 1);
         with subLocs[0] do
         begin
           name := 'Draynor Village Willows';
           tileBox := intToBox(3082, 3225, 3090, 3238);
         end;
       end;

     LOC_DB_TREES:
       with MSI_Locations[loc] do
       begin
         name := 'Draynor Village Trees';
         atBank := false;

         setLength(subLocs, 1);
         with subLocs[0] do
         begin
           name := 'Draynor Village Trees';
           tileBox := intToBox(3075, 3263, 3088, 3285);
         end;
       end;

     LOC_DB_OAKS:
       with MSI_Locations[loc] do
       begin
         name := 'Draynor Village Oaks';
         atBank := false;

         setLength(subLocs, 1);
         with subLocs[0] do
         begin
           name := 'Draynor Village Oaks';
           tileBox := intToBox(3098, 3239, 3103, 3253);
         end;
       end;

     LOC_DB_FISH:
       with MSI_Locations[loc] do
       begin
         name := 'Draynor Village Fishing Spots';
         atBank := false;

         setLength(subLocs, 1);
         with subLocs[0] do
         begin
           name := 'Draynor Village Fishing Spots';
           tileBox := intToBox(3084, 3220, 3089, 3233);
         end;
       end;

     LOC_DB_CLAY:
       with MSI_Locations[loc] do
       begin
         name := 'Draynor Village Clay Mine';
         atBank := false;

         setLength(subLocs, 1);
         with subLocs[0] do
         begin
           name := 'Draynor Village Clay Mine';
           tileBox := intToBox(3137, 3322, 3145, 3313);
         end;
       end;

     LOC_DB_YEWS:
       with MSI_Locations[loc] do
       begin
         name := 'Draynor Village Yews';
         atBank := false;

         setLength(subLocs, 3);
         with subLocs[0] do
         begin
           name := 'Draynor Village Yews West';
           tileBox := intToBox(3149, 3226, 3154, 3233);
           compass := 90;
           camera := False;
         end;

         with subLocs[1] do
         begin
           name := 'Draynor Village Yews Central';
           tileBox := intToBox(3164, 3219, 3168, 3224);
           compass := 170;
           camera := False;
         end;

         with subLocs[2] do
         begin
           name := 'Draynor Village Yews East';
           tileBox := intToBox(3178, 3225, 3183, 3229);
           compass := 's';
           camera := False;
         end;
       end;

     LOC_RM_YEWS:
       with MSI_Locations[loc] do
       begin
         name := 'Rimmington Yews';
         atBank := false;

         setLength(subLocs, 3);
         with subLocs[0] do
         begin
           name := 'Rimmington Yews East';
           tileBox := intToBox(2937, 3229, 2942, 3234);
         end;

         with subLocs[1] do
         begin
           name := 'Rimmington Yews Central';
           tileBox := intToBox(2931, 3224, 2936, 3230);
         end;

         with subLocs[2] do
         begin
           name := 'Rimmington Yews West';
           tileBox := intToBox(2926, 3226, 2931, 3231);
         end;
       end;

     LOC_RM_MINE_NORTH:
       with MSI_Locations[loc] do
       begin
         name := 'Rimmington North Mine';
         atBank := false;

         setLength(subLocs, 1);
         with subLocs[0] do
         begin
           name := 'Rimmington North Mine';
           tileBox := intToBox(2981, 3243, 2975, 3249);
         end;
       end;

     LOC_RM_MINE_EAST:
       with MSI_Locations[loc] do
       begin
         name := 'Rimmington East Mine';
         atBank := false;

         setLength(subLocs, 1);
         with subLocs[0] do
         begin
           name := 'Rimmington East Mine';
           tileBox := intToBox(2984, 3234, 2988, 3240);
         end;
       end;

     LOC_RM_MINE_SOUTH:
       with MSI_Locations[loc] do
       begin
         name := 'Rimmington South Mine';
         atBank := false;

         setLength(subLocs, 1);
         with subLocs[0] do
         begin
           name := 'Rimmington South Mine';
           tileBox := intToBox(2980, 3231, 2984, 3235);
         end;
       end;

     LOC_RM_MINE_WEST:
       with MSI_Locations[loc] do
       begin
         name := 'Rimmington West Mine';
         atBank := false;

         setLength(subLocs, 1);
         with subLocs[0] do
         begin
           name := 'Rimmington West Mine';
           tileBox := intToBox(2966, 3235, 2973, 3243);
         end;
       end;

     LOC_RM_WILLOWS:
       with MSI_Locations[loc] do
       begin
         name := 'Rimmington Willows';
         atBank := false;

         setLength(subLocs, 0);
       end;

     LOC_FE_BANK:
       with MSI_Locations[loc] do
       begin
         name := 'Falador East Bank';
         atBank := true;

         setLength(subLocs, 1);
         with subLocs[0] do
         begin
           name := 'Falador East Bank';
           tileBox := intToBox(3009, 3355, 3017, 3358);
         end;

         with deathPath do
         begin
           name := 'LOC_LB_SPAWN to LOC_FE_BANK';
           startLoc := LOC_LB_SPAWN;
           endLoc := LOC_FE_BANK;

           reflection := [TPointArray([
             point(3229, 3217), point(3234, 3223), point(3226, 3236),
             point(3219, 3249), point(3216, 3263), point(3211, 3276),
             point(3197, 3280), point(3184, 3285), point(3171, 3285),
             point(3160, 3290), point(3147, 3294), point(3131, 3294),
             point(3117, 3294), point(3103, 3293), point(3089, 3289),
             point(3077, 3280), point(3064, 3277), point(3050, 3275),
             point(3035, 3275), point(3022, 3276), point(3009, 3279),
             point(3007, 3294), point(3005, 3304), point(3007, 3317),
             point(3006, 3331), point(3007, 3343), point(3006, 3357),
             point(3012, 3361), point(3014, 3356)])];

           color := MSI_Convert2DTilePath(reflection);
           spsAreas := ['11_5', '10_4', '9_4'];
         end;
       end;

     LOC_FW_BANK:
       with MSI_Locations[loc] do
       begin
         name := 'Falador West Bank';
         atBank := true;

         setLength(subLocs, 1);
         with subLocs[0] do
         begin
           name := 'Falador West Bank';
           tileBox := intToBox(2948, 3367, 2944, 3370);
         end;

         with deathPath do
         begin
           name := 'LOC_LB_SPAWN to LOC_FW_BANK';
           startLoc := LOC_LB_SPAWN;
           endLoc := LOC_FW_BANK;

           reflection := [TPointArray([
             point(3229, 3217), point(3234, 3223), point(3226, 3236),
             point(3219, 3249), point(3216, 3263), point(3211, 3276),
             point(3197, 3280), point(3184, 3285), point(3171, 3285),
             point(3160, 3290), point(3147, 3294), point(3131, 3294),
             point(3117, 3294), point(3103, 3293), point(3089, 3289),
             point(3077, 3280), point(3064, 3277), point(3050, 3275),
             point(3035, 3275), point(3022, 3276), point(3009, 3279),
             point(3007, 3294), point(3005, 3304), point(3007, 3317),
             point(3006, 3331), point(3007, 3343), point(3006, 3357),
             point(2999, 3364), point(2988, 3372), point(2977, 3378),
             point(2962, 3379), point(2952, 3380), point(2946, 3368)])];

           color := MSI_Convert2DTilePath(reflection);
           spsAreas := ['11_5', '10_4', '9_4', '8_4'];
         end;
       end;

     LOC_FW_MINE:
       with MSI_Locations[loc] do
       begin
         name := 'Falador West Mine';
         atBank := false;

         setLength(subLocs, 2);
         with subLocs[0] do
         begin
           name := 'Falador West Mine North';
           tileBox := intToBox(2907, 3361, 2911, 3369);
         end;

         with subLocs[1] do
         begin
           name := 'Falador West Mine South';
           tileBox := intToBox(2901, 3352, 2907, 3362);
         end;
       end;

     LOC_FW_PUMP:
       with MSI_Locations[loc] do
       begin
         name := 'Falador WaterPump';
         atBank := false;

         setLength(subLocs, 1);
         with subLocs[0] do
         begin
           name := 'Falador WaterPump';
           tileBox := intToBox(2946, 3380, 2950, 3385);
         end;
       end;

     LOC_PS_WILLOWS:
       with MSI_Locations[loc] do
       begin
         name := 'Port Sarim Willows';
         atBank := false;

         setLength(subLocs, 2);
         with subLocs[0] do
         begin
           name := 'Port Sarim Willows South';
           tileBox := intToBox(3055, 3243, 3063, 3255);
           compass := 'w';
           camera := False;
         end;

         with subLocs[1] do
         begin
           name := 'Port Sarim Willows North';
           tileBox := intToBox(3056, 3256, 3066, 3264);
         end;
       end;

     LOC_PS_YEWS:
       with MSI_Locations[loc] do
       begin
         name := 'Port Sarim Yews';
         atBank := false;

         setLength(subLocs, 2);
         with subLocs[0] do
         begin
           name := 'Port Sarim Yews';
           tileBox := intToBox(3050, 3266, 3056, 3272);
           compass := 'n';
           camera := False;
         end;

         with subLocs[1] do
         begin
           name := 'Port Sarim West Yew';
           tileBox := intToBox(3038, 3269, 3043, 3273);
           compass := 's';
           camera := False;
         end;
       end;

     LOC_PS_DBOX:
       with MSI_Locations[loc] do
       begin
         name := 'Port Sarim Deposit Box';
         atBank := true;

         setLength(subLocs, 1);
         with subLocs[0] do
         begin
           name := 'Port Sarim Deposit Box';
           tileBox := intToBox(3043, 3234, 3049, 3238);
         end;

         with deathPath do
         begin
           name := 'LOC_LB_SPAWN to LOC_PS_DBOX';
           startLoc := LOC_LB_SPAWN;
           endLoc := LOC_PS_DBOX;

           reflection := [TPointArray([
             point(3222, 3216), point(3219, 3207), point(3208, 3203),
             point(3203, 3214), point(3194, 3215), point(3183, 3216),
             point(3173, 3218), point(3162, 3221), point(3152, 3221),
             point(3143, 3225), point(3131, 3223), point(3119, 3221),
             point(3111, 3225), point(3106, 3232), point(3094, 3232),
             point(3088, 3236), point(3082, 3240), point(3075, 3246),
             point(3073, 3256), point(3072, 3265), point(3070, 3275),
             point(3064, 3266), point(3063, 3259), point(3055, 3250),
             point(3044, 3245), point(3046, 3234)])];

           color := MSI_Convert2DTilePath(reflection);
           spsAreas := ['11_5', '10_5', '9_5'];
         end;
       end;

     LOC_LSW_MINE:
       with MSI_Locations[loc] do
       begin
         name := 'Lumbridge Swamp West Mine';
         atBank := false;

         setLength(subLocs, 1);
         with subLocs[0] do
         begin
           name := 'Lumbridge Swamp West Mine';
           tileBox := intToBox(3143, 3140, 3152, 3153);
         end;
       end;

     LOC_LSE_MINE:
       with MSI_Locations[loc] do
       begin
         name := 'Lumbridge Swamp East Mine';
         atBank := false;

         setLength(subLocs, 1);
         with subLocs[0] do
         begin
           name := 'Lumbridge Swamp East Mine';
           tileBox := intToBox(3221, 3141, 3233, 3150);
         end;
       end;

     LOC_LB_SPAWN:
       with MSI_Locations[loc] do
       begin
         name := 'Lumbridge Courtyard';
         atBank := false;

         setLength(subLocs, 1);
         with subLocs[0] do
         begin
           name := 'Lumbridge Courtyard';
           tileBox := intToBox(3219, 3213, 3224, 3222);
         end;
       end;

     LOC_EV_BANK:
       with MSI_Locations[loc] do
       begin
         name := 'Edgeville Bank';
         atBank := true;

         setLength(subLocs, 1);
         with subLocs[0] do
         begin
           name := 'Edgeville Bank';
           tileBox := intToBox(3091, 3490, 3094, 3498);
         end;

         with deathPath do
         begin
           name := 'LOC_LB_SPAWN to LOC_EV_BANK';
           startLoc := LOC_LB_SPAWN;
           endLoc := LOC_EV_BANK;

           reflection := [TPointArray([
             point(3230, 3217), point(3242, 3224), point(3257, 3226),
             point(3260, 3238), point(3254, 3250), point(3251, 3263),
             point(3242, 3275), point(3239, 3290), point(3241, 3306),
             point(3251, 3317), point(3264, 3324), point(3278, 3332),
             point(3287, 3345), point(3296, 3356), point(3296, 3369),
             point(3294, 3382), point(3292, 3396), point(3290, 3409),
             point(3285, 3422), point(3279, 3429), point(3264, 3428),
             point(3252, 3429), point(3238, 3430), point(3224, 3429),
             point(3208, 3429), point(3194, 3430), point(3189, 3429),
             point(3176, 3428), point(3164, 3423), point(3150, 3417),
             point(3137, 3417), point(3123, 3417), point(3112, 3422),
             point(3099, 3420), point(3092, 3430), point(3092, 3441),
             point(3096, 3453), point(3099, 3465), point(3097, 3478),
             point(3088, 3485), point(3089, 3492), point(3093, 3491)])];

           color := MSI_Convert2DTilePath(reflection);
           spsAreas := ['11_5', '10_4', '10_3', '9_3', '9_2'];
         end;
       end;

     LOC_EV_YEWS:
       with MSI_Locations[loc] do
       begin
         name := 'Edgeville Yews';
         atBank := false;

         setLength(subLocs, 2);
         with subLocs[0] do
         begin
           name := 'Edgeville Yews North';
           tileBox := intToBox(3089, 3470, 3086, 3473);
           compass := 'n';
           camera := False;
         end;

         with subLocs[1] do
         begin
           name := 'Edgeville Yews South';
           tileBox := intToBox(3085, 3477, 3088, 3480);
           compass := 's';
           camera := False;
         end;
       end;

     LOC_EV_WELL:
       with MSI_Locations[loc] do
       begin
         name := 'Edgeville Well';
         atBank := false;

         setLength(subLocs, 1);
         with subLocs[0] do
         begin
           name := 'Edgeville Well';
           tileBox := intToBox(3080, 3500, 3087, 3506);
         end;
       end;

     LOC_BBV_MINE:
       with MSI_Locations[loc] do
       begin
         name := 'Barbarian Village Mine';
         atBank := false;

         setLength(subLocs, 1);
         with subLocs[0] do
         begin
           name := 'Barbarian Village Mine';
           tileBox := intToBox(3077, 3418, 3085, 3425);
         end;
       end;

     LOC_BBV_FISH:
       with MSI_Locations[loc] do
       begin
         name := 'Barbarian Village Fishing Spot';
         atBank := false;

         setLength(subLocs, 2);
         with subLocs[0] do
         begin
           name := 'Barbarian Village Fishing Spot North';
           tileBox := intToBox(3106, 3431, 3110, 3437);
         end;

         with subLocs[1] do
         begin
           name := 'Barbarian Village Fishing Spot South';
           tileBox := intToBox(3101, 3423, 3104, 3428);
         end;
       end;

     LOC_SV_MAGICS:
       with MSI_Locations[loc] do
       begin
         name := 'Seers Village Magic Trees';
         atBank := false;

         setLength(subLocs, 2);
         with subLocs[0] do //East trees
         begin
           name := 'Seers Village East Magic Trees';
           tileBox := intToBox(2695, 3395, 2699, 3403);
         end;

         with subLocs[1] do //West trees
         begin
           name := 'Seers Village West Magic Trees';
           tileBox := intToBox(2701, 3394, 2705, 3402);
         end;
       end;

     LOC_SV_OAKS:
       with MSI_Locations[loc] do
       begin
         name := 'Seers Village Oak Trees';
         atBank := false;

         setLength(subLocs, 1);
         with subLocs[0] do
         begin
           name := 'Seers Village Oak Trees';
           tileBox := intToBox(2715, 3478, 2722, 3486);
         end;
       end;

     LOC_SV_TREES:
       with MSI_Locations[loc] do
       begin
         name := 'Seers Village Trees';
         atBank := False;

         setLength(subLocs, 1);
         with subLocs[0] do
         begin
           name := 'Seers Village Trees';
           tileBox := intToBox(2707, 3435, 2729, 3455);
         end;
       end;

     LOC_SV_BANK:
       with MSI_Locations[loc] do
       begin
         name := 'Seers Village Bank';
         atBank := true;

         setLength(subLocs, 1);
         with subLocs[0] do
         begin
           name := 'Seers Village Bank';
           tileBox := intToBox(2719, 3489, 2729, 3495);
         end;

         with deathPath do
         begin
           name := 'LOC_LB_SPAWN to LOC_SV_BANK';
           startLoc := LOC_LB_SPAWN;
           endLoc := LOC_SV_BANK;

           reflection := [TPointArray([])];

           color := MSI_Convert2DTilePath(reflection);
           spsAreas := [];
         end;
       end;

     LOC_SV_MAPLES:
       with MSI_Locations[loc] do
       begin
         name := 'Seers Village Maples';
         atBank := false;

         setLength(subLocs, 1);
         with subLocs[0] do
         begin
           name := 'Seers Village Maples';
           tileBox := intToBox(2717, 3499, 2733, 3507);
         end;
       end;

     LOC_SV_YEWS:
       with MSI_Locations[loc] do
       begin
         name := 'Seers Village Yews';
         atBank := false;

         setLength(subLocs, 2);
         with subLocs[0] do
         begin
           name := 'Seers Village East Yew';
           tileBox := intToBox(2710, 3458, 2716, 3464);
         end;

         with subLocs[1] do
         begin
           name := 'Seers Village West Yews';
           tileBox := intToBox(2702, 3458, 2706, 3469);
         end;
       end;

     LOC_GUILD_MINE:
       with MSI_Locations[loc] do
       begin
         name := 'Mining Guild';
         atBank := false;

         setLength(subLocs, 1);
         with subLocs[0] do //Ladders
         begin
           name := 'Mining Guild: Ladders';
           tileBox := intToBox(3014, 3336, 3022, 3342);
         end;
       end;

     LOC_CG_MINE:
       with MSI_Locations[loc] do
       begin
         name := 'Crafting Guild Mine';
         atBank := false;

         setLength(subLocs, 2);
         with subLocs[0] do
         begin
           name := 'Crafting Guild Mine South';
           tileBox := intToBox(2937, 3276, 2942, 3281);
         end;

         with subLocs[1] do
         begin
           name := 'Crafting Guild Mine North';
           tileBox := intToBox(2939, 3285, 2942, 3290);
         end;
       end;

     LOC_AK_BANK:
       with MSI_Locations[loc] do
       begin
         name := 'Al Kharid Bank';
         atBank := true;

         setLength(subLocs, 1);
         with subLocs[0] do
         begin
           name := 'Al Kharid Bank';
           tileBox := intToBox(3268, 3161, 3272, 3168);
         end;

         with deathPath do
         begin
           name := 'LOC_LB_SPAWN to LOC_AK_BANK';
           startLoc := LOC_LB_SPAWN;
           endLoc := LOC_AK_BANK;

           reflection := [TPointArray([
             point(3223, 3217), point(3235, 3212), point(3237, 3201),
             point(3243, 3191), point(3242, 3180), point(3246, 3171),
             point(3257, 3172), point(3270, 3174), point(3270, 3165)])];

           color := MSI_Convert2DTilePath(reflection);
           spsAreas := ['11_5'];
         end;
       end;

     LOC_AK_RANGE:
       with MSI_Locations[loc] do
       begin
         name := 'Al Kharid Cooking Range';
         atBank := false;

         setLength(subLocs, 1);
         with subLocs[0] do
         begin
           name := 'Al Kharid Cooking Range';
           tileBox := intToBox(3272, 3177, 3278, 3181);
         end;
       end;

     LOC_AK_MINE_SOUTH:
       with MSI_Locations[loc] do
       begin
         name := 'Al Kharid Mine South';
         atBank := false;

         setLength(subLocs, 1);
         with subLocs[0] do
         begin
           name := 'Al Kharid Mine South';
           tileBox := intToBox(3294, 3295, 3304, 3305);
         end;
       end;

     LOC_AK_MINE_CENTRAL:
       with MSI_Locations[loc] do
       begin
         name := 'Al Kharid Mine Central';
         atBank := false;

         setLength(subLocs, 1);
         with subLocs[0] do
         begin
           name := 'Al Kharid Mine Central';
           tileBox := intToBox(3296, 3284, 3303, 3298);
         end;
       end;

     LOC_AK_MINE_NORTH:
       with MSI_Locations[loc] do
       begin
         name := 'Al Kharid Mine North';
         atBank := false;

         setLength(subLocs, 1);
         with subLocs[0] do
         begin
           name := 'Al Kharid Mine North';
           tileBox := intToBox(3297, 3308, 3305, 3318);
         end;
       end;

     LOC_KJ_STILES:
       with MSI_Locations[loc] do
       begin
         name := 'Stiles On Karamja';
         atBank := false;

         setLength(subLocs, 1);
         with subLocs[0] do
         begin
           name := 'Stiles On Karamja';
           tileBox := intToBox(2849, 3138, 2852, 3143);
         end;
       end;

     LOC_KJ_FISH:
       with MSI_Locations[loc] do
       begin
         name := 'Karamja Fishing Spot';
         atBank := false;

         setLength(subLocs, 1);
         with subLocs[0] do
         begin
           name := 'Karamja Fishing Spot';
           tileBox := intToBox(2922, 3172, 2925, 3179);
         end;
       end;

     LOC_CB_BANK:
       with MSI_Locations[loc] do
       begin
         name := 'Catherby Bank';
         atBank := true;

         setLength(subLocs, 1);
         with subLocs[0] do
         begin
           name := 'Catherby Bank';
           tileBox := intToBox(2805, 3439, 2811, 3443);
         end;

         with deathPath do
         begin
           name := 'LOC_LB_SPAWN to LOC_CB_BANK';
           startLoc := LOC_LB_SPAWN;
           endLoc := LOC_CB_BANK;

           reflection := [TPointArray([])];

           color := MSI_Convert2DTilePath(reflection);
           spsAreas := [];
         end;
       end;

     LOC_CB_FISH:
       with MSI_Locations[loc] do
       begin
         name := 'Catherby Fishing Spots';
         atBank := false;

         setLength(subLocs, 4);
         with subLocs[0] do //East spot
         begin
           name := 'Catherby East Fishing Spot';
           tileBox := intToBox(2832, 3429, 2839, 3434);
         end;

         with subLocs[1] do //East/Central Spot
         begin
           name := 'Catherby East/Central Fishing Spot';
           tileBox := intToBox(2841, 3426, 2847, 3433);
         end;

         with subLocs[2] do //West/Central Spot
         begin
           name := 'Catherby West/Central Fishing Spot';
           tileBox := intToBox(2849, 3421, 2855, 3427);
         end;

         with subLocs[3] do //West Spot
         begin
           name := 'Catherby West Fishing Spot';
           tileBox := intToBox(2856, 3424, 2861, 3430);
         end;
       end;
  end;

  with MSI_Locations[loc] do
  begin
    constant := loc;

    for i := 0 to high(subLocs) do
    begin
      subLocs[i].spsBox := MSI_ConvertTileBox(subLocs[i].tileBox);
      subLocs[i].camera := true;
      subLocs[i].compass := 'n';
    end;
  end;

  result := (MSI_Locations[loc].Name <> '');
end;

(*
MSI_LoadAllLocations
~~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

  procedure MSI_LoadAllLocations;

Loads all the locations into the MSI_Locations array.  This procedure should
only be called in MSI_Setup.

.. note::

  | Author: Coh3n
  | Last Updated: 02 August 2010 by Coh3n

*)
procedure MSI_LoadAllLocations;
var
  i: Integer;
begin
  for i := 0 to High(MSI_Locations) do
    MSI_LoadLocation(i);
end;

(*
MSI_SetPlayerLoc
~~~~~~~~~~~~~~~~

.. code-block:: pascal

  procedure MSI_SetPlayerLoc();

Set's the player's location.  Checks the script's starting and ending locations.
If the player isn't at either, it won't set the player's location.

.. note::

  | Author: NCDS
  | Last Updated: 06 July 2011 by NCDS

Example:

.. code-block:: pascal

  MSI_SetPlayerLoc();
*)
procedure MSI_SetPlayerLoc();
var
  i: Integer;
  locArr: TIntegerArray;
  Script: TScript;
begin
  if (not LoggedIn) then
    Exit;

  MSI_AddHeader('MSI_SetPlayerLoc');

  Script := MSI_Scripts[MSI_Players[CurrentPlayer].Scripts[CurrentScript].Name];
  SetLength(locArr, 2);
  locArr[0] := Script.PathInfo.StartLoc;
  locArr[1] := Script.PathInfo.EndLoc;

  for i := 0 to 1 do
    if (MSI_AtLocation(locArr[i], false)) then
    begin
      MSI_Players[CurrentPlayer].location := locArr[i];
      MSI_Debug('Player''s location: '+MSI_Locations[locArr[i]].name);
      break;
    end else
      if (i = 1) then
        if (not MSI_WalkPath(script.pathInfo, (invCount < 15))) then
          MSI_DeathWalk();

  MSI_CloseHeader('MSI_SetPlayerLoc: Done');
end;

