(*
Banking
=======

The Antiban file includes MSI's custom banking procedures. It uses MSI's
object finding methods to interact with banks NPCs.

*)
function MSI_HandlePin(Pin: string): Boolean;
var
  t: Integer;
begin
  if (MSI_Players[CurrentPlayer].Pin = '') then
    Exit;
  MSI_AddHeader('MSI_HandlePin');
  t := (GetSystemTime + 10000);
  repeat
    Result := InPin(Pin) or BankScreen;
    Wait(50);
  until(Result or (GetSystemTime >= t));
  MSI_CloseHeader('MSI_HandlePin: '+ToStr(Result));
end;
(*
MSI_OpenBank
~~~~~~~~~~~~

.. code-block:: pascal

  function MSI_OpenBank(Which: Integer; tPin: String): Boolean;

Opens the bank 'Which' (bank constants found in Globals.simba). Will attempt 15
times before looking for a bank minimap symbol. Will enter player's PIN (tPin)
if the PIN screen appears.

.. note::

  | Author: Coh3n
  | Last Updated: 10 Febuary 2011 by NCDS

Example:

.. code-block:: pascal

  if (MSI_OpenBank(MSI_BANK_VE, MSI_Players[CurrentPlayer].Pin)) then
    MSI_Debug('Successfully opened ' + MSI_Objects[MSI_BANK_VE].Name);
*)
function MSI_OpenBank(which: Integer; tPin: String): Boolean;
var
  t: Integer;
  bankType: TBank;
begin
  if (not LoggedIn) then
    Exit;

  bankType := MSI_Scripts[MSI_Players[CurrentPlayer].Scripts[CurrentScript].Name].BankType;
  if bankType = NoBank then
    Exit;

  MSI_AddHeader('MSI_OpenBank');
  Result := BankScreen or DepositScreen;

  if (not Result) then
  begin
    t := (GetSystemTime + 60000);
    if bankType = Bank then
      Result := MSI_HandlePin(tPin);

    while (not Result) and (GetSystemTime < t) and LoggedIn do
    begin
      MSI_FindRandoms(False);

      if (MSI_FindObject(which, ClickRight)) then
      begin
        if bankType = Bank then
          Result := MSI_HandlePin(tPin);

        if (not Result) then
          case bankType of
            Bank: Result := WaitFunc(@BankScreen, 100, 15000);
            DBox: Result := WaitFunc(@DepositScreen, 100, 15000);
          end;
      end;

      if (not Result) then
        if ((t - GetSystemTime) > 30000) then
        begin
          NotBoxes := [];
          Wait(RandomRange(2000, 3000));
          MSI_Relocate(MSI_Players[CurrentPlayer].Location);
        end;
    end;
  end;

  if (MSI_SetupVars[SETUP_DEBUG_SMART]) then
    SMART_DrawBoxEx(True, IntToBox(0, 0, 0, 0), clWhite);

  MSI_CloseHeader('MSI_OpenBank: '+BoolToStr(Result)+'('+MSI_Objects[which].Name+')');
end;

(*
MSI_ExchangeNPC
~~~~~~~~~~~~~~~

.. code-block:: pascal

  function MSI_ExchangeNPC(Which: Integer): Boolean;

Exchanges with NPC 'Which' (object constants found in Globals.simba). Will
right-click and choose the object's (Which) Option attribute. Will attempt 30
times before returning false.

.. note::

  | Author: 3Garrett3
  | Last Updated: 10 Febuary 2011 by NCDS

Example:

.. code-block:: pascal

  if (MSI_ExchangeNPC(NPC_STILES)) then
    MSI_Debug('Successfully opened ' + MSI_Objects[NPC_STILES].Name);
*)
function MSI_ExchangeNPC(which: Integer) : Boolean;
var
  t : Integer;
begin
  if (not LoggedIn) then
    Exit;

  try
    MSI_AddHeader('MSI_ExchangeNPC');

    t := 0;
    repeat
      Inc(t);
      Result := MSI_FindObject(which, ClickRight);
    until(Result or (t >= MSI_Objects[which].Tries));

  finally
    MSI_CloseHeader('MSI_ExchangeNPC:' + BoolToStr(Result) + ' (' + MSI_Objects[which].Name + ')');
  end;
end;

(*
MSI_Deposit
~~~~~~~~~~~

.. code-block:: pascal

  function MSI_Deposit(Items, Amounts: TIntegerArray; var DepAll: Boolean): Boolean;

Deposits all the 'Items' and their respective amounts 'Amounts'. DepAll will
be set to True if the 'Deposit-All' button was used. Set 'Amounts' to '[]' if
all occurances of each item is to be deposited.

.. note::

  | Author: Coh3n
  | Last Updated: 25 July 2010 by Coh3n

Example:

.. code-block:: pascal

  var
    depositedAll: Boolean;

  if (MSI_OpenBank(MSI_BANK_VE)) then
    if (MSI_Deposit([LOGS_NORMAL, LOGS_OAK], [], depositedAll)) then
      MSI_Debug('Items successfully deposited');
*)
function MSI_Deposit(Items, Amounts: TIntegerArray; var DepAll: Boolean): Boolean;
var
  i, t, x, y: Integer;
  b: TBox;
  itemsDeposited: TBooleanArray;
  slots: TIntegerArray;
  s: TStringArray;
begin
  if (not LoggedIn) then
    Exit;

  if (not BankScreen) then
    if (not DepositScreen) then
      Exit;

  if (InvCount <= Length(MSI_Players[CurrentPlayer].Scripts[CurrentScript].Exceptions)) then
  begin
    MSI_SubDebug('No items in inventory');
    Result := True;
    Exit;
  end;

  MSI_AddHeader('MSI_Deposit');

  SetLength(itemsDeposited, Length(Items));

  if (Length(Amounts) <= 0) then
  begin
    SetLength(Amounts, Length(Items));
    for i := 0 to High(Amounts) do
      Amounts[i] := 28;
  end;

  if (Length(MSI_Players[CurrentPlayer].Scripts[CurrentScript].Exceptions) <= 0) then
  begin
    Result := DepositAll; // Deposits all if there are no exceptions
    DepAll := Result;
    if (Result) then
      MSI_Debug('Deposited all items in the inventory');
  end else begin
    MSI_Debug('Exceptions: '+ToStr(MSI_Players[CurrentPlayer].Scripts[CurrentScript].Exceptions));

    for i := 0 to High(Items) do
    begin
      slots := MSI_FindItemSlots(Items[i]);

      // If items aren't found, sets the deposit array to true and continues
      if (Length(slots) <= 0) then
      begin
        itemsDeposited[i] := True;
        Continue;
      end;

      if (Length(slots) = 1) then
        s := ['osit']
      else
        s := ['-All'];

      if (Amounts[i] >= 28) or (Amounts[i] = 1) then
        itemsDeposited[i] := MSI_ClickItemSlot(slots[0], s)
      else
        if (InIntArray([5, 10], Amounts[i])) then
          itemsDeposited[i] := MSI_ClickItemSlot(slots[0], ['-'+IntToStr(Amounts[i])])
        else
          if (MSI_ClickItemSlot(slots[0], ['-X'])) then
            if (WaitColor(254, 401, ClBlack, 0, 1200)) then
            begin
              TypeSend(IntToStr(Amounts[i]));
              itemsDeposited[i] := True;
            end;

      case MSI_Scripts[MSI_Players[CurrentPlayer].Scripts[CurrentScript].Name].BankType of
        Bank: b := IntToBox(MIX1, MIY1, MIX2, MIY2);
        DBox: b := IntToBox(DBX1, DBY1, DBX2, DBY2);
      end;

      if (itemsDeposited[i]) then
      begin
        t := (GetSystemTime + 5000);

        // For a lag failsafe; sometimes it takes a while for the items to disappear from the inventory
        while (GetSystemTime < t) do
        begin
          Wait(RandomRange(300, 500));
          if (not FindDTM(MSI_Items[Items[i]].DTM, x, y, b.x1, b.y1, b.x2, b.y2)) then
            Break;
        end;
      end;
    end;
  end;

  if (Length(MSI_Players[CurrentPlayer].Scripts[CurrentScript].Exceptions) > 0) then
  begin
    for i := 0 to High(itemsDeposited) do
      if (not itemsDeposited[i]) then // Returns false if it fails to deposit one item
      begin
        MSI_CloseHeader('MSI_Deposit: ' + BoolToStr(Result) + ' (' + MSI_Items[Items[i]].Name + ')');
        Exit;
      end else
        MSI_Debug('Deposited '+Capitalize(MSI_Items[Items[i]].Name));

    Result := True;
  end;

  MSI_CloseHeader('MSI_Deposit: ' + BoolToStr(Result));
end;

(*
MSI_Withdraw
~~~~~~~~~~~~

.. code-block:: pascal

  function MSI_Withdraw(Items, Amounts: TIntegerArray): Boolean;

Works like MSI_Deposit - Withdraws the 'Amounts' of each item in 'Items'. Item
constants can be found in Globals.simba.

.. note::

  | Author: Coh3n
  | Last Updated: 28 March 2011 by NCDS

Example:

.. code-block:: pascal

  if (MSI_OpenBank(MSI_BANK_FE)) then
    if (MSI_Withdraw([ORE_COPPER, ORE_TIN], [14, 14])) then
      MSI_Debug('Items successfully withdrawn');
*)
function MSI_Withdraw(Items, Amounts: TIntegerArray): Boolean;
var
  i, x, y, ii: Integer;
  p: TPointArray;
  itemsWithdrew: TBooleanArray;
begin
  if (not LoggedIn) or (not WaitFunc(@BankScreen, 90, 1300)) then
    Exit;

  MSI_AddHeader('MSI_Withdraw');

  if (Length(Amounts) = 0) then
  begin
    SetLength(Amounts, Length(Items));
    for i := 0 to High(Amounts) do
      if (MSI_Items[Items[i]].Stackable) then
        Amounts[i] := -1
      else
        Amounts[i] := 1;
  end;

  SetLength(itemsWithdrew, Length(Items));

  for i := 0 to High(Items) do
  begin
    for ii := 0 to 4 do
    begin
      FindDTMs(MSI_Items[Items[i]].DTM, p, MBX1, MBY1, MBX2, MBY2);
      if (Length(p) > 0) then
        Break;
      Wait(100 + Random(25));
    end;
    if (Length(p) < 1) then
    begin
      MSI_Debug('Failed to find item in bank: '+Capitalize(MSI_Items[Items[i]].Name));
      Exit;
    end else
    for ii := 0 to High(p) do
    begin
      MMouse(p[ii].x, p[ii].y, 4, 4);
      if WaitUpTextMulti(MSI_Items[Items[i]].UpText, 400) then
        Break;
      if ii = High(p) - 1 then
      begin
        MSI_Debug('Failed to find item in bank: '+Capitalize(MSI_Items[Items[i]].Name));
        Exit;
      end;
    end;
    MSI_Debug('Found item in bank: '+Capitalize(MSI_Items[Items[i]].Name));
    GetMousePos(x, y);
    if (Amounts[i] = 1) then
    begin
      Mouse(x, y, 0, 0, True);
      itemsWithdrew[i] := True;
      Continue;
    end else
      Mouse(x, y, 0, 0, False);

    if (Amounts[i] = -1) then
      itemsWithdrew[i] := WaitOption('-All', 500)
    else
      if (InIntArray([5, 10], Amounts[i])) then
        itemsWithdrew[i] := WaitOption('-'+IntToStr(Amounts[i]), 500)
      else
        if (WaitOption('-X', 500)) then
          if (WaitColor(254, 401, ClBlack, 0, 1200)) then
          begin
            TypeSend(IntToStr(Amounts[i]));
            itemsWithdrew[i] := True;
          end;
  end;

  for i := 0 to High(itemsWithdrew) do
    if (not itemsWithdrew[i]) then // Returns false if it fails to withdraw one item
    begin
      MSI_CloseHeader('MSI_Withdraw: ' + BoolToStr(Result) + ' (' + MSI_Items[Items[i]].Name + ')');
      Exit;
    end else
      MSI_Debug('Withdrew '+Capitalize(MSI_Items[Items[i]].Name));

  Result := True;
  MSI_CloseHeader('MSI_Withdraw: ' + BoolToStr(Result));
end;

(*
MSI_WithdrawBestTool
~~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

  function MSI_WithdrawBestTool(): Boolean;

Will open the bank at which the player is currently located and attempt to
withdraw the best tool for the current script. This is and should only be called
during player/script setup. It is currently used specifically for mining and
woodcutting.  It will also wield the tool depending on the player's attack
level.

.. note::

  | Author: Coh3n
  | Last Updated: 27 March 2011 by Coh3n

Example:

.. code-block:: pascal

  if (not RequiredToolNotFound) then
    MSI_WithdrawBestTool();
*)
function MSI_WithdrawBestTool(): Boolean;
var
  i, emptySlot: Integer;
begin
  if (not LoggedIn) then
    Exit;

  with MSI_Scripts[MSI_Players[CurrentPlayer].Scripts[CurrentScript].Name] do
    if (MSI_OpenBank(WhichBank, MSI_Players[CurrentPlayer].Pin)) then
    begin
      Wait(RandomRange(500, 1000));

      // Get the first empty inventory slot (this will be where the item is withdrawn to)
      for i := 1 to 28 do
        if (not ExistsItem(i)) then
        begin
          emptySlot := i;
          Break;
        end;

      for i := MSI_BestTool downto MSI_WorstTool do
        if (MSI_Withdraw([i], [1])) then
        begin
          CloseBank();
          Wait(RandomRange(250, 500));
          MSI_Items[i].InvSlot := emptySlot; // Set the item's InvSlot attribute

          // Equip the item; if can't, then add withdrawn item to the exceptions array
          if (not MSI_EquipItem(SKILL_ATTACK, i)) then
            MSI_AddException(i, MSI_Items[i].InvSlot);

          Result := True;
          Break;
        end;

      if (not Result) then
      begin
        CloseBank;
        MSI_Debug('Couldn''t withdraw best tool');
      end;

    end else
      MSI_Debug('Unable to open ' + MSI_Objects[WhichBank].Name);
end;

(*
MSI_BankStandard
~~~~~~~~~~~~~~~~

.. code-block:: pascal

  function MSI_BankStandard: Boolean;

This is MSI's basic banking function that is used in the majority of scripts.
It is pointed to the script's 'BankObjects' pointer and is called in
MSI_Mainloop (Mainloop.simba).  As well as banking the items gathered during
the trip, this will bank any miscellaneous items obtained as well such as gems
or random event items.

.. note::

  | Author: The MSI Team
  | Last Updated: 28 March 2011 by NCDS

Example:

.. code-block:: pascal

  MSI_Scripts[SCRIPT_VE_TREES].BankObjects := @MSI_BankStandard;
*)
function MSI_BankStandard: Boolean;
var
  intItems: TIntegerArray;
  itemsDeposited: TBooleanArray;
  i, Total, x, y, Material: Integer;
  depAll: Boolean;
  Script: TScript;
  b: TBox;
begin
  if (not LoggedIn) then
    Exit;

  MSI_AddHeader('MSI_BankStandard');

  Script := MSI_Scripts[MSI_Players[CurrentPlayer].Scripts[CurrentScript].Name];

  with MSI_Players[CurrentPlayer] do
  begin
    if (Location = Script.PathInfo.StartLoc) then
      if (not MSI_OpenBank(Script.WhichBank, Pin)) then
      begin
        ReportInfo.FalseReason := 'Failed to open bank: '+MSI_Objects[Script.WhichBank].Name;
        Exit;
      end;

    SetLength(itemsDeposited, Length(ReportInfo.Items[CurrentScript]));

    for i := 0 to High(ReportInfo.Items[CurrentScript]) do
    begin
      intItems := ReportInfo.Items[CurrentScript][i];
      itemsDeposited[i] := MSI_Deposit(intItems, [], depAll);
      if (depAll) then
        Break;
    end;
  end;

  // Deposits other items such as gems, or random rewards
  for i := 1 to 28 do
  begin
    if (InIntArray(MSI_Players[CurrentPlayer].Scripts[CurrentScript].Exceptions, i)) then
      Continue;

    case MSI_Scripts[MSI_Players[CurrentPlayer].Scripts[CurrentScript].Name].BankType of
      Bank: b := InvBox(i);
      DBox: b := DepositItemBox(i);
    end;

    if (FindColor(x, y, SRL_OUTLINE_BLACK, b.x1, b.y1, b.x2, b.y2)) then
    begin
      MMouse(x, y, 5, 5);

      if (WaitUptext('osit', 500)) then
        if (GetAmount(x, y) > 1) then
        begin
          Mouse(x, y, 0, 0, False);
          WaitOption('osit-All', 500);
        end else
          Mouse(x, y, 0, 0, True);

      Wait(RandomRange(200, 500));
    end;
  end;

  if (not depAll) then
    for i := 0 to High(itemsDeposited) do
      if (not itemsDeposited[i]) then
      begin
        Result := False;
        MSI_Players[CurrentPlayer].ReportInfo.FalseReason := 'Failed to deposit items';
        MSI_CloseHeader('MSI_BankStandard: ' + BoolToStr(Result));
        Exit;
      end;

  Result := (InvCount = Length(MSI_Players[CurrentPlayer].Scripts[CurrentScript].Exceptions));

  if MSI_Scripts[MSI_Players[CurrentPlayer].Scripts[CurrentScript].Name].GetMaterials then
    for i := 0 to High(MSI_Players[CurrentPlayer].Scripts[CurrentScript].Materials) do
    begin
      Material := MSI_Players[CurrentPlayer].Scripts[CurrentScript].Materials[i];
      MSI_Withdraw([MSI_Materials[Material].Supplies[i][0]], [MSI_Materials[Material].Supplies[i][1]]);
      Total := Total + MSI_Materials[Material].Supplies[i][1];
      if i = High(MSI_Players[CurrentPlayer].Scripts[CurrentScript].Materials) then
        Result := WaitFunc(@InvFull, 50, 800 + Random(300));
    end;

  if (MSI_Players[CurrentPlayer].Location = LOC_POWER_SKILL) or InRange(Random(10), 1, 3) then
    CloseBank;

  MSI_CloseHeader('MSI_BankStandard: ' + BoolToStr(Result));
end;

(*
MSI_BankNPC
~~~~~~~~~~~

.. code-block:: pascal

  function MSI_BankNPC: Boolean;

This is another function that is pointed to a scripts 'BankObjects' attribute.
This function is used to exchange with NPCs such exchanging fish for notes at
Stiles on Karamja.

.. note::

  | Author: 3Garrett3
  | Last Updated: 24 March 2011 by Coh3n

Example:

.. code-block:: pascal

  MSI_Scripts[SCRIPT_KJ_NOTER].BankObjects := @MSI_BankNPC;
*)
function MSI_BankNPC: Boolean;
var
  Script: TScript;
begin
  if (not LoggedIn) then
    Exit;

  MSI_AddHeader('MSI_BankNPC');

  Script := MSI_Scripts[MSI_Players[CurrentPlayer].Scripts[CurrentScript].Name];
  with MSI_Players[CurrentPlayer] do
    if (Location = Script.PathInfo.StartLoc) then
      if (MSI_ExchangeNPC(Script.WhichBank)) then
        MSI_Debug('Exchanged with NPC: '+MSI_Objects[Script.WhichBank].Name)
      else
        ReportInfo.FalseReason := 'Failed to exchange with NPC: '+MSI_Objects[Script.WhichBank].Name;

  MSI_CloseHeader('MSI_BankNPC ' + BoolToStr(Result));
end;
