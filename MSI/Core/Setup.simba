(*
Setup
=====

The Setup file includes all the files that MSI uses throughout the include, plus
the necessary setup procedures called when the script starts.

*)

///SRL Includes
{$DEFINE SMART}

{$IFDEF DEBUG_REFLECTION}
  {$DEFINE REFLECTION_MEMORY_DEBUG}
  {$i reflection_management.simba}
{$ENDIF}

{$include_once srl/srl.scar}
{$include_once reflection/reflection.simba}

{$IFDEF SPS}
  {$include_once srl/srl/core/SPS/SPS.simba}
{$ENDIF}

{$include_once srl/srl/misc/Reports.scar}
{$include_once srl/srl/misc/PaintSmart.scar}
{$include_once srl/srl/misc/Stats.simba}

{$include_once srl/srl/skill/magic.scar}

//MSI Script
{$include_once MSI/MSI/Core/Globals.simba}
{$include_once MSI/MSI/Core/Debug.simba}
{$include_once MSI/MSI/Core/Manipulation.simba}
{$include_once MSI/MSI/Core/Track.simba}
{$include_once MSI/MSI/Core/Antiban.simba}
{$include_once MSI/MSI/Core/Animating.simba}
{$include_once MSI/MSI/Core/Items.simba}
{$include_once MSI/MSI/Core/Objects.simba}
{$include_once MSI/MSI/Core/Obstacles.simba}
{$include_once MSI/MSI/Core/Walking.simba}
{$include_once MSI/MSI/Core/Locations.simba}

{$include_once MSI/MSI/Core/Skills.simba}
{$include_once MSI/MSI/Core/Banking.simba}
{$include_once MSI/MSI/Core/Extras.simba}

//MSI Skill Files
{$include_once MSI/MSI/Skills/Woodcutting.simba}
{$include_once MSI/MSI/Skills/Mining.simba}
{$include_once MSI/MSI/Skills/Fishing.simba}
{$include_once MSI/MSI/Skills/Cooking.simba}
{$include_once MSI/MSI/Skills/Magic.simba}

{$include_once MSI/MSI/Core/Reports.simba}
{$include_once MSI/MSI/Core/Scripts.simba}

//Extras
{$include_once MSI/MSI/Extras/Example.simba}
//{$include_once MSI/MSI/Extras/WorldWalker_cstrike.simba} // It wont work without changes because of the new extras system.

//MSI Skill Loops, AI and Mainloop
{$include_once MSI/MSI/Core/MainLoop.simba}

{$include_once MSI/MSI/Form/MSI_Form.simba}

(*
MSI_Setup
~~~~~~~~~

.. code-block:: pascal

  procedure MSI_Setup();

Sets up MSI by loading all the global arrays used throughout the include.

.. note::

  | Author: Coh3n
  | Last Updated: 27 February 2010 by Coh3n

Example:

.. code-block:: pascal

  MSI_Setup();
*)
procedure MSI_Setup();
var
  Timer: integer;
begin
  MarkTime(Timer);

  MSI_LoadAllLocations;
  MSI_LoadAllScripts;
  MSI_LoadAllObjects;
  MSI_LoadAllItems;
  MSI_LoadAllObstacles;
  MSI_LoadAllAnimations;
  MSI_LoadAllSpells;
  //MSI_LoadAllExtras;
  Track_LoadNames;

  Writeln('Setting up MSI took '+IntToStr(TimeFromMark(Timer))+' ms.');
end;

(*
MSI_SetupReflection
~~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

  procedure MSI_SetupReflection;

MSI's custom reflection setup procedure.  This is used so that MSI will continue
if it finds that the reflection hooks are outdated.  Will warn the user before
continuing with color-only.

.. note::

  | Author: Coh3n
  | Last Updated: 27 February 2010 by Coh3n

Example:

.. code-block:: pascal

  MSI_SetupReflection();
*)
procedure MSI_SetupReflection();
begin
  {$IFDEF REFLECTION}
  SetupConstants;
  if (SmartGetFieldInt(0, hook_static_LoginIndex) = -1) then
  begin
    ReflectionBroken := True;
    ShowMessage('HOOKS ARE OUTDATED: '+#13+#10+
                '  This means you will be using 100% color.  Please '+#13+#10+
                '  terminate the script if you would rather wait for '+#13+#10+
                '  reflection to be updated.'
    );
  end;
  {$ELSE}
  ReflectionBroken := True; // If it's not being used, it's broken (for script's sake)
  {$ENDIF}
end;

