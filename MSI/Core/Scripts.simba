(*
Scripts
=======

The Scripts file is short and sweet. This is where all the scripts are defined.

The source for Scripts.simba can be found
`here <https://github.com/SRL/MSI/raw/master/MSI/Core/Scripts.simba>`_.

*)

(*
MSI_LoadScript
~~~~~~~~~~~~~~

.. code-block:: pascal

  function MSI_LoadScript(whichScript: Integer): Boolean;

Sets the script 'whichScript' in the MSI_Scripts array.  This function should
only be called in MSI_LoadAllScripts.

.. note::

  | Author: Coh3n
  | Last Updated: 10 October 2011 by Coh3n

Example:

.. code-block:: pascal

  MSI_LoadScript(SCRIPT_VE_MINER);
*)
function MSI_LoadScript(whichScript: Integer): Boolean;
var
  i: integer;
begin
  case whichScript of
    { WOODCUTTERS ================================ ]
    [============================================= }
    SCRIPT_POWER_CHOP:
      with MSI_Scripts[whichScript] do
      begin
        Name          := 'Powerchopper';
        Constant      := SCRIPT_POWER_CHOP;
        SkillName     := 'Woodcutting';
        SkillConst    := SKILL_WOODCUTTING;
        BankType      := Drop;
        AdjustCamera  := true;
        AutoObjects   := @MSI_ChopInvFull;
        PlayerSetup   := @MSI_SetupWoodcutting;

        Defaults.Trees := [
          TREE_DEAD, TREE_NORMAL, TREE_NORMAL_NEW, TREE_OAK, TREE_OAK_NEW,
          TREE_WILLOW, TREE_WILLOW_NEW, TREE_MAPLE, TREE_MAPLE_NEW,
          TREE_YEW, TREE_YEW_NEW, TREE_MAGIC
        ];
      end;

    SCRIPT_VE_OAKS:
      with MSI_Scripts[whichScript] do
      begin
        Name          := 'Varrock East Oaks';
        Constant      := SCRIPT_VE_OAKS;
        SkillName     := 'Woodcutting';
        SkillConst    := SKILL_WOODCUTTING;
        BankType      := Bank;
        WhichBank     := MSI_BANK_VE;
        AutoObjects   := @MSI_ChopInvFull;
        BankObjects   := @MSI_BankStandard;
        PlayerSetup   := @MSI_SetupWoodcutting;

        Defaults.Trees := [TREE_OAK_NEW];

        with PathInfo do
        begin
          Name := 'LOC_VE_BANK to LOC_VE_OAKS';
          StartLoc := LOC_VE_BANK;
          EndLoc   := LOC_VE_OAKS;

          Reflection := [
            TPointArray([Point(3253, 3420), Point(3266, 3429),
                         Point(3279, 3424)])
          ];

          SPSAreas   := [
            TStringArray(['11_7', '12_7'])
          ];
        end;
      end;

    SCRIPT_GE_OAKS:
      with MSI_Scripts[whichScript] do
      begin
        Name          := 'Grand Exchange Oaks';
        Constant      := SCRIPT_GE_OAKS;
        SkillName     := 'Woodcutting';
        SkillConst    := SKILL_WOODCUTTING;
        BankType      := Bank;
        WhichBank     := MSI_BANK_GE;
        AdjustCamera  := True;
        AutoObjects   := @MSI_ChopInvFull;
        BankObjects   := @MSI_BankStandard;
        PlayerSetup   := @MSI_SetupWoodcutting;

        Defaults.Trees := [TREE_OAK_NEW];

        with PathInfo do
        begin
          Name := 'LOC_GE_BANK to LOC_GE_OAKS';
          StartLoc := LOC_GE_BANK;
          EndLoc   := LOC_GE_OAKS;

          Reflection := [
            TPointArray([Point(3183, 3480), Point(3193, 3489),
                         Point(3194, 3475), Point(3193, 3461)])
          ];

          SPSAreas   := [
            TStringArray(['11_6'])
          ];
        end;
      end;

    SCRIPT_GE_YEWS:
      with MSI_Scripts[whichScript] do
      begin
        Name          := 'Grand Exchange Yews';
        Constant      := SCRIPT_GE_YEWS;
        SkillName     := 'Woodcutting';
        SkillConst    := SKILL_WOODCUTTING;
        BankType      := Bank;
        WhichBank     := MSI_BANK_GE;
        AutoObjects   := @MSI_ChopInvFull;
        BankObjects   := @MSI_BankStandard;
        PlayerSetup   := @MSI_SetupWoodcutting;

        Defaults.Trees := [TREE_YEW_NEW];

        with PathInfo do
        begin
          Name := 'LOC_GE_BANK to LOC_GE_YEWS';
          StartLoc := LOC_GE_BANK;
          EndLoc   := LOC_GE_YEWS;

          Reflection := [
            TPointArray([Point(3180, 3475), Point(3186, 3488),
                         Point(3197, 3500), Point(3211, 3500)])
          ];

          SPSAreas   := [
            TStringArray(['11_6'])
          ];
        end;
      end;

    SCRIPT_DB_TREES:
      with MSI_Scripts[whichScript] do
      begin
        Name          := 'Draynor Normals';
        Constant      := SCRIPT_DB_TREES;
        SkillName     := 'Woodcutting';
        SkillConst    := SKILL_WOODCUTTING;
        BankType      := Bank;
        WhichBank     := MSI_BANK_DB;
        AutoObjects   := @MSI_ChopInvFull;
        BankObjects   := @MSI_BankStandard;
        PlayerSetup   := @MSI_SetupWoodcutting;

        Defaults.Trees := [TREE_NORMAL_NEW, TREE_DEAD];

        with PathInfo do
        begin
          Name := 'LOC_DB_BANK to LOC_DB_TREES';
          StartLoc := LOC_DB_BANK;
          EndLoc   := LOC_DB_TREES;

          Reflection  := [
            TPointArray([Point(3091, 3244), Point(3084, 3248),
                         Point(3080, 3263), Point(3081, 3268)])
          ];

          SPSAreas    := [
            TStringArray(['10_8'])
          ];
        end;
      end;

    SCRIPT_DB_OAKS:
      With MSI_Scripts[WhichScript] do
      begin
        Name          := 'Draynor Oaks';
        Constant      := SCRIPT_DB_OAKS;
        SkillName     := 'Woodcutting';
        SkillConst    := SKILL_WOODCUTTING;
        BankType      := Bank;
        WhichBank     := MSI_BANK_DB;
        AdjustCamera  := True;
        AutoObjects   := @MSI_ChopInvFull;
        BankObjects   := @MSI_BankStandard;
        PlayerSetup   := @MSI_SetupWoodcutting;

        Defaults.Trees := [TREE_OAK_NEW];

        with PathInfo do
        begin
          Name := 'LOC_DB_BANK to LOC_DB_OAKS';
          StartLoc := LOC_DB_BANK;
          EndLoc   := LOC_DB_OAKS;

          Reflection := [
            TPointArray([Point(3093, 3244), Point(3101, 3244)])
          ];

          SPSAreas   := [
            TStringArray(['10_9'])
          ];
        end;
      end;

    SCRIPT_DB_WILLOWS:
      with MSI_Scripts[whichScript] do
      begin
        Name          := 'Draynor Willows';
        Constant      := SCRIPT_DB_WILLOWS;
        SkillName     := 'Woodcutting';
        SkillConst    := SKILL_WOODCUTTING;
        BankType      := Bank;
        WhichBank     := MSI_BANK_DB;
        AdjustCamera  := true;
        AutoObjects   := @MSI_ChopInvFull;
        BankObjects   := @MSI_BankStandard;
        PlayerSetup   := @MSI_SetupWoodcutting;

        Defaults.Trees := [TREE_WILLOW_NEW];

        with PathInfo do
        begin
          Name := 'LOC_DB_BANK to LOC_DB_WILLOWS';
          StartLoc := LOC_DB_BANK;
          EndLoc   := LOC_DB_WILLOWS;

          Reflection := [
            TPointArray([Point(3093, 3244), Point(3087, 3234)])
          ];

          SPSAreas   := [
            TStringArray(['10_9'])
          ];
        end;
      end;

    SCRIPT_RM_YEWS:
      with MSI_Scripts[whichScript] do
      begin
        Name          := 'Rimmington Yews';
        Constant      := SCRIPT_RM_YEWS;
        SkillName     := 'Woodcutting';
        SkillConst    := SKILL_WOODCUTTING;
        BankType      := DBox;
        WhichBank     := DBOX_PS;
        AdjustCamera  := True;
        AutoObjects   := @MSI_ChopInvFull;
        BankObjects   := @MSI_BankStandard;
        PlayerSetup   := @MSI_SetupWoodcutting;

        Defaults.Trees := [TREE_YEW_NEW];

        with PathInfo do
        begin
          Name := 'LOC_PS_BANK to LOC_RM_YEWS';
          StartLoc := LOC_PS_DBOX;
          EndLoc   := LOC_RM_YEWS;

          Reflection := [
            TPointArray([Point(3047, 3234), Point(2965, 3222),
                         Point(2934, 3230)])
          ];

          SPSAreas   := [
            TStringArray(['9_9', '8_9'])
          ];
        end;
      end;

    SCRIPT_RM_WILLOWS:
      with MSI_Scripts[whichScript] do
      begin
        Name          := 'Rimmington Willows';
        Constant      := SCRIPT_RM_WILLOWS;
        SkillName     := 'Woodcutting';
        SkillConst    := SKILL_WOODCUTTING;
        BankType      := DBox;
        WhichBank     := DBOX_PS;
        AutoObjects   := @MSI_ChopInvFull;
        BankObjects   := @MSI_BankStandard;
        PlayerSetup   := @MSI_SetupWoodcutting;

        Defaults.Trees := [TREE_WILLOW_NEW];

        with PathInfo do
        begin
          Name := 'LOC_PS_DBOX to LOC_RM_WILLOWS';
          StartLoc := LOC_PS_DBOX;
          EndLoc   := LOC_RM_WILLOWS;

          Reflection := [
            TPointArray([Point(3047, 3234), Point(3028, 3234),
                         Point(3000, 3165)])
          ];

          SPSAreas   := [
            TStringArray(['9_9'])
          ];
        end;
      end;

    SCRIPT_PS_WILLOWS:
      with MSI_Scripts[whichScript] do
      begin
        Name          := 'Port Sarim Willows';
        Constant      := SCRIPT_PS_WILLOWS;
        SkillName     := 'Woodcutting';
        SkillConst    := SKILL_WOODCUTTING;
        BankType      := DBox;
        WhichBank     := DBOX_PS;
        AdjustCamera  := true;
        AutoObjects   := @MSI_ChopInvFull;
        BankObjects   := @MSI_BankStandard;
        PlayerSetup   := @MSI_SetupWoodcutting;

        Defaults.Trees := [TREE_WILLOW_NEW];

        with PathInfo do
        begin
          Name := 'LOC_PS_DBOX to LOC_PS_WILLOWS';
          StartLoc := LOC_PS_DBOX;
          EndLoc   := LOC_PS_WILLOWS;

          Reflection := [
            TPointArray([Point(3047, 3236), Point(3060, 3253)])
          ];

          SPSAreas   := [
            TStringArray(['9_8', '9_9'])
          ];
        end;
      end;

    SCRIPT_PS_YEWS:
      with MSI_Scripts[whichScript] do
      begin
        Name          := 'Port Sarim Yews';
        Constant      := SCRIPT_PS_YEWS;
        SkillName     := 'Woodcutting';
        SkillConst    := SKILL_WOODCUTTING;
        BankType      := DBox;
        WhichBank     := DBOX_PS;
        AdjustCamera  := True;
        AutoObjects   := @MSI_ChopInvFull;
        BankObjects   := @MSI_BankStandard;
        PlayerSetup   := @MSI_SetupWoodcutting;

        Defaults.Trees := [TREE_YEW_NEW];

        with PathInfo do
        begin
          Name := 'LOC_PS_DBOX to LOC_PS_YEWS';
          StartLoc := LOC_PS_DBOX;
          EndLoc   := LOC_PS_YEWS;

          Reflection := [
            TPointArray([Point(3046, 3235), Point(3053, 3270)])
          ];

          SPSAreas   := [
            TStringArray(['9_8', '9_9'])
          ];
        end;
      end;

    SCRIPT_SV_MAGICS:
      with MSI_Scripts[whichScript] do
      begin
        Name          := 'Seers Village Magics';
        Constant      := SCRIPT_SV_MAGICS;
        SkillName     := 'Woodcutting';
        SkillConst    := SKILL_WOODCUTTING;
        BankType      := Bank;
        WhichBank     := MSI_BANK_SV;
        AdjustCamera  := true;
        AutoObjects   := @MSI_ChopInvFull;
        BankObjects   := @MSI_BankStandard;
        PlayerSetup   := @MSI_SetupWoodcutting;

        Defaults.Trees := [TREE_MAGIC];

        with PathInfo do
        begin
          Name := 'LOC_SV_BANK to LOC_SV_MAGICS';
          StartLoc := LOC_SV_BANK;
          EndLoc   := LOC_SV_MAGICS;

          Reflection := [
            TPointArray([Point(2724, 3492), Point(2710, 3392),
                         Point(2701, 3397)])
          ];

          SPSAreas   := [
            TStringArray(['6_6', '6_7'])
          ];
        end;
      end;

    SCRIPT_SV_MAPLES:
      with MSI_Scripts[whichScript] do
      begin
        Name          := 'Seers Village Maples';
        Constant      := SCRIPT_SV_MAPLES;
        SkillName     := 'Woodcutting';
        SkillConst    := SKILL_WOODCUTTING;
        BankType      := Bank;
        WhichBank     := MSI_BANK_SV;
        AutoObjects   := @MSI_ChopInvFull;
        BankObjects   := @MSI_BankStandard;
        PlayerSetup   := @MSI_SetupWoodcutting;

        Defaults.Trees := [TREE_MAPLE];

        with PathInfo do
        begin
          Name := 'LOC_SV_BANK to LOC_SV_MAPLES';
          StartLoc := LOC_SV_BANK;
          EndLoc   := LOC_SV_MAPLES;

          Reflection := [
            TPointArray([Point(2726, 3492), Point(2724, 3502)])
          ];

          SPSAreas   := [
            TStringArray(['6_6'])
          ];
        end;
      end;

    SCRIPT_SV_YEWS:
      with MSI_Scripts[whichScript] do
      begin
        Name          := 'Seers Village Yews';
        Constant      := SCRIPT_SV_YEWS;
        SkillName     := 'Woodcutting';
        SkillConst    := SKILL_WOODCUTTING;
        BankType      := Bank;
        WhichBank     := MSI_BANK_SV;
        AdjustCamera  := true;
        AutoObjects   := @MSI_ChopInvFull;
        BankObjects   := @MSI_BankStandard;
        PlayerSetup   := @MSI_SetupWoodcutting;

        Defaults.Trees := [TREE_YEW];

        with PathInfo do
        begin
          Name := 'LOC_SV_BANK to LOC_SV_YEWS';
          StartLoc := LOC_SV_BANK;
          EndLoc   := LOC_SV_YEWS;

          Reflection := [
            TPointArray([Point(2725, 3493), Point(2714, 3464)])
          ];

          SPSAreas   := [
            TStringArray(['6_6'])
          ];
        end;
      end;

    SCRIPT_SV_OAKS:
      with MSI_Scripts[whichScript] do
      begin
        Name          := 'Seers Village Oaks';
        Constant      := SCRIPT_SV_OAKS;
        SkillName     := 'Woodcutting';
        SkillConst    := SKILL_WOODCUTTING;
        BankType      := Bank;
        WhichBank     := MSI_BANK_SV;
        AdjustCamera  := true;
        AutoObjects   := @MSI_ChopInvFull;
        BankObjects   := @MSI_BankStandard;
        PlayerSetup   := @MSI_SetupWoodcutting;

        Defaults.Trees := [TREE_OAK];

        with PathInfo do
        begin
          Name := 'LOC_SV_BANK to LOC_SV_OAKS';
          StartLoc := LOC_SV_BANK;
          EndLoc   := LOC_SV_OAKS;

          Reflection := [
            TPointArray([Point(2724, 3493), Point(2719, 3480)])
          ];

          SPSAreas   := [
            TStringArray(['6_6'])
          ];
        end;
      end;

    SCRIPT_SV_TREES:
      with MSI_Scripts[whichScript] do
      begin
        Name          := 'Seers Village Trees';
        Constant      := SCRIPT_SV_TREES;
        SkillName     := 'Woodcutting';
        SkillConst    := SKILL_WOODCUTTING;
        BankType      := Bank;
        WhichBank     := MSI_BANK_SV;
        AdjustCamera  := true;
        AutoObjects   := @MSI_ChopInvFull;
        BankObjects   := @MSI_BankStandard;
        PlayerSetup   := @MSI_SetupWoodcutting;

        Defaults.Trees := [TREE_NORMAL];

        with PathInfo do
        begin
          Name := 'LOC_SV_BANK to LOC_SV_TREES';
          StartLoc := LOC_SV_BANK;
          EndLoc   := LOC_SV_TREES;

          Reflection := [
            TPointArray([Point(2724, 3492), Point(2721, 3447)])
          ];

          SPSAreas   := [
            TStringArray(['6_6'])
          ];
        end;
      end;

    SCRIPT_EV_YEWS:
      with MSI_Scripts[whichScript] do
      begin
        Name          := 'Edgeville yews';
        Constant      := SCRIPT_EV_YEWS;
        SkillName     := 'Woodcutting';
        SkillConst    := SKILL_WOODCUTTING;
        BankType      := Bank;
        WhichBank     := MSI_BANK_EV;
        AdjustCamera  := True;
        AutoObjects   := @MSI_ChopInvFull;
        BankObjects   := @MSI_BankStandard;
        PlayerSetup   := @MSI_SetupWoodcutting;

        Defaults.Trees := [TREE_YEW_NEW];

        with PathInfo do
        begin
          Name := 'LOC_EV_BANK to LOC_EV_YEWS';
          StartLoc := LOC_EV_BANK;
          EndLoc   := LOC_EV_YEWS;

          Reflection := [
            TPointArray([Point(3093, 3492), Point(3087, 3472)])
          ];

          SPSAreas   := [
            TStringArray(['10_6'])
          ];
        end;
      end;

    SCRIPT_DB_YEWS:
      with MSI_Scripts[whichScript] do
      begin
        Name          := 'Draynor Village Yews';
        Constant      := SCRIPT_DB_YEWS;
        SkillName     := 'Woodcutting';
        SkillConst    := SKILL_WOODCUTTING;
        BankType      := Bank;
        WhichBank     := MSI_BANK_DB;
        AdjustCamera  := True;
        AutoObjects   := @MSI_ChopInvFull;
        BankObjects   := @MSI_BankStandard;
        PlayerSetup   := @MSI_SetupWoodcutting;

        Defaults.Trees := [TREE_YEW_NEW];

        with PathInfo do
        begin
          Name := 'LOC_DB_BANK to LOC_DB_YEWS';
          StartLoc := LOC_DB_BANK;
          EndLoc   := LOC_DB_YEWS;

          Reflection := [
            TPointArray([Point(3093, 3244), Point(3151, 3229)])
          ];

          SPSAreas   := [
            TStringArray(['10_9', '11_9'])
          ];
        end;
      end;

    { MINERS ===================================== ]
    [============================================= }
    SCRIPT_POWER_MINER:
      with MSI_Scripts[whichScript] do
      begin
        Name        := 'Powerminer';
        Constant    := SCRIPT_POWER_MINER;
        SkillName   := 'Mining';
        SkillConst  := SKILL_MINING;
        BankType    := Drop;
        AdjustCamera := true;
        AutoObjects := @MSI_MineInvFull;
        PlayerSetup := @MSI_SetupMining;

        Defaults.Rocks := [
          ROCK_CLAY, ROCK_COPPER, ROCK_TIN, ROCK_IRON, ROCK_SILVER,
          ROCK_COAL, ROCK_GOLD, ROCK_MITHRIL, ROCK_ADAMANTITE
        ];
      end;

    SCRIPT_VE_MINER:
      with MSI_Scripts[whichScript] do
      begin
        Name          := 'Varrock East Miner';
        Constant      := SCRIPT_VE_MINER;
        SkillName     := 'Mining';
        SkillConst    := SKILL_MINING;
        BankType      := Bank;
        WhichBank     := MSI_BANK_VE;
        AutoObjects   := @MSI_MineInvFull;
        BankObjects   := @MSI_BankStandard;
        PlayerSetup   := @MSI_SetupMining;

        Defaults.Rocks := [ROCK_TIN, ROCK_COPPER, ROCK_IRON];

        with PathInfo do
        begin
          Name := 'LOC_VE_BANK to LOC_VE_MINE';
          StartLoc := LOC_VE_BANK;
          EndLoc   := LOC_VE_MINE;

          Reflection := [
            TPointArray([Point(3254, 3421), Point(3292, 3429),
                         Point(3293, 3377), Point(3287, 3368)])
          ];

          SPSAreas   := [
            TStringArray(['11_7', '12_7'])
          ];
        end;
      end;

    SCRIPT_LSW_MINER:
      with MSI_Scripts[whichScript] do
      begin
        Name          := 'Lumby Swamp West Miner';
        Constant      := SCRIPT_LSW_MINER;
        SkillName     := 'Mining';
        SkillConst    := SKILL_MINING;
        BankType      := Bank;
        WhichBank     := MSI_BANK_DB;
        AdjustCamera  := True;
        AutoObjects   := @MSI_MineInvFull;
        BankObjects   := @MSI_BankStandard;
        PlayerSetup   := @MSI_SetupMining;

        Defaults.Rocks := [ROCK_COAL, ROCK_MITHRIL, ROCK_ADAMANTITE];

        with PathInfo do
        begin
          Name := 'LOC_DB_BANK to LOC_LSW_MINE';
          StartLoc := LOC_DB_BANK;
          EndLoc   := LOC_LSW_MINE;

          Reflection := [
            TPointArray([Point(3093, 3242), Point(3138, 3205),
                         Point(3147, 3144)])
          ];

          SPSAreas   := [
            TStringArray(['10_9'])
          ];
        end;
      end;

    SCRIPT_LSE_MINER:
      with MSI_Scripts[whichScript] do
      begin
        Name          := 'Lumby Swamp East Miner';
        Constant      := SCRIPT_LSE_MINER;
        SkillName     := 'Mining';
        SkillConst    := SKILL_MINING;
        BankType      := Bank;
        WhichBank     := MSI_BANK_AK;
        AutoObjects   := @MSI_MineInvFull;
        BankObjects   := @MSI_BankStandard;
        PlayerSetup   := @MSI_SetupMining;

        Defaults.Rocks := [ROCK_TIN, ROCK_COPPER];

        with PathInfo do
        begin
          Name := 'LOC_AK_BANK to LOC_LSE_MINE';
          StartLoc := LOC_AK_BANK;
          EndLoc   := LOC_LSE_MINE;

          Reflection := [
            TPointArray([Point(3269, 3165), Point(3241, 3176),
                         Point(3229, 3147)])
          ];

          SPSAreas   := [
            TStringArray(['11_9', '12_9'])
          ];
        end;
      end;

    SCRIPT_VW_MINER:
      with MSI_Scripts[whichScript] do
      begin
        Name          := 'Varrock West Miner';
        Constant      := SCRIPT_VW_MINER;
        SkillName     := 'Mining';
        SkillConst    := SKILL_MINING;
        BankType      := Bank;
        WhichBank     := MSI_BANK_VW;
        AutoObjects   := @MSI_MineInvFull;
        BankObjects   := @MSI_BankStandard;
        PlayerSetup   := @MSI_SetupMining;

        Defaults.Rocks := [ROCK_TIN, ROCK_CLAY, ROCK_IRON, ROCK_SILVER];

        with PathInfo do
        begin
        Name := 'LOC_VW_BANK to LOC_VW_MINE';
          StartLoc := LOC_VW_BANK;
          EndLoc   := LOC_VW_MINE;

          Reflection := [
            TPointArray([Point(3187, 3437), Point(3172, 3429),
                         Point(3172, 3394), Point(3179, 3369)])
          ];

          SPSAreas   := [
            TStringArray(['11_7'])
          ];
        end;
      end;

    SCRIPT_FW_MINER:
      with MSI_Scripts[whichScript] do
      begin
        Name          := 'Falador West Miner';
        Constant      := SCRIPT_FW_MINER;
        SkillName     := 'Mining';
        SkillConst    := SKILL_MINING;
        BankType      := Bank;
        WhichBank     := MSI_BANK_FW;
        AutoObjects   := @MSI_MineInvFull;
        BankObjects   := @MSI_BankStandard;
        PlayerSetup   := @MSI_SetupMining;

        Defaults.Rocks := [ROCK_TIN, ROCK_COPPER, ROCK_IRON, ROCK_COAL];

        with PathInfo do
        begin
        Name := 'LOC_FW_BANK to LOC_FW_MINE';
          StartLoc := LOC_FW_BANK;
          EndLoc   := LOC_FW_MINE;

          Reflection := [
            TPointArray([Point(2945, 3368), Point(2938, 3355)]),
            TPointArray([Point(2920, 3355), Point(2909, 3357)])
          ];

          SPSAreas   := [
            TStringArray(['8_7']),
            TStringArray(['8_7'])
          ];

          Obstacles[OBS_LOC_TO] := [OBS_WALL_FW];
          Obstacles[OBS_LOC_FROM] := [OBS_WALL_FW];
        end;
      end;

    SCRIPT_BBV_MINER:
      with MSI_Scripts[whichScript] do
      begin
        Name          := 'Barbarian Village Miner';
        Constant      := SCRIPT_BBV_MINER;
        SkillName     := 'Mining';
        SkillConst    := SKILL_MINING;
        BankType      := Bank;
        WhichBank     := MSI_BANK_EV;
        AutoObjects   := @MSI_MineInvFull;
        BankObjects   := @MSI_BankStandard;
        PlayerSetup   := @MSI_SetupMining;

        Defaults.Rocks := [ROCK_TIN, ROCK_COAL];

        with PathInfo do
        begin
          Name := 'LOC_EV_BANK to LOC_BBV_MINE';
          StartLoc := LOC_EV_BANK;
          EndLoc   := LOC_BBV_MINE;

          Reflection := [
            TPointArray([Point(3093, 3493), Point(3101, 3478),
                         Point(3081, 3420)])
          ];

          SPSAreas   := [
            TStringArray(['10_6', '10_7'])
          ];
        end;
      end;

    SCRIPT_RM_MINER:
      with MSI_Scripts[whichScript] do
      begin
        Name          := 'Rimmington Miner';
        Constant      := SCRIPT_RM_MINER;
        SkillName     := 'Mining';
        SkillConst    := SKILL_MINING;
        BankType      := DBox;
        WhichBank     := DBOX_PS;
        AutoObjects   := @MSI_MineInvFull;
        BankObjects   := @MSI_BankStandard;
        PlayerSetup   := @MSI_SetupMining;

        Defaults.Rocks := [ROCK_CLAY, ROCK_TIN, ROCK_COPPER, ROCK_IRON, ROCK_GOLD];

        with PathInfo do
        begin
          Name := 'LOC_PS_DBOX to LOC_RM_MINE';
          StartLoc := LOC_PS_DBOX;
          EndLoc   := LOC_RM_MINE;

          Reflection := [
            TPointArray([Point(3047, 3234), Point(2980, 3236)])
          ];

          SPSAreas   := [
            TStringArray(['9_9'])
          ];
        end;
      end;

    SCRIPT_DB_CLAY:
      with MSI_Scripts[whichScript] do
      begin
        Name          := 'Draynor Clay';
        Constant      := SCRIPT_DB_CLAY;
        SkillName     := 'Mining';
        SkillConst    := SKILL_MINING;
        BankType      := Bank;
        WhichBank     := MSI_BANK_DB;
        AutoObjects   := @MSI_MineInvFull;
        BankObjects   := @MSI_BankStandard;
        PlayerSetup   := @MSI_SetupMining;

        Defaults.Rocks := [ROCK_CLAY];

        with PathInfo do
        begin
          Name := 'LOC_DB_BANK to LOC_DB_CLAY';
          StartLoc := LOC_DB_BANK;
          EndLoc   := LOC_DB_CLAY;

          Reflection := [
            TPointArray([Point(3093, 3244), Point(3104, 3249),
                         Point(3110, 3292), Point(3142, 3317)])
          ];

          SPSAreas   := [
            TStringArray(['10_8', '10_9'])
          ];
        end;
      end;

    SCRIPT_AK_MINER:
      with MSI_Scripts[whichScript] do
      begin
        Name        := 'Al Kharid Miner';
        Constant    := SCRIPT_AK_MINER;
        SkillName   := 'Mining';
        SkillConst  := SKILL_MINING;
        BankType    := Bank;
        WhichBank   := MSI_BANK_AK;
        AutoObjects := @MSI_MineInvFull;
        BankObjects := @MSI_BankStandard;
        PlayerSetup := @MSI_SetupMining;

        Defaults.Rocks := [
          ROCK_SILVER, ROCK_IRON, ROCK_COAL, ROCK_MITHRIL, ROCK_GOLD,
          ROCK_COPPER, ROCK_TIN, ROCK_ADAMANTITE
        ];

        with PathInfo do
        begin
          StartLoc := LOC_AK_BANK;
          EndLoc   := LOC_AK_MINE;

          Reflection := [
            TPointArray([Point(3270, 3165), Point(3300, 3301)])
          ];

          SPSAreas   := [
            TStringArray(['12_8', '12_9'])
          ];
        end;
      end;

    SCRIPT_GUILD_MINER:
      with MSI_Scripts[whichScript] do
      begin
        Name        := 'Mining Guild Miner';
        Constant    := SCRIPT_GUILD_MINER;
        SkillName   := 'Mining';
        SkillConst  := SKILL_MINING;
        BankType    := Bank;
        WhichBank   := MSI_BANK_FE;
        AutoObjects := @MSI_MineInvFull;
        BankObjects := @MSI_BankStandard;
        PlayerSetup := @MSI_SetupMining;

        Defaults.Rocks := [ROCK_COAL, ROCK_MITHRIL];

        with PathInfo do
        begin
          Name := 'LOC_FE_BANK to LOC_GUILD_MINE';
          StartLoc := LOC_FE_BANK;
          EndLoc := LOC_GUILD_MINE;

          Reflection := [
            // Bank -> Ladder Down
            TPointArray([Point(3012, 3355), Point(3023, 3352),
                         Point(3030, 3340), Point(3021, 3339)]),

            // Ladder Up -> In Mine
            TPointArray([Point(3021, 9739), Point(3033, 9738),
                         Point(3042, 9737)])
          ];

          Obstacles[OBS_LOC_TO] := [OBS_LADDER_MG_DOWN];
          Obstacles[OBS_LOC_FROM] := [OBS_LADDER_MG_UP];
        end;
      end;

    SCRIPT_CG_MINER:
      with MSI_Scripts[whichScript] do
      begin
        Name        := 'Crafting Guild Miner';
        Constant    := SCRIPT_CG_MINER;
        SkillName   := 'Mining';
        SkillConst  := SKILL_MINING;
        BankType    := Bank;
        WhichBank   := MSI_BANK_FE;
        AutoObjects := @MSI_MineInvFull;
        BankObjects := @MSI_BankStandard;
        PlayerSetup := @MSI_SetupMining;

        Defaults.Rocks := [ROCK_GOLD, ROCK_SILVER, ROCK_CLAY];

        with PathInfo do
        begin
          Name := 'LOC_FE_BANK to LOC_CG_MINE';
          StartLoc := LOC_FE_BANK;
          EndLoc   := LOC_CG_MINE;

          Reflection := [
            // bank to outside guild
            TPointArray([Point(3013, 3355), Point(3006, 3318),
                         Point(2975, 3284), Point(2933, 3288)]),

            // guild door to mine
            TPointArray([Point(2933, 3286), Point(2940, 3281)])
          ];

          SPSAreas   := [
            TStringArray(['8_8', '9_7', '9_8']),
            TStringArray(['8_8'])
          ];

          Obstacles[OBS_LOC_TO] := [OBS_DOOR_CG_IN];
          Obstacles[OBS_LOC_FROM] := [OBS_DOOR_CG_OUT];
        end;
      end;

    { FISHERS ==================================== ]
    [============================================= }
    SCRIPT_POWER_FISHER:
      with MSI_Scripts[whichScript] do
      begin
        Name          := 'Powerfisher';
        Constant      := SCRIPT_POWER_FISHER;
        SkillName     := 'Fishing';
        SkillConst    := SKILL_FISHING;
        BankType      := Drop;
        AutoObjects   := @MSI_FishInvFull;
        PlayerSetup   := @MSI_SetupFishing;

        Defaults.FishSpots := [
          FISHSPOT_NET, FISHSPOT_BAIT, FISHSPOT_LURE, FISHSPOT_CAGE,
          FISHSPOT_HARPOON
        ];
      end;

    SCRIPT_DB_FISHER:
      with MSI_Scripts[whichScript] do
      begin
        Name          := 'Draynor Village Fisher';
        Constant      := SCRIPT_DB_FISHER;
        SkillName     := 'Fishing';
        SkillConst    := SKILL_FISHING;
        BankType      := Bank;
        WhichBank     := MSI_BANK_DB;
        AutoObjects   := @MSI_FishInvFull;
        BankObjects   := @MSI_BankStandard;
        PlayerSetup   := @MSI_SetupFishing;

        Defaults.FishSpots := [FISHSPOT_NET, FISHSPOT_BAIT];

        with PathInfo do
        begin
          Name := 'LOC_DB_BANK to LOC_DB_FISH';
          StartLoc := LOC_DB_BANK;
          EndLoc   := LOC_DB_FISH;

          Reflection := [
            TPointArray([Point(3093, 3244), Point(3087, 3228)])
          ];

          SPSAreas   := [
            TStringArray(['10_9'])
          ];
        end;
      end;

    SCRIPT_BBV_FISHER:
      with MSI_Scripts[whichScript] do
      begin
        Name          := 'Barbarian Village Fisher';
        Constant      := SCRIPT_BBV_FISHER;
        SkillName     := 'Fishing';
        SkillConst    := SKILL_FISHING;
        BankType      := Bank;
        WhichBank     := MSI_BANK_EV;
        AutoObjects   := @MSI_FishInvFull;
        BankObjects   := @MSI_BankStandard;
        PlayerSetup   := @MSI_SetupFishing;

        Defaults.FishSpots := [FISHSPOT_LURE, FISHSPOT_BAIT];

        with PathInfo do
        begin
          Name := 'LOC_EV_BANK to LOC_BBV_FISH';
          StartLoc := LOC_EV_BANK;
          EndLoc   := LOC_BBV_FISH;

          Reflection := [
            TPointArray([Point(3094, 3492), Point(3101, 3479),
                         Point(3098, 3452), Point(3109, 3432)])
          ];

          SPSAreas   := [
            TStringArray(['10_6', '10_7'])
          ];
        end;
      end;

    SCRIPT_CB_FISHER:
      with MSI_Scripts[whichScript] do
      begin
        Name          := 'Catherby Fisher';
        Constant      := SCRIPT_CB_FISHER;
        SkillName     := 'Fishing';
        SkillConst    := SKILL_FISHING;
        BankType      := Bank;
        WhichBank     := MSI_BANK_CB;
        AutoObjects   := @MSI_FishInvFull;
        BankObjects   := @MSI_BankStandard;
        PlayerSetup   := @MSI_SetupFishing;

        Defaults.FishSpots := [
          FISHSPOT_NET, FISHSPOT_BAIT, FISHSPOT_CAGE, FISHSPOT_HARPOON,
          FISHSPOT_HARPOON_SHARK
         ];

        with PathInfo do
        begin
          Name := 'LOC_CB_BANK to LOC_CB_FISH';
          StartLoc := LOC_CB_BANK;
          EndLoc   := LOC_CB_FISH;

          Reflection := [
            TPointArray([Point(2808, 3442), Point(2835, 3434)])
          ];

          SPSAreas   := [
            TStringArray(['7_7'])
          ];
        end;
      end;

    SCRIPT_KJ_NOTER:
      with MSI_Scripts[whichScript] do
      begin
        Name          := 'Karamja Stiles Noter';
        Constant      := SCRIPT_KJ_NOTER;
        SkillName     := 'Fishing';
        SkillConst    := SKILL_FISHING;
        BankType      := NPC;
        WhichBank     := NPC_STILES;
        AutoObjects   := @MSI_FishInvFull;
        BankObjects   := @MSI_BankNPC;
        PlayerSetup   := @MSI_SetupFishing;

        Defaults.FishSpots := [
          FISHSPOT_NET, FISHSPOT_BAIT, FISHSPOT_CAGE, FISHSPOT_HARPOON
        ];

        with PathInfo do
        begin
          Name := 'LOC_KJ_STILES to LOC_KJ_FISH';
          StartLoc := LOC_KJ_STILES;
          EndLoc   := LOC_KJ_FISH;

          Reflection := [
            TPointArray([Point(2851, 3141), Point(2924, 3175)])
          ];

          SPSAreas   := [
            TStringArray(['8_9', '7_10'])
          ];
        end;
      end;

    { COOKERS ==================================== ]
    [============================================= }
    SCRIPT_AK_COOKER:
      with MSI_Scripts[whichScript] do
      begin
        Name          := 'Al-Kharid Cooker';
        Constant      := SCRIPT_AK_COOKER;
        SkillName     := 'Cooking';
        SkillConst    := SKILL_COOKING;
        BankType      := Bank;
        GetMaterials  := True;
        WhichBank     := MSI_BANK_AK;
        AutoObjects   := @MSI_CookFullInv;
        BankObjects   := @MSI_BankWithdraw;
        PlayerSetup   := @MSI_SetupCooking;

        with Defaults do
        begin
          CookingSpot := [COOKSPOT_AK_RANGE];

          Materials := [
            MATERIAL_CRAYFISH, MATERIAL_SHRIMP, MATERIAL_SARDINE,
            MATERIAL_ANCHOVIE, MATERIAL_HERRING, MATERIAL_TROUT,
            MATERIAL_PIKE, MATERIAL_SALMON, MATERIAL_TUNA,
            MATERIAL_LOBSTER, MATERIAL_SWORDFISH, MATERIAL_MONKFISH,
            MATERIAL_SHARK
          ];
        end;

        with PathInfo do
        begin
          Name := 'LOC_AK_BANK to LOC_AK_RANGE';
          StartLoc := LOC_AK_BANK;
          EndLoc   := LOC_AK_RANGE;

          Reflection := [
            TPointArray([Point(3270, 3165), Point(3273, 3179)])
          ];

          SPSAreas   := [
            TStringArray(['12_9'])
          ];
        end;
      end;

    { Magers ===================================== ]
    [============================================= }
    SCRIPT_ALCHER:
      with MSI_Scripts[whichScript] do
      begin
        Name          := 'Alcher';
        Constant      := SCRIPT_ALCHER;
        SkillName     := 'Magic';
        SkillConst    := SKILL_MAGIC;
        BankType      := NoBank;
        AutoObjects   := @MSI_DoMagic;
        PlayerSetup   := @MSI_SetupMagic;

        with Defaults do
        begin
          Spells := [SPELL_ALCH_HIGH, SPELL_ALCH_LOW];
          StaffType := LeastCasts;
        end;
      end;

    SCRIPT_TELEPORTER:
      with MSI_Scripts[whichScript] do
      begin
        Name          := 'Teleporter';
        Constant      := SCRIPT_TELEPORTER;
        SkillName     := 'Magic';
        SkillConst    := SKILL_MAGIC;
        BankType      := NoBank;
        AutoObjects   := @MSI_DoMagic;
        PlayerSetup   := @MSI_SetupMagic;

        with Defaults do
        begin
          Spells := [SPELL_TELE_HOME, SPELL_TELE_VARROCK, SPELL_TELE_LUMBRIDGE,
                    SPELL_TELE_FALADOR, SPELL_TELE_HOUSE, SPELL_TELE_CAMELOT];
          StaffType := LeastCasts;
        end;
      end;

    { Money Makers =============================== ]
    [============================================= }
    SCRIPT_VE_SOFTENER:
      with MSI_Scripts[whichScript] do
      begin
        Name          := 'Varrock East Clay Softener';
        Constant      := SCRIPT_VE_SOFTENER;
        SkillName     := 'N/A';
        SkillConst    := SKILL_NONE;
        BankType      := Bank;
        WhichBank     := MSI_BANK_VE;
        GetMaterials  := True;
        AutoObjects   := @MSI_SoftenClay;
        BankObjects   := @MSI_BankWithdraw;
        PlayerSetup   := @MSI_SetupSoftener;

        with Defaults do
        begin
          Objects   := [FOUNTAIN_VE];
          Materials := [MATERIAL_CLAY];
        end;

        with PathInfo do
        begin
          Name := 'LOC_VE_BANK to LOC_VE_FOUNTAIN';
          StartLoc := LOC_VE_BANK;
          EndLoc   := LOC_VE_FOUNTAIN;

          Reflection := [
            TPointArray([Point(3254, 3421), Point(3241, 3434)])
          ];

          SPSAreas   := [
            TStringArray(['11_7'])
          ];
        end;
      end;

    SCRIPT_GE_SOFTENER:
      with MSI_Scripts[whichScript] do
      begin
        Name          := 'Grand Exchange Clay Softener';
        Constant      := SCRIPT_GE_SOFTENER;
        SkillName     := 'N/A';
        SkillConst    := SKILL_NONE;
        BankType      := Bank;
        WhichBank     := MSI_BANK_GE;
        GetMaterials  := True;
        AutoObjects   := @MSI_SoftenClay;
        BankObjects   := @MSI_BankWithdraw;
        PlayerSetup   := @MSI_SetupSoftener;

        with Defaults do
        begin
          Objects   := [FOUNTAIN_GE];
          Materials := [MATERIAL_CLAY];
        end;

        with PathInfo do
        begin
          Name := 'LOC_GE_BANK to LOC_GE_FOUNTAIN';
          StartLoc := LOC_GE_BANK;
          EndLoc   := LOC_GE_FOUNTAIN;

          Reflection := [
            TPointArray([point(3175, 3475), Point(3161, 3488)])
          ];

          SPSAreas   := [
            TStringArray(['11_6'])
          ];
        end;
      end;

    SCRIPT_EV_SOFTENER:
      with MSI_Scripts[whichScript] do
      begin
        Name          := 'Edgeville Clay Softener';
        Constant      := SCRIPT_EV_SOFTENER;
        SkillName     := 'N/A';
        SkillConst    := SKILL_NONE;
        BankType      := Bank;
        WhichBank     := MSI_BANK_EV;
        GetMaterials  := True;
        AutoObjects   := @MSI_SoftenClay;
        BankObjects   := @MSI_BankWithdraw;
        PlayerSetup   := @MSI_SetupSoftener;

        with Defaults do
        begin
          Objects   := [WELL_EV];
          Materials := [MATERIAL_CLAY];
        end;

        with PathInfo do
        begin
          Name := 'LOC_EV_BANK to LOC_EV_WELL';
          StartLoc := LOC_EV_BANK;
          EndLoc   := LOC_EV_WELL;

          Reflection := [
            TPointArray([Point(3093, 3493), Point(3085, 3500)])
          ];

          SPSAreas   := [
            TStringArray(['10_6'])
          ];
        end;
      end;

    SCRIPT_FW_SOFTENER:
      with MSI_Scripts[whichScript] do
      begin
        Name          := 'Falador West Softener';
        Constant      := SCRIPT_FW_SOFTENER;
        SkillName     := 'N/A';
        SkillConst    := SKILL_NONE;
        BankType      := Bank;
        WhichBank     := MSI_BANK_FW;
        GetMaterials  := True;
        AutoObjects   := @MSI_SoftenClay;
        BankObjects   := @MSI_BankWithdraw;
        PlayerSetup   := @MSI_SetupSoftener;

        with Defaults do
        begin
          Objects   := [PUMP_FW];
          Materials := [MATERIAL_CLAY];
        end;

        with PathInfo do
        begin
          Name := 'LOC_FW_BANK to LOC_FW_PUMP';
          StartLoc := LOC_FW_BANK;
          EndLoc   := LOC_FW_PUMP;

          Reflection := [
            TPointArray([Point(2945, 3367), Point(2949, 3382)])
          ];

          SPSAreas   := [
            TStringArray(['8_7'])
          ];
        end;
      end;

    SCRIPT_VE_FILLER:
      with MSI_Scripts[whichScript] do
      begin
        Name          := 'Varrock East Container Filler';
        Constant      := SCRIPT_VE_FILLER;
        SkillName     := 'N/A';
        SkillConst    := SKILL_NONE;
        BankType      := Bank;
        WhichBank     := MSI_BANK_VE;
        GetMaterials  := True;
        AutoObjects   := @MSI_FillItems;
        BankObjects   := @MSI_BankWithdraw;
        PlayerSetup   := @MSI_SetupSoftener;

        with Defaults do
        begin
          Objects   := [FOUNTAIN_VE];
          Materials := [MATERIAL_VIAL, MATERIAL_JUG, MATERIAL_BOWL,
                        MATERIAL_BUCKET];
        end;

        with PathInfo do
        begin
        Name := 'LOC_VE_BANK to LOC_VE_FOUNTAIN';
          StartLoc := LOC_VE_BANK;
          EndLoc   := LOC_VE_FOUNTAIN;

          Reflection := [
            TPointArray([Point(3254, 3421), Point(3241, 3434)])
          ];

          SPSAreas   := [
            TStringArray(['11_7'])
          ];
        end;
      end;

    SCRIPT_GE_FILLER:
      with MSI_Scripts[whichScript] do
      begin
        Name          := 'Grand Exchange Container Filler';
        Constant      := SCRIPT_GE_Filler;
        SkillName     := 'N/A';
        SkillConst    := SKILL_NONE;
        BankType      := Bank;
        WhichBank     := MSI_BANK_GE;
        GetMaterials  := True;
        AutoObjects   := @MSI_FillItems;
        BankObjects   := @MSI_BankWithdraw;
        PlayerSetup   := @MSI_SetupSoftener;

        with Defaults do
        begin
          Objects   := [FOUNTAIN_GE];
          Materials := [MATERIAL_VIAL, MATERIAL_JUG, MATERIAL_BOWL,
                        MATERIAL_BUCKET];
        end;

        with PathInfo do
        begin
          Name := 'LOC_GE_BANK to LOC_GE_FOUNTAIN';
          StartLoc := LOC_GE_BANK;
          EndLoc   := LOC_GE_FOUNTAIN;

          Reflection := [
            TPointArray([point(3175, 3475), Point(3161, 3488)])
          ];

          SPSAreas   := [
            TStringArray(['11_6'])
          ];
        end;
      end;

    SCRIPT_FW_FILLER:
      with MSI_Scripts[whichScript] do
      begin
        Name          := 'Falador West Container Filler';
        Constant      := SCRIPT_FW_FILLER;
        SkillName     := 'N/A';
        SkillConst    := SKILL_NONE;
        BankType      := Bank;
        WhichBank     := MSI_BANK_FW;
        GetMaterials  := True;
        AutoObjects   := @MSI_FillItems;
        BankObjects   := @MSI_BankWithdraw;
        PlayerSetup   := @MSI_SetupSoftener;

        with Defaults do
        begin
          Objects   := [PUMP_FW];
          Materials := [MATERIAL_VIAL, MATERIAL_JUG, MATERIAL_BOWL,
                        MATERIAL_BUCKET];
        end;

        with PathInfo do
        begin
          Name := 'LOC_FW_BANK to LOC_FW_PUMP';
          StartLoc := LOC_FW_BANK;
          EndLoc   := LOC_FW_PUMP;

          Reflection := [
            TPointArray([Point(2945, 3367), Point(2949, 3382)])
          ];

          SPSAreas   := [
            TStringArray(['8_7'])
          ];
        end;
      end;

    SCRIPT_RC_AIR:
      with MSI_Scripts[whichScript] do
      begin
        name         := 'Air Runecrafter';
        constant     := whichScript;
        skillName    := 'Runecrafting';
        skillConst   := SKILL_RUNECRAFTING;
        bankType     := Bank;
        whichBank    := MSI_BANK_VW;
        getMaterials := True;
        autoObjects  := @MSI_CraftRunes;
        bankObjects  := @MSI_BankWithdraw;
        playerSetup  := @MSI_SetupRunecrafting;

        defaults.objects   := [ALTER_RUNECRAFTING];
        defaults.materials := [MATERIAL_ESSENCE_RUNE];
        defaults.tiara     := TIARA_AIR;

        with pathInfo do
        begin
          name     := 'LOC_VW_BANK to LOC_ALTER_AIR';
          startLoc := LOC_VW_BANK;
          endLoc   := LOC_ALTER_AIR;

          reflection := [
            TPointArray([point(3185, 3436), point(3128, 3404)]),
            TPointArray([])
          ];
        {
          spsAreas   := [
            TStringArray([])
          ];
        }
          obstacles[OBS_LOC_TO] := [OBS_RUINS_AIR];
          obstacles[OBS_LOC_FROM] := [OBS_PORTAL_AIR];
        end;
      end;

    SCRIPT_RC_EARTH:
      with MSI_Scripts[whichScript] do
      begin
        name         := 'Earth Runecrafter';
        constant     := whichScript;
        skillName    := 'Runecrafting';
        skillConst   := SKILL_RUNECRAFTING;
        bankType     := Bank;
        whichBank    := MSI_BANK_VE;
        getMaterials := True;
        autoObjects  := @MSI_CraftRunes;
        bankObjects  := @MSI_BankWithdraw;
        playerSetup  := @MSI_SetupRunecrafting;

        defaults.objects   := [ALTER_RUNECRAFTING];
        defaults.materials := [MATERIAL_ESSENCE_RUNE];
        defaults.tiara     := TIARA_EARTH;

        with pathInfo do
        begin
          name     := 'LOC_VW_BANK to LOC_ALTER_EARTH';
          startLoc := LOC_VE_BANK;
          endLoc   := LOC_ALTER_EARTH;

          reflection := [
            TPointArray([point(3254, 3421), point(3283, 3428),
                         point(3306, 3476)]),

            TPointArray([point(2657, 4830), point(2657, 4839)])
          ];
        {
          spsAreas   := [
            TStringArray([])
          ];
        }
          obstacles[OBS_LOC_TO] := [OBS_RUINS_EARTH];
          obstacles[OBS_LOC_FROM] := [OBS_PORTAL_EARTH];
        end;
      end;

    SCRIPT_RC_FIRE:
      with MSI_Scripts[whichScript] do
      begin
        name         := 'Fire Runecrafter';
        constant     := whichScript;
        skillName    := 'Runecrafting';
        skillConst   := SKILL_RUNECRAFTING;
        bankType     := Bank;
        whichBank    := MSI_BANK_AK;
        getMaterials := True;
        autoObjects  := @MSI_CraftRunes;
        bankObjects  := @MSI_BankWithdraw;
        playerSetup  := @MSI_SetupRunecrafting;

        defaults.objects   := [ALTER_RUNECRAFTING];
        defaults.materials := [MATERIAL_ESSENCE_RUNE];
        defaults.tiara     := TIARA_FIRE;

        with pathInfo do
        begin
          name     := 'LOC_AK_BANK to LOC_ALTER_FIRE';
          startLoc := LOC_AK_BANK;
          endLoc   := LOC_ALTER_FIRE;

          reflection := [
            TPointArray([point(3269, 3168), point(3312, 3253)]),

            TPointArray([point(2577, 4846), point(2583, 4840)])
          ];
        {
          spsAreas   := [
            TStringArray([])
          ];
        }
          obstacles[OBS_LOC_TO] := [OBS_RUINS_FIRE];
          obstacles[OBS_LOC_FROM] := [OBS_PORTAL_FIRE];
        end;
      end;

    SCRIPT_RC_WATER:
      with MSI_Scripts[whichScript] do
      begin
        name         := 'Water Runecrafter';
        constant     := whichScript;
        skillName    := 'Runecrafting';
        skillConst   := SKILL_RUNECRAFTING;
        bankType     := Bank;
        whichBank    := MSI_BANK_DB;
        getMaterials := True;
        autoObjects  := @MSI_CraftRunes;
        bankObjects  := @MSI_BankWithdraw;
        playerSetup  := @MSI_SetupRunecrafting;

        defaults.objects   := [ALTER_RUNECRAFTING];
        defaults.materials := [MATERIAL_ESSENCE_RUNE];
        defaults.tiara     := TIARA_WATER;

        with pathInfo do
        begin
          name     := 'LOC_DB_BANK to LOC_ALTER_WATER';
          startLoc := LOC_DB_BANK;
          endLoc   := LOC_ALTER_WATER;

          reflection := [
            TPointArray([point(3093, 3245), point(3183, 3164)]),

            TPointArray([point(3493, 4832), point(3486, 4835)])
          ];
        {
          spsAreas   := [
            TStringArray([])
          ];
        }
          obstacles[OBS_LOC_TO] := [OBS_RUINS_WATER];
          obstacles[OBS_LOC_FROM] := [OBS_PORTAL_WATER];
        end;
      end;

    SCRIPT_RC_MIND:
      with MSI_Scripts[whichScript] do
      begin
        name         := 'Mind Runecrafter';
        constant     := whichScript;
        skillName    := 'Runecrafting';
        skillConst   := SKILL_RUNECRAFTING;
        bankType     := Bank;
        whichBank    := MSI_BANK_FW;
        getMaterials := True;
        autoObjects  := @MSI_CraftRunes;
        bankObjects  := @MSI_BankWithdraw;
        playerSetup  := @MSI_SetupRunecrafting;

        defaults.objects   := [ALTER_RUNECRAFTING];
        defaults.materials := [MATERIAL_ESSENCE_RUNE];
        defaults.tiara     := TIARA_MIND;

        with pathInfo do
        begin
          name     := 'LOC_FW_BANK to LOC_ALTER_MIND';
          startLoc := LOC_FW_BANK;
          endLoc   := LOC_ALTER_MIND;

          reflection := [
            TPointArray([point(2945, 3373), point(2965, 3393),
                         point(2990, 3429), point(2973, 3456),
                         point(2982, 3316)]),

            TPointArray([point(2793, 4829), point(2786, 4839)])
          ];
        {
          spsAreas   := [
            TStringArray([])
          ];
        }
          obstacles[OBS_LOC_TO] := [OBS_RUINS_MIND];
          obstacles[OBS_LOC_FROM] := [OBS_PORTAL_MIND];
        end;
      end;

    SCRIPT_RC_BODY:
      with MSI_Scripts[whichScript] do
      begin
        name         := 'Body Runecrafter';
        constant     := whichScript;
        skillName    := 'Runecrafting';
        skillConst   := SKILL_RUNECRAFTING;
        bankType     := Bank;
        whichBank    := MSI_BANK_EV;
        getMaterials := True;
        autoObjects  := @MSI_CraftRunes;
        bankObjects  := @MSI_BankWithdraw;
        playerSetup  := @MSI_SetupRunecrafting;

        defaults.objects   := [ALTER_RUNECRAFTING];
        defaults.materials := [MATERIAL_ESSENCE_RUNE];
        defaults.tiara     := TIARA_BODY;

        with pathInfo do
        begin
          name     := 'LOC_EV_BANK to LOC_ALTER_BODY';
          startLoc := LOC_EV_BANK;
          endLoc   := LOC_ALTER_BODY;

          reflection := [
            TPointArray([point(3094, 3493), point(3073, 3490),
                         point(3055, 3444)]),

            TPointArray([point(2521, 4834), point(2522, 4838)])
          ];
        {
          spsAreas   := [
            TStringArray([])
          ];
        }
          obstacles[OBS_LOC_TO] := [OBS_RUINS_BODY];
          obstacles[OBS_LOC_FROM] := [OBS_PORTAL_BODY];
        end;
      end;


  end; // big case

  // set all path leg's surfaces to RUNESCAPE_SURFACE if not already set
  {$IFDEF SPS}
  with MSI_Scripts[whichScript] do
  begin
    if (length(pathInfo.spsAreas) <> length(pathInfo.reflection)) then
      MSI_Debug('WARNING: Invalid SPSAreas length for script: '+name);

    if (length(pathInfo.spsSurfaces) <= 0) then
    begin
      setLength(pathInfo.spsSurfaces, length(pathInfo.reflection));

      for i := 0 to high(pathInfo.spsSurfaces) do
        pathInfo.spsSurfaces[i] := RUNESCAPE_SURFACE;
    end;
  end;
  {$ENDIF}

  Result := (MSI_Scripts[whichScript].Name <> '');
end;

(*
MSI_LoadAllScripts
~~~~~~~~~~~~~~~~~~

.. code-block:: pascal

  procedure MSI_LoadAllScripts;

Loads all of MSI's scripts into memory.  Should only be called ONCE in
MSI_Setup.

.. note::

  | Author: Coh3n
  | Last Updated: 28 July 2010 by Coh3n

Example:

.. code-block:: pascal

  MSI_LoadAllScripts;
*)
procedure MSI_LoadAllScripts;
var
  i: Integer;
begin
  for i := 0 to High(MSI_Scripts) do
    MSI_LoadScript(i);
end;
